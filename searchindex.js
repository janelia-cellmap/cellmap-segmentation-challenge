Search.setIndex({"alltitles": {"API": [[25, "api"]], "Adding to this project": [[31, null]], "COSEM": [[30, "cosem"]], "CellMap Schemas": [[0, null], [32, null]], "CellMap Segmentation Challenge": [[25, null]], "Chunked array format": [[30, "chunked-array-format"]], "Clone the repository": [[25, "clone-the-repository"]], "Contents:": [[25, null]], "Contributing": [[0, "contributing"], [32, "contributing"]], "Dataset names": [[30, "dataset-names"]], "Datasets on S3": [[30, "datasets-on-s3"]], "Download the data": [[25, "download-the-data"]], "Downsampling and coordinates": [[30, "downsampling-and-coordinates"]], "Example: creating an N5 hierarchy for Neuroglancer": [[0, "example-creating-an-n5-hierarchy-for-neuroglancer"], [32, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[0, "example-validating-a-container-with-the-cli"], [32, "example-validating-a-container-with-the-cli"]], "Getting started": [[25, "getting-started"]], "Image layout": [[30, "image-layout"]], "Installation": [[0, "installation"], [32, "installation"]], "Links": [[25, "links"]], "Multiple image alignments": [[30, "multiple-image-alignments"]], "Multiresolution image layout": [[30, "multiresolution-image-layout"]], "Multiscale image metadata": [[30, "multiscale-image-metadata"]], "Outline": [[30, null]], "Post-process model predictions": [[25, "post-process-model-predictions"]], "Predict on test data": [[25, "predict-on-test-data"]], "Repository structure": [[25, "repository-structure"]], "S3 layout": [[30, "s3-layout"]], "Set up your environment": [[25, "set-up-your-environment"]], "Submit your final predictions": [[25, "submit-your-final-predictions"]], "Train a model": [[25, "train-a-model"]], "What is a dataset": [[30, "what-is-a-dataset"]], "cellmap-schemas check": [[0, "cellmap-schemas-check"], [32, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[0, "cellmap-schemas-inspect"], [32, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge": [[1, null]], "cellmap_segmentation_challenge.cli": [[2, null]], "cellmap_segmentation_challenge.cli.datasplit": [[3, null]], "cellmap_segmentation_challenge.cli.evaluate": [[4, null]], "cellmap_segmentation_challenge.cli.fetch_data": [[5, null]], "cellmap_segmentation_challenge.cli.predict": [[6, null]], "cellmap_segmentation_challenge.cli.train": [[7, null]], "cellmap_segmentation_challenge.evaluate": [[8, null]], "cellmap_segmentation_challenge.models": [[9, null]], "cellmap_segmentation_challenge.models.model_load": [[10, null]], "cellmap_segmentation_challenge.models.resnet": [[11, null]], "cellmap_segmentation_challenge.models.unet_model_2D": [[12, null]], "cellmap_segmentation_challenge.models.unet_model_3D": [[13, null]], "cellmap_segmentation_challenge.models.vitnet": [[14, null]], "cellmap_segmentation_challenge.postprocess": [[15, null]], "cellmap_segmentation_challenge.predict": [[16, null]], "cellmap_segmentation_challenge.train": [[17, null]], "cellmap_segmentation_challenge.utils": [[18, null]], "cellmap_segmentation_challenge.utils.crops": [[19, null]], "cellmap_segmentation_challenge.utils.dataloader": [[20, null]], "cellmap_segmentation_challenge.utils.datasplit": [[21, null]], "cellmap_segmentation_challenge.utils.fetch_data": [[22, null]], "cellmap_segmentation_challenge.utils.loss": [[23, null]], "cellmap_segmentation_challenge.utils.visualize": [[24, null]], "src": [[26, null]]}, "docnames": ["cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.cli.datasplit", "cellmap_segmentation_challenge.cli.evaluate", "cellmap_segmentation_challenge.cli.fetch_data", "cellmap_segmentation_challenge.cli.predict", "cellmap_segmentation_challenge.cli.train", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.postprocess", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.visualize", "index", "modules", "scheme_docs/api/annotation", "scheme_docs/api/multiscale/cosem", "scheme_docs/api/multiscale/neuroglancer_n5", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.cli.datasplit.rst", "cellmap_segmentation_challenge.cli.evaluate.rst", "cellmap_segmentation_challenge.cli.fetch_data.rst", "cellmap_segmentation_challenge.cli.predict.rst", "cellmap_segmentation_challenge.cli.train.rst", "cellmap_segmentation_challenge.evaluate.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.models.model_load.rst", "cellmap_segmentation_challenge.models.resnet.rst", "cellmap_segmentation_challenge.models.unet_model_2D.rst", "cellmap_segmentation_challenge.models.unet_model_3D.rst", "cellmap_segmentation_challenge.models.vitnet.rst", "cellmap_segmentation_challenge.postprocess.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "cellmap_segmentation_challenge.utils.crops.rst", "cellmap_segmentation_challenge.utils.dataloader.rst", "cellmap_segmentation_challenge.utils.datasplit.rst", "cellmap_segmentation_challenge.utils.fetch_data.rst", "cellmap_segmentation_challenge.utils.loss.rst", "cellmap_segmentation_challenge.utils.visualize.rst", "index.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/api/multiscale/cosem.md", "scheme_docs/api/multiscale/neuroglancer_n5.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md"], "indexentries": {"alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[19, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[1, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.cli": [[2, "module-cellmap_segmentation_challenge.cli", false]], "cellmap_segmentation_challenge.cli.datasplit": [[3, "module-cellmap_segmentation_challenge.cli.datasplit", false]], "cellmap_segmentation_challenge.cli.evaluate": [[4, "module-cellmap_segmentation_challenge.cli.evaluate", false]], "cellmap_segmentation_challenge.cli.fetch_data": [[5, "module-cellmap_segmentation_challenge.cli.fetch_data", false]], "cellmap_segmentation_challenge.cli.predict": [[6, "module-cellmap_segmentation_challenge.cli.predict", false]], "cellmap_segmentation_challenge.cli.train": [[7, "module-cellmap_segmentation_challenge.cli.train", false]], "cellmap_segmentation_challenge.evaluate": [[8, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[9, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[10, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[11, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[12, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[13, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[14, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.postprocess": [[15, "module-cellmap_segmentation_challenge.postprocess", false]], "cellmap_segmentation_challenge.utils": [[18, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[19, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[20, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[21, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[22, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[23, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.visualize": [[24, "module-cellmap_segmentation_challenge.utils.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[23, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[19, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[19, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[19, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[19, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[11, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[11, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[14, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[14, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[14, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[14, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[14, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[23, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[19, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_array_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.get_array_objects", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[21, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[20, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[21, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_fibsem_path() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.get_fibsem_path", false]], "get_group_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.get_group_objects", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.get_url", false]], "gt_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[19, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_url", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[19, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[10, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[10, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[21, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[1, "module-cellmap_segmentation_challenge", false], [2, "module-cellmap_segmentation_challenge.cli", false], [3, "module-cellmap_segmentation_challenge.cli.datasplit", false], [4, "module-cellmap_segmentation_challenge.cli.evaluate", false], [5, "module-cellmap_segmentation_challenge.cli.fetch_data", false], [6, "module-cellmap_segmentation_challenge.cli.predict", false], [7, "module-cellmap_segmentation_challenge.cli.train", false], [8, "module-cellmap_segmentation_challenge.evaluate", false], [9, "module-cellmap_segmentation_challenge.models", false], [10, "module-cellmap_segmentation_challenge.models.model_load", false], [11, "module-cellmap_segmentation_challenge.models.resnet", false], [12, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [13, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [14, "module-cellmap_segmentation_challenge.models.vitnet", false], [15, "module-cellmap_segmentation_challenge.postprocess", false], [18, "module-cellmap_segmentation_challenge.utils", false], [19, "module-cellmap_segmentation_challenge.utils.crops", false], [20, "module-cellmap_segmentation_challenge.utils.dataloader", false], [21, "module-cellmap_segmentation_challenge.utils.datasplit", false], [22, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [23, "module-cellmap_segmentation_challenge.utils.loss", false], [24, "module-cellmap_segmentation_challenge.utils.visualize", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge)": [[16, "cellmap_segmentation_challenge.predict", false]], "process_volume() (in module cellmap_segmentation_challenge.postprocess)": [[15, "cellmap_segmentation_challenge.postprocess.process_volume", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "rescale_volume() (in module cellmap_segmentation_challenge.postprocess)": [[15, "cellmap_segmentation_challenge.postprocess.rescale_volume", false]], "resize_volume() (in module cellmap_segmentation_challenge.postprocess)": [[15, "cellmap_segmentation_challenge.postprocess.resize_volume", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[11, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[11, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[11, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[11, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "save_result_figs() (in module cellmap_segmentation_challenge.utils.visualize)": [[24, "cellmap_segmentation_challenge.utils.visualize.save_result_figs", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[22, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "threshold_volume() (in module cellmap_segmentation_challenge.postprocess)": [[15, "cellmap_segmentation_challenge.postprocess.threshold_volume", false]], "train() (in module cellmap_segmentation_challenge)": [[17, "cellmap_segmentation_challenge.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[14, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[8, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[12, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[13, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[14, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]]}, "objects": {"": [[1, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[2, 0, 0, "-", "cli"], [8, 0, 0, "-", "evaluate"], [9, 0, 0, "-", "models"], [15, 0, 0, "-", "postprocess"], [16, 1, 1, "", "predict"], [17, 1, 1, "", "train"], [18, 0, 0, "-", "utils"]], "cellmap_segmentation_challenge.cli": [[3, 0, 0, "-", "datasplit"], [4, 0, 0, "-", "evaluate"], [5, 0, 0, "-", "fetch_data"], [6, 0, 0, "-", "predict"], [7, 0, 0, "-", "train"]], "cellmap_segmentation_challenge.evaluate": [[8, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [8, 1, 1, "", "save_numpy_class_labels_to_zarr"], [8, 1, 1, "", "score_instance"], [8, 1, 1, "", "score_label"], [8, 1, 1, "", "score_semantic"], [8, 1, 1, "", "score_submission"], [8, 1, 1, "", "score_volume"], [8, 1, 1, "", "unzip_file"]], "cellmap_segmentation_challenge.models": [[10, 0, 0, "-", "model_load"], [11, 0, 0, "-", "resnet"], [12, 0, 0, "-", "unet_model_2D"], [13, 0, 0, "-", "unet_model_3D"], [14, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[10, 1, 1, "", "load_best_val"], [10, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[11, 2, 1, "", "ResNet"], [11, 2, 1, "", "Resnet2D"], [11, 2, 1, "", "Resnet3D"], [11, 2, 1, "", "ResnetBlock2D"], [11, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[11, 3, 1, "", "build_conv_block"], [11, 3, 1, "", "crop"], [11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[11, 3, 1, "", "build_conv_block"], [11, 3, 1, "", "crop"], [11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[12, 2, 1, "", "DoubleConv"], [12, 2, 1, "", "Down"], [12, 2, 1, "", "OutConv"], [12, 2, 1, "", "UNet_2D"], [12, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[12, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[12, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[12, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[12, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[12, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[13, 2, 1, "", "DoubleConv"], [13, 2, 1, "", "Down"], [13, 2, 1, "", "OutConv"], [13, 2, 1, "", "UNet_3D"], [13, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[13, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[13, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[13, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[13, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[13, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[14, 2, 1, "", "Attention"], [14, 2, 1, "", "Block"], [14, 2, 1, "", "CNNEncoder"], [14, 2, 1, "", "Conv3dReLU"], [14, 2, 1, "", "DecoderBlock"], [14, 2, 1, "", "DecoderCup"], [14, 2, 1, "", "DoubleConv"], [14, 2, 1, "", "Down"], [14, 2, 1, "", "Embeddings"], [14, 2, 1, "", "Encoder"], [14, 2, 1, "", "Mlp"], [14, 2, 1, "", "RegistrationHead"], [14, 2, 1, "", "Transformer"], [14, 2, 1, "", "ViTVNet"], [14, 1, 1, "", "get_3DReg_config"], [14, 1, 1, "", "np2th"], [14, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[14, 3, 1, "", "forward"], [14, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.postprocess": [[15, 1, 1, "", "process_volume"], [15, 1, 1, "", "rescale_volume"], [15, 1, 1, "", "resize_volume"], [15, 1, 1, "", "threshold_volume"]], "cellmap_segmentation_challenge.utils": [[19, 0, 0, "-", "crops"], [20, 0, 0, "-", "dataloader"], [21, 0, 0, "-", "datasplit"], [22, 0, 0, "-", "fetch_data"], [23, 0, 0, "-", "loss"], [24, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.utils.crops": [[19, 2, 1, "", "CropRow"], [19, 1, 1, "", "fetch_manifest"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[19, 4, 1, "", "alignment"], [19, 4, 1, "", "dataset"], [19, 4, 1, "", "em_url"], [19, 3, 1, "", "from_csv_row"], [19, 4, 1, "", "gt_url"], [19, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.dataloader": [[20, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[21, 1, 1, "", "get_csv_string"], [21, 1, 1, "", "get_dataset_counts"], [21, 1, 1, "", "make_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[22, 1, 1, "", "copy_store"], [22, 1, 1, "", "get_array_objects"], [22, 1, 1, "", "get_chunk_keys"], [22, 1, 1, "", "get_fibsem_path"], [22, 1, 1, "", "get_group_objects"], [22, 1, 1, "", "get_store_url"], [22, 1, 1, "", "get_url"], [22, 1, 1, "", "partition_copy_store"], [22, 1, 1, "", "read_group"], [22, 1, 1, "", "resolve_em_url"], [22, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[23, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[23, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.visualize": [[24, 1, 1, "", "save_result_figs"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [15, 25, 30], "0": [0, 8, 14, 15, 16, 17, 20, 21, 25, 30, 32], "0001": 17, "03385": 11, "1": [0, 11, 14, 17, 20, 21, 25, 32], "10": [0, 32], "1000": [17, 20], "11": [25, 30], "12": 21, "128": [8, 14, 17], "1512": 11, "16": [0, 30, 32], "180": [17, 20], "2": [0, 8, 11, 14, 16, 25, 30, 32], "2019": 30, "255": 16, "2d": [20, 25, 30], "2d_resnet": 17, "2d_unet": 17, "2x2": 30, "3": [14, 17, 21, 25], "3d": [8, 20, 25], "3d_resnet": 17, "3d_unet": 17, "4": [0, 8, 32], "42": 17, "5": [0, 15, 17, 20, 30, 32], "6": 11, "64": 11, "7": 21, "8": [0, 17, 30, 32], "8x8x8": 25, "8x8x8nm": 25, "A": [8, 11, 19, 21, 25, 30], "And": [0, 32], "As": 30, "At": 30, "But": [0, 30, 32], "By": [21, 30], "For": [0, 8, 16, 20, 25, 30, 32], "If": [15, 16, 17, 21, 30], "In": [0, 30, 32], "It": 25, "OR": 8, "The": [0, 8, 10, 15, 16, 17, 19, 21, 22, 24, 25, 30, 32], "These": 22, "To": [0, 25, 30, 32], "With": 30, "_": [8, 17, 30], "_loss": 23, "_weightedloss": 23, "abbrevi": 30, "abl": 30, "about": 30, "abov": [0, 30, 32], "access": 30, "accord": 30, "account": 25, "accuraci": 8, "acquir": 30, "acronym": 30, "across": 8, "activ": [11, 25], "add": 25, "addit": 30, "addition": [25, 30], "address": [0, 30, 32], "adjac": 30, "adopt": 30, "advent": 30, "affin": 16, "after": [17, 25, 31], "afterward": [12, 13, 14, 23], "against": [0, 8, 32], "aic_desmosom": 30, "aim": 30, "align": 19, "all": [8, 12, 13, 14, 15, 21, 22, 23, 25, 30], "allow": 15, "along": [25, 30], "alreadi": [17, 25, 30], "also": [0, 25, 30, 32], "altern": 30, "although": [12, 13, 14, 23], "alwai": [20, 25], "amazon": 30, "amount": 30, "an": [10, 15, 17, 25, 30], "analysi": 30, "angl": 20, "ani": [0, 17, 20, 30, 32], "annot": [25, 27], "anoth": 30, "anyon": 30, "anyth": 17, "apart": 30, "appli": [11, 15, 17, 20, 30], "applic": [0, 30, 32], "ar": [0, 15, 17, 21, 25, 30, 32], "arang": [0, 32], "arbitrari": 15, "architectur": 17, "argument": [17, 25], "around": 30, "arrai": [0, 8, 15, 20, 22, 25, 32], "array_info": 20, "art": 30, "arxiv": 11, "assum": [25, 30], "attempt": [0, 32], "attent": [14, 26], "attr": [0, 32], "attract": 30, "attribut": [0, 30, 32], "avail": [25, 30], "averag": 30, "ax": [0, 17, 20, 32], "axi": [20, 30], "b": 25, "backend": 30, "background": [8, 25, 30], "base": [0, 30, 32], "basestor": 22, "batch": [17, 20], "batch_siz": [17, 20, 22], "becam": 30, "becaus": [0, 30, 32], "been": 30, "befor": [11, 30], "being": [21, 22], "belong": 16, "below": 25, "best": [10, 17], "better": [10, 30], "beyond": [25, 30], "bilinear": 12, "binari": [8, 25], "bit": 30, "block": [11, 14, 16, 26, 30], "bool": [10, 11, 21], "boolean": 25, "border": 25, "both": [12, 13, 14, 23, 25], "boundlogg": 22, "branch": 31, "brows": 30, "bucket": 30, "build": 30, "build_conv_block": 11, "built": 25, "bulk": 30, "c": [0, 30, 32], "call": [12, 13, 14, 15, 17, 23, 30], "callabl": 15, "came": 30, "campu": [0, 30, 32], "can": [0, 16, 17, 25, 30, 32], "cannot": 30, "care": [12, 13, 14, 23], "cd": 25, "cell": [8, 30], "cellmap": [22, 30, 31], "cellmap_schema": [0, 27, 28, 29, 32], "cellmap_segmentation_challeng": [25, 26], "cellmapdataload": 20, "cellmaplosswrapp": [23, 26], "cellular": 30, "center": 11, "certain": 30, "chanel": 16, "chang": [30, 31], "channel": [11, 16], "checkpoint": [10, 17, 25], "chosen": [20, 30], "chunk": [0, 22, 32], "clariti": 25, "class": [0, 8, 11, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 30, 32], "classmethod": 19, "cli": [25, 26], "client": 30, "clone": 31, "cloud": [0, 30, 32], "cnnencod": [14, 26], "coarsen": 30, "coarser": 30, "code": [30, 31], "coicind": 30, "coin": 30, "collabor": 30, "collect": 30, "com": [25, 31], "combin": [8, 16], "combined_scor": 8, "come": [0, 30, 32], "command": [0, 25, 32], "common": 30, "commun": 30, "compactli": 30, "complet": 30, "complex": 15, "compli": [0, 30, 32], "complic": 30, "compress": 30, "compressor": [0, 32], "compris": 30, "comput": [12, 13, 14, 23], "config": [14, 17], "config_path": 17, "configur": 17, "confirm": [0, 32], "connect": 11, "consist": 30, "constraint": 30, "construct": [11, 17], "constructor": 17, "consum": [0, 30, 32], "contain": [15, 17, 20, 25, 30], "contigu": 30, "continu": 30, "contribut": 25, "conv": [11, 14], "conv3drelu": [14, 26], "conveni": [25, 30], "convent": [0, 30, 32], "convention": 30, "convert": [14, 25, 30], "convolut": 11, "copi": [22, 30], "copy_stor": [22, 26], "core": 22, "corner": 30, "corpuscl": 30, "correct": [25, 30], "correctli": [0, 30, 32], "correspond": [8, 15, 25], "cosem": [0, 28, 32], "cost": 30, "could": [20, 30], "count": 21, "cover": 30, "creat": [19, 22, 25, 30], "crop": [11, 21, 22, 25, 26], "crop_path": 22, "croprow": [19, 26], "csc": 25, "csv": [17, 19, 21], "csv_path": 21, "cuda": 20, "curl": 25, "current": 30, "custom": 25, "data": [0, 8, 11, 15, 16, 17, 20, 21, 22, 30, 32], "data_d": [0, 32], "dataclass": 19, "dataload": [17, 26], "datapath": 21, "datapath_prefix": 21, "dataset": [0, 16, 17, 19, 21, 32], "datasplit": [17, 20, 26], "datasplit_path": [17, 20], "date": 30, "de": 17, "decid": 30, "decis": 30, "declar": 30, "decoderblock": [14, 26], "decodercup": [14, 26], "deem": 30, "default": [11, 15, 16, 17, 21, 22, 25], "defin": [0, 12, 13, 14, 17, 20, 23, 30, 32], "denot": 30, "depend": [25, 30, 31], "depict": 30, "deriv": 30, "describ": 30, "design": [25, 30], "dest": 22, "dest_stor": 22, "detail": 30, "develop": [0, 30, 32], "devic": 20, "dice": 8, "dice_scor": 8, "dict": [8, 15, 16, 21], "dictionari": [8, 16, 17, 20, 21], "did": [0, 30, 32], "differ": 30, "dim": 11, "dimens": [0, 11, 30, 32], "dimension_ord": [0, 32], "dimension_separ": [0, 32], "directli": 30, "directori": [8, 10, 25, 30, 31], "disk": [0, 32], "displai": 30, "disrupt": 30, "distanc": [8, 30], "distinct": 30, "distinguish": 30, "distribut": 30, "divid": 30, "do": [0, 21, 25, 30, 32], "document": [17, 25, 30, 31], "doe": [17, 30], "doubleconv": [12, 13, 14, 26], "down": [12, 13, 14, 26], "downsampl": 11, "downscal": 30, "dry_run": 21, "dtype": [0, 32], "dure": 30, "e": [25, 30], "each": [8, 15, 16, 17, 20, 21, 25, 30], "earli": 30, "earlier": [0, 32], "easi": 25, "edit": 25, "effort": 30, "egment": 30, "either": [20, 25], "electron": 30, "ellular": 30, "em": [0, 21, 25, 30, 32], "em_source_path": 22, "em_source_root": 22, "em_url": 19, "embed": [14, 26], "emit": 30, "encod": [14, 26], "end": [8, 25, 30], "end1": 16, "end2": 16, "endo": 8, "enorm": 30, "ensur": 30, "entail": 30, "entir": 16, "epoch": [17, 20], "equal": 30, "er": 17, "er_palm": 30, "era": 30, "error": [0, 32], "especi": 30, "essenti": 30, "estim": 30, "etc": 30, "evalu": [25, 26], "everi": [12, 13, 14, 23, 30], "exampl": [8, 16, 20, 25, 30], "except": 25, "exclud": [0, 32], "exist": [10, 17, 22, 25, 30], "explain": 30, "express": 30, "extend": 30, "extens": 25, "extra": 25, "f": [0, 32], "face": 30, "factor": 30, "fail": [0, 32], "fals": [8, 11, 12, 13, 14, 21], "far": 30, "fastest": 25, "featur": [14, 30], "feel": 30, "fetch": [19, 25], "fetch_data": 26, "fetch_manifest": [19, 26], "few": 30, "fib": [22, 30], "fibsem": [0, 21, 22, 30, 32], "figur": 24, "figures_save_path": 24, "file": [0, 8, 15, 17, 19, 20, 21, 25, 30, 32], "filenam": [8, 25], "filesystem": 25, "fill_valu": [0, 32], "filter": [0, 32], "find": [21, 30], "fine": 30, "first": [25, 30], "flag": 25, "flexibl": 25, "flip": [0, 32], "float": [8, 15, 16, 20, 21], "fluent": 30, "fluoresc": 30, "folder": 25, "follow": [0, 8, 25, 30, 32], "foo": [0, 32], "footprint": 30, "forc": [21, 30], "force_all_class": 21, "form": [16, 30], "formal": [0, 32], "format": [0, 16, 25, 32], "former": [12, 13, 14, 23], "forward": [11, 12, 13, 14, 23], "found": [21, 30], "freedom": [0, 32], "from": [0, 10, 15, 17, 19, 20, 22, 25, 30, 32], "from_arrai": [0, 32], "from_csv_row": 19, "front": 30, "function": [8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30], "further": 30, "futur": 30, "g": 30, "gener": [8, 17, 22, 25, 30], "generos": 30, "geometr": 8, "get": [20, 21, 22], "get_3dreg_config": [14, 26], "get_array_object": [22, 26], "get_chunk_kei": [22, 26], "get_csv_str": [21, 26], "get_dataload": [20, 26], "get_dataset_count": [21, 26], "get_fibsem_path": [22, 26], "get_group_object": [22, 26], "get_store_url": [22, 26], "get_url": [22, 26], "git": [25, 31], "github": [25, 30, 31], "give": [0, 30, 32], "given": [11, 15, 20, 21], "goal": 30, "googl": 30, "grid": 30, "ground": 8, "ground_truth": 8, "groundtruth": [21, 25], "group": [0, 22, 30, 32], "group_model": [0, 32], "groupmetadata": [0, 32], "grown": 30, "gt": [0, 30, 32], "gt_url": 19, "guid": [0, 32], "ha": 30, "hand": 30, "happen": 30, "hausdorff_distance_max": 8, "haussdorf": 8, "haussdorf_dist": 8, "have": [25, 30], "hela": 30, "help": 25, "here": [0, 25, 30, 32], "hidden_st": 14, "hierachi": 30, "hierarchi": [25, 30], "highest": 30, "histor": 30, "histori": 30, "home": 30, "hook": [12, 13, 14, 23], "host": 30, "hostedtoolcach": 21, "how": [0, 25, 32], "howev": 30, "http": [11, 25, 31], "human": 30, "hwio": 14, "hyperparamet": 17, "i": [0, 8, 10, 11, 15, 16, 17, 20, 21, 25, 32], "i8": [0, 32], "icroscopi": 30, "id": [19, 25], "identifi": 30, "ignor": [12, 13, 14, 17, 23], "imag": [0, 11, 24, 32], "imageri": 30, "img_siz": 14, "immut": 30, "impair": 30, "implement": [11, 30], "import": [0, 32], "improv": 25, "in_channel": [12, 13, 14], "in_dataset": 16, "includ": [16, 17, 21, 30], "independ": 17, "index": 25, "indic": [0, 16, 30, 32], "individu": 30, "induc": 30, "inf": 8, "info": 20, "inform": [17, 25, 30], "initi": [11, 12, 13, 14, 17, 23], "inner_arrai": 22, "input": [0, 11, 15, 16, 17, 20, 24, 32], "input_array_info": [17, 20], "input_block_shap": 16, "input_contain": 15, "input_id": 14, "input_nc": 11, "insid": 30, "instal": [25, 31], "instanc": [8, 12, 13, 14, 23, 25, 30], "instance_class": 8, "instancenorm": 11, "instancenorm2d": 11, "instancenorm3d": 11, "instead": [12, 13, 14, 23, 30], "institut": 30, "instruct": 25, "int": [11, 15, 16, 19, 20], "intend": 30, "inter": 30, "interact": [25, 30], "interest": [16, 30], "intern": [12, 13, 14, 23, 30], "intersect": 8, "introduc": 30, "invent": 30, "involv": 30, "invovl": 20, "iou": 8, "issu": [0, 32], "iter": [17, 20, 22], "iterations_per_epoch": [17, 20], "its": 30, "janelia": [0, 22, 25, 30, 31, 32], "jpeg": 30, "jpg": 30, "jrc": 30, "jrc_cos7": 30, "jrc_dauer": 30, "jrc_hela": [0, 30, 32], "jrc_macrophag": 30, "jrc_mu": 30, "json": [8, 30], "just": [21, 25], "keep": 30, "kei": [15, 22, 30], "kept": 30, "kernel_s": 14, "keyword": 17, "known": 30, "kwarg": [11, 22, 23], "l": 25, "label": [8, 15, 16, 21, 25, 30], "label1": 8, "label2": 8, "label3": 8, "label_nam": [8, 25], "label_scor": 8, "larg": [0, 16, 30, 32], "larger": 30, "largest": 30, "larva": 30, "last": 15, "latest": [10, 17], "latter": [12, 13, 14, 23], "layer": 11, "ld": 8, "learn": [17, 30], "learning_r": 17, "least": [21, 30], "lection": 30, "led": 30, "len": 8, "less": 30, "level": 30, "lib": 21, "librari": [0, 32], "light": 30, "like": [0, 20, 30, 32], "limit": 30, "line": [0, 25, 32], "linear": 11, "link": 30, "list": [8, 15, 16, 17, 20, 21, 22, 25, 30], "lm": 30, "lm_488": 30, "load": [10, 15, 17, 20, 30], "load_best_v": [10, 26], "load_latest": [10, 26], "load_model": 17, "local": [0, 25, 30, 31, 32], "locat": [0, 25, 30, 32], "log": [10, 17, 22, 25], "logdir": [17, 25], "logs_save_path": [10, 17], "long": 21, "longer": 30, "look": 30, "loss": [25, 26], "loss_fn": 23, "lossi": 30, "lot": 30, "low_is_best": 10, "lower": 10, "lt": [0, 30, 32], "lyso": 8, "m": 30, "machin": 30, "mai": [17, 22, 25, 30], "main": [30, 31], "maintain": 30, "make": [21, 25, 30, 31], "make_datasplit_csv": [21, 26], "mamba": 25, "manag": 31, "mani": 30, "manifest": 19, "map": [20, 30], "massiv": 30, "match": [11, 16, 25], "matter": 30, "max_raw": 16, "maximum": 16, "md": [17, 25], "mean": [8, 30], "member": [0, 32], "mere": 30, "mesh": 30, "messag": [0, 32], "metadata": [0, 32], "metamorphos": 30, "method": [0, 30, 32], "metric": 25, "micro": 25, "micromamba": 25, "microscopi": 30, "mid_channel": [12, 13, 14], "might": 30, "migrat": 30, "min_raw": 16, "minimum": 16, "mirror": [17, 20], "mito": [8, 21], "mito_pr": 30, "mito_seg": 30, "mitochondria": 30, "mkdoc": 31, "mlp": [14, 26], "modal": 30, "mode": 25, "model": [0, 16, 17, 26, 30, 32], "model_dump": [0, 32], "model_kwarg": 17, "model_load": [25, 26], "model_nam": 17, "model_save_path": [10, 17], "model_to_load": 17, "modif": 22, "modul": [1, 2, 9, 10, 11, 12, 13, 14, 16, 17, 18, 23, 25], "monitor": [17, 25], "more": [15, 17, 25], "motiv": 30, "mous": 30, "move": 30, "mt": 8, "much": [0, 32], "mulitscal": [0, 32], "multi": [0, 30, 32], "multipl": 16, "multiscal": [0, 28, 29, 32], "multscal": 30, "must": [20, 30], "n": 25, "n5": [25, 30], "n_block": 11, "n_channel": [12, 13, 14], "n_class": [12, 13], "n_downsampl": 11, "name": [0, 8, 16, 17, 21, 25, 32], "navig": 31, "ndarrai": 8, "ndim": 11, "nearest": 30, "need": [0, 12, 13, 14, 17, 23, 25, 30, 32], "needlessli": 30, "nesteddirectorystor": [0, 32], "net": [12, 13, 14], "neuroglanc": [25, 30], "neuroglancer_n5": [0, 29, 32], "never": 30, "new": [25, 30], "newer": 30, "ngf": 11, "ngff": 30, "nm": [0, 25, 32], "nn": [10, 11, 12, 13, 14, 16, 23], "node": 22, "non": [11, 30], "none": [0, 8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 32], "norm_lay": 11, "normal": [8, 11], "normalized_haussdorf_dist": 8, "note": [0, 25, 30, 32], "novo": 17, "np": [0, 8, 32], "np2th": [14, 26], "nuc": [8, 16, 17, 21], "num_voxel": 8, "number": [8, 11, 17, 20, 25, 30], "numpi": [0, 8, 15, 25, 30, 32], "o": [0, 15, 16, 30, 32], "object": [10, 19, 22, 25, 30], "obviou": 30, "often": 30, "oihw": 14, "old": 30, "older": 30, "om": 30, "onc": [25, 30], "one": [12, 13, 14, 21, 23, 25, 30], "onli": [21, 30], "onlin": 25, "open": [0, 30, 32], "openorganel": 30, "oper": [0, 30, 32], "opt": 21, "optim": 17, "option": [15, 16, 17, 20, 21, 25], "order": [0, 15, 32], "org": 11, "organ": [0, 30, 32], "organel": 30, "origin": [11, 30], "other": [17, 30], "otherwis": [21, 25], "our": [0, 30, 32], "out": [0, 30, 32], "out_channel": [12, 13, 14], "out_dataset": 16, "outconv": [12, 13, 26], "outer_arrai": 22, "output": [11, 15, 16, 23, 24], "output_nc": 11, "output_path": 15, "output_shap": 15, "output_voxel_s": 15, "over": [8, 22], "overall_scor": 8, "overhaul": 30, "overlap": 30, "overridden": [12, 13, 14, 23], "overwrit": [8, 25], "own": 30, "pacinian": 30, "pacininan": 30, "packag": [0, 25, 31, 32], "pad": [14, 25], "padding_typ": 11, "page": 25, "paper": [11, 30], "parallel": 30, "param": 11, "paramet": [0, 8, 10, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 32], "paramt": [0, 32], "parlanc": 30, "pars": 30, "part": [12, 13, 30], "parti": 30, "partit": 30, "partition_copy_stor": [22, 26], "pass": [0, 12, 13, 14, 17, 23, 32], "path": [0, 8, 10, 15, 16, 17, 20, 21, 22, 24, 25, 30, 31, 32], "pathlik": [15, 16], "pdf": 11, "per": [16, 17, 20, 25], "perform": [0, 12, 13, 14, 23, 32], "perox": 8, "physic": 30, "piec": 30, "pip": [0, 25, 32], "pixelresolut": [0, 30, 32], "place": 10, "plan": 30, "platform": 30, "pm": 25, "poetri": 31, "pool": 22, "portal": [25, 30], "possibli": 14, "postprocess": [25, 26], "potenti": 30, "pre": 17, "precomput": 30, "pred": 8, "pred_label": 8, "pred_label_path": 8, "pred_volume_path": 8, "predict": [8, 17, 26, 30], "predict_2d": 25, "predict_3d": 25, "prefix": [21, 30], "present": [0, 21, 24, 32], "pressur": 30, "preview": 31, "previou": 30, "primari": 30, "principl": 30, "print": [0, 32], "probabl": [20, 21], "problem": [0, 30, 32], "process": 15, "process_func": 15, "process_volum": [15, 26], "produc": [0, 30, 32], "product": 30, "program": 30, "progress": [17, 25], "projct": 30, "project": [0, 30, 32], "proport": 17, "provid": [0, 17, 20, 25, 30, 32], "pth": [17, 25], "public": 30, "publish": 30, "pull": 31, "purpos": 30, "put": [0, 32], "py": 25, "pydant": [0, 32], "pyramid": 30, "pytest": 31, "python": [0, 15, 17, 21, 25, 30, 32], "python3": 21, "pytorch": 17, "r": 25, "rais": [0, 32], "ran": 30, "randint": 8, "random": [8, 17, 30], "random_se": 17, "randomli": 20, "rang": [0, 8, 20, 32], "rarer": 30, "rate": 17, "raw": [16, 21, 25, 30], "raw_nam": 21, "read": 30, "read_group": [22, 26], "readabl": 30, "readm": [17, 25], "reason": 30, "recip": [12, 13, 14, 23], "recommend": 25, "recon": 21, "reconstruct": 22, "redirect": 30, "reflect": [11, 17], "region": [16, 22, 30], "regist": [12, 13, 14, 23], "registrationhead": [14, 26], "rel": [0, 22, 30, 32], "relu": 11, "remov": 30, "renam": 30, "render": 31, "replic": 11, "repo": 25, "repositori": [30, 31], "repres": [19, 30], "reproduc": 17, "request": [21, 25, 31], "requir": [8, 25, 30], "resblock": 11, "rescal": 15, "rescale_volum": [15, 26], "research": [0, 30, 32], "reshap": [0, 32], "resiz": 15, "resize_volum": [15, 26], "resnet": 26, "resnet2d": [11, 26], "resnet3d": [11, 26], "resnetblock2d": [11, 26], "resnetblock3d": [11, 26], "resolut": 25, "resolv": 22, "resolve_em_url": [22, 26], "resourc": 30, "respect": [21, 25, 30], "respresent": 30, "result": [0, 8, 22, 25, 30, 32], "result_fil": 8, "retriev": 25, "return": [8, 11, 15, 16, 17, 19, 20, 21, 22], "rganel": 30, "roi": 16, "root": 30, "rotat": [17, 20], "row": 19, "run": [12, 13, 14, 17, 23, 25, 31], "s0": [0, 30, 32], "s1": [0, 30, 32], "s2": 30, "s3": [0, 32], "saalfeldlab": 30, "safe": 30, "same": [15, 16, 17, 25, 30], "sampl": [25, 30], "satisfi": 30, "save": [8, 16, 17, 24, 25, 30], "save_numpy_binary_to_zarr": [8, 25], "save_numpy_class_arrays_to_zarr": [8, 26], "save_numpy_class_labels_to_zarr": [8, 26], "save_numpy_labels_to_zarr": [8, 25], "save_path": 8, "save_result_fig": [24, 26], "scalar": 30, "scale": [0, 17, 20, 25, 30, 32], "scene": 30, "schema": [25, 31], "scheme": 30, "score": [8, 10], "score_inst": [8, 26], "score_label": [8, 26], "score_semant": [8, 26], "score_submiss": [8, 26], "score_volum": [8, 26], "screenshot": 30, "script": [17, 25], "scriptmodul": [12, 13, 14, 23], "search": [10, 21, 25], "search_path": [10, 21], "second": 30, "section": 30, "see": [0, 17, 25, 30, 32], "seed": 17, "segment": [8, 20, 30], "select": 30, "self": 19, "sem": [22, 30], "semant": [8, 30], "separ": [16, 30], "sequenc": [16, 20, 24, 30], "serv": 31, "servic": 30, "set": [17, 21, 30], "sever": 30, "sh": 25, "shape": [0, 11, 15, 16, 17, 20, 25, 30, 32], "share": [12, 13, 14, 23, 30], "shell": 25, "ship": [0, 32], "short": 30, "should": [12, 13, 14, 15, 17, 20, 23, 25, 30], "sign": 25, "silent": [12, 13, 14, 17, 23], "similar": 30, "simpl": 30, "simpli": [25, 30], "sinc": [12, 13, 14, 23], "singl": [8, 16, 25, 30], "size": [15, 17, 20, 30], "skip": [11, 14], "skip_channel": 14, "slice": 22, "small": [0, 32], "smaller": 30, "smooth": 30, "so": [0, 30, 32], "softwar": 30, "solv": 30, "some": 30, "sourc": [8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30], "source_stor": 22, "space": 30, "spatial": [11, 17, 20, 30], "spatial_transform": [17, 20], "special": 30, "specif": [0, 30, 32], "specifi": [8, 16, 17, 20, 24, 25, 30], "specimen": 30, "split": [16, 17, 20], "src": 25, "stai": 30, "standard": [11, 30], "start": 30, "start1": 16, "start2": 16, "state": [12, 13, 14, 23], "still": 30, "storag": [0, 22, 30, 32], "store": [0, 22, 30, 32], "str": [8, 10, 11, 15, 16, 17, 19, 20, 21, 22, 24], "strategi": 30, "strict": 30, "stride": 14, "string": [16, 17, 21, 22], "structur": [0, 8, 30, 32], "style": 30, "subclass": [12, 13, 14, 23], "submiss": [8, 25], "submission_path": [8, 25], "submit": 31, "subsampl": 30, "subsequ": 30, "subset_to_slic": [22, 26], "succe": [0, 32], "success": 30, "suffix": 30, "summari": [0, 32], "support": [0, 22, 30, 32], "sure": 25, "swish": [14, 26], "system": 30, "t": 30, "take": [12, 13, 14, 15, 23, 30], "taken": 30, "target": [17, 20, 23, 24, 30], "target_array_info": [17, 20], "tb": [0, 30, 32], "team": [0, 30, 32], "techniqu": 30, "technologi": 30, "tem": 30, "tensor": [23, 24], "tensorboard": [10, 17, 25], "terabyt": [0, 32], "termin": [17, 25], "test": [0, 8, 31, 32], "test_volum": 8, "test_volume_nam": [8, 25], "text": [0, 32], "than": [0, 30, 32], "thei": [0, 16, 25, 30, 32], "them": [12, 13, 14, 22, 23, 25, 30], "thi": [0, 12, 13, 14, 15, 17, 20, 22, 23, 25, 30, 32], "third": 30, "thoroughli": 25, "those": [0, 25, 32], "threadpoolexecutor": 22, "threshold": [15, 30], "threshold_volum": [15, 26], "through": 25, "thu": 30, "thumbnail": 30, "time": [11, 30], "tissu": 30, "tmp": [0, 32], "to_zarr": [0, 32], "todo": 25, "togeth": 30, "toi": [0, 32], "too": [0, 32], "tool": [0, 22, 30, 32], "top": [25, 30], "torch": [10, 11, 16, 20, 24], "track": 30, "tracker": [0, 32], "train": [20, 21, 26], "train_2d": 25, "train_3d": 25, "transform": [14, 17, 20, 26, 30], "transit": 30, "translat": 30, "transpos": [17, 20], "transpose_for_scor": 14, "trasposit": 20, "trilinear": [12, 13], "true": [10, 12, 13, 14, 21, 30], "truth": 8, "truth_label": 8, "truth_path": 8, "try": 30, "tupl": [16, 19, 20, 22], "twice": 30, "two": 30, "type": [8, 11, 16, 17, 19, 20, 21, 22, 30], "typic": 30, "u": [0, 12, 13, 30, 32], "uint16": [0, 30, 32], "uint8": [21, 30], "ultim": 30, "unchang": 30, "under": 30, "underscor": 30, "understand": 30, "unet_2d": [12, 26], "unet_3d": [13, 26], "unet_model_2d": [25, 26], "unet_model_3d": 26, "union": 8, "uniqu": [25, 30], "unit": [0, 30, 32], "until": 30, "unzip": 8, "unzip_fil": [8, 26], "up": [12, 13, 26], "upath": 15, "upsampl": 14, "uri": 22, "url": [0, 19, 22, 30, 32], "us": [0, 15, 16, 17, 20, 21, 22, 25, 30, 31, 32], "usag": [8, 21], "use_batchnorm": 14, "use_bia": 11, "use_dropout": 11, "user": 30, "util": [25, 26], "v": 14, "val": [17, 20], "valid": [10, 11, 17, 20, 21, 25, 30], "validation_prob": [17, 21], "valu": [16, 20, 30], "varieti": 30, "ve": 8, "veri": 30, "version": 30, "vi": 14, "via": 30, "view": [25, 30], "viewabl": 25, "vim": 8, "visual": [26, 30], "visul": 30, "vit": 14, "vitnet": [17, 26], "vitvnet": [14, 26], "volum": [8, 15, 25, 30], "voxel": [8, 15, 25], "wa": 30, "wai": [25, 30], "want": [25, 30], "wasn": 30, "we": [0, 11, 25, 30, 32], "web": 30, "weight": [10, 14, 25], "welcom": 25, "well": [17, 25, 30], "were": 30, "what": [0, 32], "when": [0, 20, 30, 32], "where": [0, 30, 32], "whereev": 30, "whether": [0, 10, 32], "which": [0, 17, 21, 22, 25, 30, 32], "while": [12, 13, 14, 23, 30], "wide": [0, 30, 32], "window": 30, "within": [12, 13, 14, 15, 20, 23, 30], "word": 30, "work": [0, 30, 32], "worker": 20, "workflow": 30, "would": [0, 30, 32], "write": [0, 15, 21, 30, 32], "written": 21, "x": [0, 11, 12, 13, 14, 16, 17, 20, 32], "x1": [12, 13], "x2": [12, 13], "x64": 21, "y": [0, 16, 17, 20, 25, 32], "yarl": 19, "year": 30, "yet": 30, "you": [0, 25, 30, 32], "your": 31, "z": [16, 20], "zarr": [0, 8, 15, 21, 22, 25, 30, 32], "zarr_vers": [0, 32], "zero": 11, "zip": [8, 25], "zip_path": 8, "zoom": 30}, "titles": ["CellMap Schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.cli.datasplit", "cellmap_segmentation_challenge.cli.evaluate", "cellmap_segmentation_challenge.cli.fetch_data", "cellmap_segmentation_challenge.cli.predict", "cellmap_segmentation_challenge.cli.train", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.postprocess", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.visualize", "CellMap Segmentation Challenge", "src", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas"], "titleterms": {"ad": 31, "align": 30, "an": [0, 32], "api": 25, "arrai": 30, "cellmap": [0, 25, 32], "cellmap_segmentation_challeng": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "challeng": 25, "check": [0, 32], "chunk": 30, "cli": [0, 2, 3, 4, 5, 6, 7, 32], "clone": 25, "contain": [0, 32], "content": 25, "contribut": [0, 32], "coordin": 30, "cosem": 30, "creat": [0, 32], "crop": 19, "data": 25, "dataload": 20, "dataset": 30, "datasplit": [3, 21], "download": 25, "downsampl": 30, "environ": 25, "evalu": [4, 8], "exampl": [0, 32], "fetch_data": [5, 22], "final": 25, "format": 30, "get": 25, "hierarchi": [0, 32], "i": 30, "imag": 30, "inspect": [0, 32], "instal": [0, 32], "layout": 30, "link": 25, "loss": 23, "metadata": 30, "model": [9, 10, 11, 12, 13, 14, 25], "model_load": 10, "multipl": 30, "multiresolut": 30, "multiscal": 30, "n5": [0, 32], "name": 30, "neuroglanc": [0, 32], "outlin": 30, "post": 25, "postprocess": 15, "predict": [6, 16, 25], "process": 25, "project": 31, "repositori": 25, "resnet": 11, "s3": 30, "schema": [0, 32], "segment": 25, "set": 25, "src": 26, "start": 25, "structur": 25, "submit": 25, "test": 25, "thi": 31, "train": [7, 17, 25], "unet_model_2d": 12, "unet_model_3d": 13, "up": 25, "util": [18, 19, 20, 21, 22, 23, 24], "valid": [0, 32], "visual": 24, "vitnet": 14, "what": 30, "your": 25}})