Search.setIndex({"alltitles": {"API:": [[8, null]], "Acknowledgements": [[8, "acknowledgements"]], "Adding to this project": [[13, null]], "Aliases": [[0, "aliases"]], "Annotation Classes": [[0, null]], "Available Data": [[1, null]], "COSEM": [[12, "cosem"]], "CellMap Schemas": [[2, null], [14, null]], "CellMap Segmentation Challenge": [[8, null]], "Chunked array format": [[12, "chunked-array-format"]], "Class Categories": [[0, "class-categories"]], "Clone the repository": [[8, "clone-the-repository"]], "Conclusion": [[7, "conclusion"], [9, "conclusion"]], "Contributing": [[2, "contributing"], [14, "contributing"]], "Creating a CellMap Data PyTorch Dataloader": [[7, null]], "Data:": [[8, null]], "Dataset names": [[12, "dataset-names"]], "Datasets on S3": [[12, "datasets-on-s3"]], "Detailed Class Descriptions": [[0, "detailed-class-descriptions"]], "Download the data": [[8, "download-the-data"]], "Downsampling and coordinates": [[12, "downsampling-and-coordinates"]], "Example Usage": [[7, "example-usage"]], "Example: creating an N5 hierarchy for Neuroglancer": [[2, "example-creating-an-n5-hierarchy-for-neuroglancer"], [14, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[2, "example-validating-a-container-with-the-cli"], [14, "example-validating-a-container-with-the-cli"]], "Examples": [[0, "examples"]], "Function Definitions": [[9, "function-definitions"]], "Getting started": [[8, "getting-started"]], "Image layout": [[12, "image-layout"]], "Installation": [[2, "installation"], [14, "installation"]], "Issues": [[8, "issues"]], "Links": [[8, "links"]], "Loading a Pretrained Model Checkpoint": [[9, null]], "Module contents": [[3, "module-cellmap_segmentation_challenge"], [4, "module-cellmap_segmentation_challenge.cli"], [5, "module-cellmap_segmentation_challenge.models"], [6, "module-cellmap_segmentation_challenge.utils"]], "Multiple image alignments": [[12, "multiple-image-alignments"]], "Multiresolution image layout": [[12, "multiresolution-image-layout"]], "Multiscale Structure": [[0, "multiscale-structure"]], "Multiscale image metadata": [[12, "multiscale-image-metadata"]], "Notes": [[7, "notes"], [9, "notes"]], "Outline": [[12, null]], "Overview": [[7, "overview"], [9, "overview"]], "Post-process model predictions": [[8, "post-process-model-predictions"]], "Predict on test data": [[8, "predict-on-test-data"]], "Prerequisites": [[7, "prerequisites"], [9, "prerequisites"]], "Repository structure": [[8, "repository-structure"]], "S3 layout": [[12, "s3-layout"]], "Set up your environment": [[8, "set-up-your-environment"]], "Submit your final predictions": [[8, "submit-your-final-predictions"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "Subpackages": [[3, "subpackages"]], "Table of Contents": [[0, "table-of-contents"], [8, "table-of-contents"]], "Train a model": [[8, "train-a-model"]], "Train:": [[8, null]], "Troubleshooting": [[7, "troubleshooting"], [9, "troubleshooting"]], "Tutorial: Step-by-Step": [[9, "tutorial-step-by-step"]], "Visualize data and predictions": [[8, "visualize-data-and-predictions"]], "What is a dataset": [[12, "what-is-a-dataset"]], "cellmap-schemas check": [[2, "cellmap-schemas-check"], [14, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[2, "cellmap-schemas-inspect"], [14, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge package": [[3, null]], "cellmap_segmentation_challenge.cli package": [[4, null]], "cellmap_segmentation_challenge.cli.datasplit module": [[4, "module-cellmap_segmentation_challenge.cli.datasplit"]], "cellmap_segmentation_challenge.cli.evaluate module": [[4, "module-cellmap_segmentation_challenge.cli.evaluate"]], "cellmap_segmentation_challenge.cli.fetch_data module": [[4, "module-cellmap_segmentation_challenge.cli.fetch_data"]], "cellmap_segmentation_challenge.cli.predict module": [[4, "module-cellmap_segmentation_challenge.cli.predict"]], "cellmap_segmentation_challenge.cli.process module": [[4, "module-cellmap_segmentation_challenge.cli.process"]], "cellmap_segmentation_challenge.cli.speedtest module": [[4, "module-cellmap_segmentation_challenge.cli.speedtest"]], "cellmap_segmentation_challenge.cli.train module": [[4, "module-cellmap_segmentation_challenge.cli.train"]], "cellmap_segmentation_challenge.cli.visualize module": [[4, "module-cellmap_segmentation_challenge.cli.visualize"]], "cellmap_segmentation_challenge.config module": [[3, "module-cellmap_segmentation_challenge.config"]], "cellmap_segmentation_challenge.evaluate module": [[3, "module-cellmap_segmentation_challenge.evaluate"]], "cellmap_segmentation_challenge.models package": [[5, null]], "cellmap_segmentation_challenge.models.model_load module": [[5, "module-cellmap_segmentation_challenge.models.model_load"]], "cellmap_segmentation_challenge.models.resnet module": [[5, "module-cellmap_segmentation_challenge.models.resnet"]], "cellmap_segmentation_challenge.models.unet_model_2D module": [[5, "module-cellmap_segmentation_challenge.models.unet_model_2D"]], "cellmap_segmentation_challenge.models.unet_model_3D module": [[5, "module-cellmap_segmentation_challenge.models.unet_model_3D"]], "cellmap_segmentation_challenge.models.vitnet module": [[5, "module-cellmap_segmentation_challenge.models.vitnet"]], "cellmap_segmentation_challenge.predict module": [[3, "module-cellmap_segmentation_challenge.predict"]], "cellmap_segmentation_challenge.process module": [[3, "module-cellmap_segmentation_challenge.process"]], "cellmap_segmentation_challenge.train module": [[3, "module-cellmap_segmentation_challenge.train"]], "cellmap_segmentation_challenge.utils package": [[6, null]], "cellmap_segmentation_challenge.utils.crops module": [[6, "module-cellmap_segmentation_challenge.utils.crops"]], "cellmap_segmentation_challenge.utils.dataloader module": [[6, "module-cellmap_segmentation_challenge.utils.dataloader"]], "cellmap_segmentation_challenge.utils.datasplit module": [[6, "module-cellmap_segmentation_challenge.utils.datasplit"]], "cellmap_segmentation_challenge.utils.fetch_data module": [[6, "module-cellmap_segmentation_challenge.utils.fetch_data"]], "cellmap_segmentation_challenge.utils.loss module": [[6, "module-cellmap_segmentation_challenge.utils.loss"]], "cellmap_segmentation_challenge.utils.security module": [[6, "module-cellmap_segmentation_challenge.utils.security"]], "cellmap_segmentation_challenge.visualize module": [[3, "module-cellmap_segmentation_challenge.visualize"]], "src": [[10, null]]}, "docnames": ["annotation_classes", "available_data", "cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.utils", "dataloader", "index", "load_model_weights", "modules", "scheme_docs/api/annotation", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["annotation_classes.rst", "available_data.rst", "cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.utils.rst", "dataloader.rst", "index.rst", "load_model_weights.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md"], "indexentries": {"add_layers() (in module cellmap_segmentation_challenge.visualize)": [[3, "cellmap_segmentation_challenge.visualize.add_layers", false]], "alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "all_res (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.all_res", false]], "analyze_script() (in module cellmap_segmentation_challenge.utils.security)": [[6, "cellmap_segmentation_challenge.utils.security.analyze_script", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[3, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.cli": [[4, "module-cellmap_segmentation_challenge.cli", false]], "cellmap_segmentation_challenge.cli.datasplit": [[4, "module-cellmap_segmentation_challenge.cli.datasplit", false]], "cellmap_segmentation_challenge.cli.evaluate": [[4, "module-cellmap_segmentation_challenge.cli.evaluate", false]], "cellmap_segmentation_challenge.cli.fetch_data": [[4, "module-cellmap_segmentation_challenge.cli.fetch_data", false]], "cellmap_segmentation_challenge.cli.predict": [[4, "module-cellmap_segmentation_challenge.cli.predict", false]], "cellmap_segmentation_challenge.cli.process": [[4, "module-cellmap_segmentation_challenge.cli.process", false]], "cellmap_segmentation_challenge.cli.speedtest": [[4, "module-cellmap_segmentation_challenge.cli.speedtest", false]], "cellmap_segmentation_challenge.cli.train": [[4, "module-cellmap_segmentation_challenge.cli.train", false]], "cellmap_segmentation_challenge.cli.visualize": [[4, "module-cellmap_segmentation_challenge.cli.visualize", false]], "cellmap_segmentation_challenge.config": [[3, "module-cellmap_segmentation_challenge.config", false]], "cellmap_segmentation_challenge.evaluate": [[3, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[5, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[5, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[5, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[5, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[5, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[5, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.predict": [[3, "module-cellmap_segmentation_challenge.predict", false]], "cellmap_segmentation_challenge.process": [[3, "module-cellmap_segmentation_challenge.process", false]], "cellmap_segmentation_challenge.train": [[3, "module-cellmap_segmentation_challenge.train", false]], "cellmap_segmentation_challenge.utils": [[6, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[6, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[6, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[6, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[6, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[6, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.security": [[6, "module-cellmap_segmentation_challenge.utils.security", false]], "cellmap_segmentation_challenge.visualize": [[3, "module-cellmap_segmentation_challenge.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[6, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "class_label (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.class_label", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "combine_scores() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.combine_scores", false]], "config (class in cellmap_segmentation_challenge.utils.security)": [[6, "cellmap_segmentation_challenge.utils.security.Config", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "dataset (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "download_file_with_progress() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.download_file_with_progress", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "fetch_test_crop_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_test_crop_manifest", false]], "fetch_zip_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_zip_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[5, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[5, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[5, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[6, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.testcroprow class method)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.from_csv_row", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.zipdatasetrow class method)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[6, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_dataset_name() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_name", false]], "get_formatted_fields() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_formatted_fields", false]], "get_layer() (in module cellmap_segmentation_challenge.visualize)": [[3, "cellmap_segmentation_challenge.visualize.get_layer", false]], "get_raw_path() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_raw_path", false]], "get_s3_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_s3_csv_string", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_test_crops() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.get_test_crops", false]], "get_zip_if_available() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_zip_if_available", false]], "gt_source (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_source", false]], "hausdorff_distance() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.hausdorff_distance", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "id (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.id", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "load_safe_config() (in module cellmap_segmentation_challenge.utils.security)": [[6, "cellmap_segmentation_challenge.utils.security.load_safe_config", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "make_s3_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.make_s3_datasplit_csv", false]], "match_crop_space() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.match_crop_space", false]], "missing_volume_score() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.missing_volume_score", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[3, "module-cellmap_segmentation_challenge", false], [3, "module-cellmap_segmentation_challenge.config", false], [3, "module-cellmap_segmentation_challenge.evaluate", false], [3, "module-cellmap_segmentation_challenge.predict", false], [3, "module-cellmap_segmentation_challenge.process", false], [3, "module-cellmap_segmentation_challenge.train", false], [3, "module-cellmap_segmentation_challenge.visualize", false], [4, "module-cellmap_segmentation_challenge.cli", false], [4, "module-cellmap_segmentation_challenge.cli.datasplit", false], [4, "module-cellmap_segmentation_challenge.cli.evaluate", false], [4, "module-cellmap_segmentation_challenge.cli.fetch_data", false], [4, "module-cellmap_segmentation_challenge.cli.predict", false], [4, "module-cellmap_segmentation_challenge.cli.process", false], [4, "module-cellmap_segmentation_challenge.cli.speedtest", false], [4, "module-cellmap_segmentation_challenge.cli.train", false], [4, "module-cellmap_segmentation_challenge.cli.visualize", false], [5, "module-cellmap_segmentation_challenge.models", false], [5, "module-cellmap_segmentation_challenge.models.model_load", false], [5, "module-cellmap_segmentation_challenge.models.resnet", false], [5, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [5, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [5, "module-cellmap_segmentation_challenge.models.vitnet", false], [6, "module-cellmap_segmentation_challenge.utils", false], [6, "module-cellmap_segmentation_challenge.utils.crops", false], [6, "module-cellmap_segmentation_challenge.utils.dataloader", false], [6, "module-cellmap_segmentation_challenge.utils.datasplit", false], [6, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [6, "module-cellmap_segmentation_challenge.utils.loss", false], [6, "module-cellmap_segmentation_challenge.utils.security", false]], "name (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.name", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "package_submission() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.package_submission", false]], "package_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.package_submission", false]], "padding (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.padding", false]], "parse_s3_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.parse_s3_url", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.predict", false]], "predict() (in module cellmap_segmentation_challenge.predict)": [[3, "cellmap_segmentation_challenge.predict.predict", false]], "predict_orthoplanes() (in module cellmap_segmentation_challenge.predict)": [[3, "cellmap_segmentation_challenge.predict.predict_orthoplanes", false]], "process() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.process", false]], "process() (in module cellmap_segmentation_challenge.process)": [[3, "cellmap_segmentation_challenge.process.process", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "resize_array() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.resize_array", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.save_numpy_class_labels_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.score_submission", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "shape (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.shape", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "testcroprow (class in cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow", false]], "train() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.train", false]], "train() (in module cellmap_segmentation_challenge.train)": [[3, "cellmap_segmentation_challenge.train.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "translation (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.translation", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "url (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.url", false]], "visualize() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.visualize", false]], "visualize() (in module cellmap_segmentation_challenge.visualize)": [[3, "cellmap_segmentation_challenge.visualize.visualize", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]], "voxel_size (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.voxel_size", false]], "zip_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.zip_submission", false]], "zipdatasetrow (class in cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow", false]]}, "objects": {"": [[3, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[4, 0, 0, "-", "cli"], [3, 0, 0, "-", "config"], [3, 0, 0, "-", "evaluate"], [5, 0, 0, "-", "models"], [3, 1, 1, "", "package_submission"], [3, 1, 1, "", "predict"], [3, 0, 0, "-", "predict"], [3, 1, 1, "", "process"], [3, 0, 0, "-", "process"], [3, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [3, 1, 1, "", "save_numpy_class_labels_to_zarr"], [3, 1, 1, "", "score_submission"], [3, 1, 1, "", "train"], [3, 0, 0, "-", "train"], [6, 0, 0, "-", "utils"], [3, 1, 1, "", "visualize"], [3, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.cli": [[4, 0, 0, "-", "datasplit"], [4, 0, 0, "-", "evaluate"], [4, 0, 0, "-", "fetch_data"], [4, 0, 0, "-", "predict"], [4, 0, 0, "-", "process"], [4, 0, 0, "-", "speedtest"], [4, 0, 0, "-", "train"], [4, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.evaluate": [[3, 1, 1, "", "combine_scores"], [3, 1, 1, "", "hausdorff_distance"], [3, 1, 1, "", "match_crop_space"], [3, 1, 1, "", "missing_volume_score"], [3, 1, 1, "", "package_submission"], [3, 1, 1, "", "resize_array"], [3, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [3, 1, 1, "", "save_numpy_class_labels_to_zarr"], [3, 1, 1, "", "score_instance"], [3, 1, 1, "", "score_label"], [3, 1, 1, "", "score_semantic"], [3, 1, 1, "", "score_submission"], [3, 1, 1, "", "score_volume"], [3, 1, 1, "", "unzip_file"], [3, 1, 1, "", "zip_submission"]], "cellmap_segmentation_challenge.models": [[5, 0, 0, "-", "model_load"], [5, 0, 0, "-", "resnet"], [5, 0, 0, "-", "unet_model_2D"], [5, 0, 0, "-", "unet_model_3D"], [5, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[5, 1, 1, "", "load_best_val"], [5, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[5, 2, 1, "", "ResNet"], [5, 2, 1, "", "Resnet2D"], [5, 2, 1, "", "Resnet3D"], [5, 2, 1, "", "ResnetBlock2D"], [5, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[5, 3, 1, "", "build_conv_block"], [5, 3, 1, "", "crop"], [5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[5, 3, 1, "", "build_conv_block"], [5, 3, 1, "", "crop"], [5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[5, 2, 1, "", "DoubleConv"], [5, 2, 1, "", "Down"], [5, 2, 1, "", "OutConv"], [5, 2, 1, "", "UNet_2D"], [5, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[5, 2, 1, "", "DoubleConv"], [5, 2, 1, "", "Down"], [5, 2, 1, "", "OutConv"], [5, 2, 1, "", "UNet_3D"], [5, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[5, 2, 1, "", "Attention"], [5, 2, 1, "", "Block"], [5, 2, 1, "", "CNNEncoder"], [5, 2, 1, "", "Conv3dReLU"], [5, 2, 1, "", "DecoderBlock"], [5, 2, 1, "", "DecoderCup"], [5, 2, 1, "", "DoubleConv"], [5, 2, 1, "", "Down"], [5, 2, 1, "", "Embeddings"], [5, 2, 1, "", "Encoder"], [5, 2, 1, "", "Mlp"], [5, 2, 1, "", "RegistrationHead"], [5, 2, 1, "", "Transformer"], [5, 2, 1, "", "ViTVNet"], [5, 1, 1, "", "get_3DReg_config"], [5, 1, 1, "", "np2th"], [5, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.predict": [[3, 1, 1, "", "predict"], [3, 1, 1, "", "predict_orthoplanes"]], "cellmap_segmentation_challenge.process": [[3, 1, 1, "", "process"]], "cellmap_segmentation_challenge.train": [[3, 1, 1, "", "train"]], "cellmap_segmentation_challenge.utils": [[6, 0, 0, "-", "crops"], [6, 0, 0, "-", "dataloader"], [6, 0, 0, "-", "datasplit"], [6, 0, 0, "-", "fetch_data"], [6, 0, 0, "-", "loss"], [6, 0, 0, "-", "security"]], "cellmap_segmentation_challenge.utils.crops": [[6, 2, 1, "", "CropRow"], [6, 2, 1, "", "TestCropRow"], [6, 2, 1, "", "ZipDatasetRow"], [6, 1, 1, "", "fetch_manifest"], [6, 1, 1, "", "fetch_test_crop_manifest"], [6, 1, 1, "", "fetch_zip_manifest"], [6, 1, 1, "", "get_test_crops"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[6, 4, 1, "", "alignment"], [6, 4, 1, "", "dataset"], [6, 4, 1, "", "em_url"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "gt_source"], [6, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.crops.TestCropRow": [[6, 4, 1, "", "class_label"], [6, 4, 1, "", "dataset"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "id"], [6, 4, 1, "", "shape"], [6, 4, 1, "", "translation"], [6, 4, 1, "", "voxel_size"]], "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow": [[6, 4, 1, "", "all_res"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "name"], [6, 4, 1, "", "padding"], [6, 4, 1, "", "url"]], "cellmap_segmentation_challenge.utils.dataloader": [[6, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[6, 1, 1, "", "get_csv_string"], [6, 1, 1, "", "get_dataset_counts"], [6, 1, 1, "", "get_dataset_name"], [6, 1, 1, "", "get_formatted_fields"], [6, 1, 1, "", "get_raw_path"], [6, 1, 1, "", "get_s3_csv_string"], [6, 1, 1, "", "make_datasplit_csv"], [6, 1, 1, "", "make_s3_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[6, 1, 1, "", "copy_store"], [6, 1, 1, "", "download_file_with_progress"], [6, 1, 1, "", "get_chunk_keys"], [6, 1, 1, "", "get_store_url"], [6, 1, 1, "", "get_zip_if_available"], [6, 1, 1, "", "parse_s3_url"], [6, 1, 1, "", "partition_copy_store"], [6, 1, 1, "", "read_group"], [6, 1, 1, "", "resolve_em_url"], [6, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[6, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.security": [[6, 2, 1, "", "Config"], [6, 1, 1, "", "analyze_script"], [6, 1, 1, "", "load_safe_config"]], "cellmap_segmentation_challenge.visualize": [[3, 1, 1, "", "add_layers"], [3, 1, 1, "", "get_layer"], [3, 1, 1, "", "visualize"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [3, 8, 9, 12], "0": [2, 3, 5, 6, 7, 8, 12, 14], "0001": [3, 7], "03385": 5, "1": [1, 2, 3, 5, 6, 7, 8, 14], "10": [1, 2, 3, 14], "1000": [3, 6, 7], "11": [8, 12], "1109": 3, "12": [3, 6], "128": [3, 5, 7, 8], "14": 1, "1512": 5, "16": [2, 7, 12, 14], "180": [3, 6, 7], "18tb": 8, "1994": 3, "1a": 8, "2": [1, 2, 3, 5, 7, 8, 12, 14], "2019": 12, "2024": 3, "23": 1, "234": 8, "236": 8, "2d": [3, 6, 7, 8, 12], "2d_resnet": 3, "2d_unet": 3, "2x2": 12, "3": [3, 5, 6, 7, 8], "36": 8, "3d": [3, 6, 7, 8], "3d_resnet": 3, "3d_unet": 3, "4": [2, 3, 14], "42": 3, "4f": 7, "5": [2, 3, 6, 7, 12, 14], "566": 3, "568": 3, "576361": 3, "5d": 3, "6": [5, 8], "6006": 8, "64": 5, "7": 8, "8": [2, 3, 6, 7, 12, 14], "8155": 3, "820mbp": 8, "8x8x8": 8, "8x8x8nm": 8, "9": 1, "A": [0, 3, 5, 6, 8, 9, 12], "And": [2, 14], "As": [8, 12], "At": 12, "But": [2, 12, 14], "By": [6, 9, 12], "For": [0, 2, 3, 6, 8, 9, 12, 14], "If": [3, 6, 7, 8, 9, 12], "In": [0, 2, 3, 12, 14], "It": [3, 7], "No": 9, "OR": 3, "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 14], "There": 8, "These": [0, 1, 7, 9], "To": [2, 8, 12, 14], "With": [9, 12], "_": [3, 12], "_loss": 6, "_weightedloss": 6, "abbrevi": 12, "abl": [8, 12], "about": 12, "abov": [0, 2, 8, 12, 14], "access": [8, 12], "accord": [9, 12], "account": 8, "accuraci": 3, "acquir": 12, "acronym": 12, "across": 3, "activ": [5, 8], "ad": 8, "adam": 7, "add": 3, "add_lay": [3, 10], "add_scalar": 9, "addit": [6, 8, 12], "addition": [0, 8, 9, 12], "address": [2, 8, 12, 14], "adjac": 12, "adjust": [3, 7], "adopt": 12, "advanc": 8, "advent": 12, "aemmav": 8, "after": [3, 6, 8, 9, 13], "afterward": [5, 6], "against": [2, 3, 14], "aggreg": 0, "aic_desmosom": 12, "aim": 12, "al": 3, "alia": 0, "alias": 8, "align": [3, 6, 7, 9], "all": [0, 3, 5, 6, 8, 9, 12], "all_r": [3, 6], "allow": [8, 9], "along": [8, 12], "alreadi": [3, 8, 12], "also": [2, 8, 9, 12, 14], "altern": [0, 8, 12], "although": [5, 6], "alwai": [6, 8], "amazon": 12, "amount": 12, "an": [0, 3, 5, 8, 12], "analysi": [0, 12], "analyz": [6, 9], "analyze_script": [3, 6], "angl": 6, "ani": [2, 3, 6, 8, 9, 12, 14], "annot": [8, 11], "anoth": 12, "anyon": 12, "anyth": 3, "apart": 12, "append": 3, "appl": 8, "appli": [3, 5, 6, 8, 12], "applic": [2, 12, 14], "approxim": 8, "ar": [0, 1, 2, 3, 6, 7, 8, 9, 12, 14], "arang": [2, 14], "arbitrari": 3, "architectur": [3, 9], "argument": [3, 6, 8], "around": 12, "arr": 3, "arrai": [2, 3, 6, 7, 8, 14], "array_info": [6, 7], "art": 12, "arxiv": 5, "ask": 8, "assign": 8, "associ": 9, "assum": [3, 7, 8, 12], "ast": 6, "atom": 0, "attempt": [2, 14], "attent": [3, 5], "attr": [2, 3, 14], "attract": 12, "attribut": [2, 3, 12, 14], "augment": 7, "avail": [3, 6, 7, 8, 12], "averag": [3, 12], "avg_val_loss": 7, "avweigel": 8, "ax": [2, 3, 6, 7, 14], "axi": [6, 12], "b": 8, "back": 7, "backend": 12, "background": [3, 8, 12], "backward": [3, 7], "base": [0, 2, 3, 5, 6, 8, 9, 12, 14], "base_data_path": 8, "base_path": 6, "basestor": 6, "bash": 8, "batch": [3, 6, 7, 8], "batch_loss": 7, "batch_siz": [3, 6, 7], "bcewithlogitsloss": 7, "becam": 12, "becaus": [2, 12, 14], "been": [3, 12], "befor": [5, 8, 12], "beginn": 8, "behavior": 9, "being": 6, "below": [0, 1, 7, 8], "best": [3, 5, 9], "better": [3, 5, 9, 12], "between": 3, "beyond": [8, 12], "bilinear": 5, "binari": [3, 8], "biolog": 1, "bit": 12, "block": [3, 5, 12], "bool": [3, 5, 6, 9], "boolean": [6, 8], "border": 8, "both": [3, 5, 6, 8], "brain": 1, "branch": 13, "broad": [0, 1], "broader": 0, "brows": 12, "browser": 8, "bucket": [3, 12], "build": 12, "build_conv_block": [3, 5], "built": 8, "bulk": 12, "c": [2, 8, 12, 14], "calcul": 3, "call": [3, 5, 6, 8, 12], "came": 12, "campu": [2, 12, 14], "can": [1, 2, 3, 7, 8, 9, 12, 14], "cannot": 12, "care": [5, 6], "categor": 0, "categori": 8, "cd": 8, "cell": [1, 3, 8, 12], "cellmap": [1, 3, 6, 12, 13], "cellmap_data": 7, "cellmap_schema": [2, 11, 14], "cellmap_segmentation_challeng": [7, 8, 10], "cellmapdataload": [6, 7], "cellmapdatasplit": 7, "cellmaplosswrapp": [3, 6], "cellular": [0, 12], "center": 5, "certain": 12, "challeng": [1, 3, 6], "chang": [8, 12, 13], "channel": 5, "check": 7, "checkpoint": [3, 5, 8], "chosen": [6, 12], "chunk": [2, 3, 6, 14], "citeseerx": 3, "clariti": 8, "class": [2, 3, 5, 6, 7, 8, 12, 14], "class_label": [3, 6], "classmethod": 6, "cli": [3, 8, 10], "click": 1, "client": 12, "clone": 13, "cloud": [2, 12, 14], "cnnencod": [3, 5], "coarsen": 12, "coarser": 12, "code": [7, 8, 9, 12, 13], "coicind": 12, "coin": 12, "collabor": 12, "collect": [0, 1, 12], "column": [0, 1], "com": [6, 8, 13], "combin": 3, "combine_scor": [3, 10], "combined_scor": 3, "come": [1, 2, 12, 14], "comma": 3, "command": [2, 8, 14], "common": [0, 12], "commun": 12, "compactli": 12, "compar": 8, "compat": [0, 6, 7], "complet": 12, "compli": [2, 12, 14], "complic": 12, "compon": [0, 8], "comprehens": 0, "compress": [8, 12], "compressor": [2, 14], "compris": [0, 12], "comput": [3, 5, 6, 7, 8, 9], "conclus": 8, "conda": 8, "config": [5, 6, 8, 10], "config_path": [3, 6], "configur": [3, 6, 7, 8], "confirm": [2, 7, 14], "congruent": 3, "connect": [5, 8], "consid": [3, 9], "consist": 12, "constitu": 0, "constraint": 12, "construct": [3, 5, 9], "constructor": 3, "consum": [2, 12, 14], "contain": [0, 3, 6, 8, 9, 12], "content": 10, "context": 1, "contigu": 12, "continu": [9, 12], "contribut": 8, "conv": 5, "conv2d": 7, "conv3drelu": [3, 5], "conveni": [8, 12], "convent": [0, 2, 12, 14], "convention": 12, "convert": [5, 8, 12], "convolut": 5, "coordin": 3, "copi": [6, 12], "copy_stor": [3, 6], "core": 6, "corner": 12, "corpuscl": 12, "correct": [7, 8, 9, 12], "correctli": [2, 7, 12, 14], "correspond": [3, 8, 9], "cosem": [2, 14], "cost": 12, "could": [6, 12], "count": 6, "cover": 12, "cpu": [3, 6, 7], "creat": [3, 6, 8, 12], "criterion": 7, "crop": [0, 1, 3, 5, 8, 10], "crop_nam": [3, 6], "crop_path": 6, "croprow": [3, 6], "csc": 8, "csv": [3, 6, 7], "csv_path": 6, "cuda": [3, 6, 7], "cultur": 1, "curl": 8, "current": 12, "custom": 8, "d": 8, "data": [0, 2, 3, 5, 6, 9, 12, 14], "data_d": [2, 14], "data_path": 3, "dataclass": 6, "dataload": [3, 8, 10], "datapath": 6, "dataset": [0, 1, 2, 3, 6, 7, 8, 14], "dataset_nam": 3, "dataset_writer_kwarg": 3, "datasplit": [3, 7, 10], "datasplit_path": [3, 6, 7], "date": 12, "de": 3, "decid": 12, "decis": 12, "declar": 12, "decoderblock": [3, 5], "decodercup": [3, 5], "deem": 12, "default": [3, 5, 6, 8], "defin": [0, 2, 3, 5, 6, 7, 8, 9, 12, 14], "definit": 8, "demonstr": [7, 9], "denot": 12, "depend": [3, 7, 8, 12, 13], "depict": 12, "deploy": 9, "deriv": [1, 12], "descend": 9, "describ": [8, 12], "descript": 8, "design": [8, 12], "desir": 3, "dest": 6, "dest_stor": 6, "detail": [7, 8, 12], "detect": 6, "determin": 9, "develop": [2, 8, 12, 14], "devic": [3, 6, 7], "dice": 3, "dice_scor": 3, "dict": [3, 6], "dictionari": [3, 6, 7, 9], "did": [2, 12, 14], "differ": [0, 9, 12], "dim": 5, "dimens": [2, 3, 5, 7, 12, 14], "dimension_ord": [2, 14], "dimension_separ": [2, 14], "direct": 3, "directli": 12, "directori": [3, 5, 8, 9, 12, 13], "discuss": 8, "disk": [2, 14], "displai": 12, "disrupt": 12, "distanc": [3, 12], "distinct": [1, 12], "distinguish": 12, "distribut": 12, "divid": 12, "do": [2, 6, 8, 9, 12, 14], "do_orthoplan": 3, "document": [0, 3, 7, 8, 12, 13], "doe": [3, 12], "doi": 3, "don": 9, "doubleconv": [3, 5], "down": [3, 5], "download_file_with_progress": [3, 6], "downsampl": 5, "downscal": 12, "draw": 6, "driver": 7, "drosophila": 1, "dry_run": 6, "dtype": [2, 14], "dubuisson": 3, "dure": [8, 9, 12], "e": [3, 7, 8, 9, 12], "each": [0, 1, 3, 6, 8, 9, 12], "earli": 12, "earlier": [2, 14], "easi": 8, "easier": 9, "easili": 7, "echrom": 0, "edit": 8, "edu": 3, "effici": 0, "effort": 12, "effortlessli": 9, "efib": 1, "egment": 12, "either": [0, 6, 8], "electron": 12, "element": 3, "ellular": 12, "els": 7, "em": [2, 3, 6, 8, 12, 14], "em_source_path": 6, "em_source_root": 6, "em_url": [3, 6], "embed": [3, 5], "emit": 12, "en": 3, "encod": [3, 5], "encompass": 0, "encount": [7, 8], "end": [3, 8, 9, 12], "endo": 3, "endoplasm": 0, "enorm": 12, "ensur": [7, 8, 9, 12], "entail": 12, "entir": [3, 6], "envelop": 0, "epoch": [3, 6, 7, 9], "equal": 12, "er": [0, 3, 7, 8], "er_lum": 0, "er_mem": 0, "er_palm": 12, "era": 12, "eres_lum": 0, "eres_mem": 0, "error": [2, 8, 14], "especi": 12, "essenti": 12, "estim": 12, "et": 3, "etc": [3, 7, 8, 12], "euchromatin": 0, "euclidean": 3, "eval": [7, 9], "evalu": [6, 8, 9, 10], "event": 9, "everi": [5, 6, 12], "everytim": 6, "exact": 9, "exampl": [3, 6, 8, 9, 12], "except": 8, "exclud": [2, 14], "execut": 8, "exist": [3, 5, 8, 12], "exit": 0, "expand": 1, "expect": [3, 9], "experi": 9, "explain": [7, 12], "express": [8, 12], "extend": 12, "extens": 8, "extra": 8, "extract": 9, "f": [2, 7, 9, 14], "face": 12, "facilit": 0, "factor": 12, "fail": [2, 9, 14], "fall": 7, "fals": [3, 5, 6, 7, 9], "far": 12, "faster": 8, "fastest": 8, "featur": [5, 8, 12], "feel": [8, 12], "fetch": [6, 8], "fetch_all_em_resolut": 6, "fetch_data": [3, 10], "fetch_manifest": [3, 6], "fetch_test_crop_manifest": [3, 6], "fetch_zip_manifest": [3, 6], "few": 12, "fib": 12, "fibsem": [2, 3, 6, 12, 14], "field": 6, "file": [2, 3, 6, 7, 8, 9, 12, 14], "filenam": [3, 8, 9], "filepath": 6, "filesystem": 8, "fill_valu": [2, 14], "filter": [2, 8, 14], "find": [6, 9, 12], "fine": [9, 12], "first": 12, "flag": 8, "flexibl": 8, "flip": [2, 14], "float": [3, 6], "fluent": 12, "fluoresc": 12, "folder": 8, "follow": [2, 3, 8, 12, 14], "foo": [2, 14], "footprint": 12, "forc": [6, 12], "force_all_class": 6, "forg": 8, "form": 12, "formal": [2, 14], "format": [2, 3, 6, 8, 9, 14], "former": [5, 6], "forward": [3, 5, 6], "found": [6, 8, 9, 12], "free": 8, "freedom": [2, 14], "from": [1, 2, 3, 5, 6, 7, 8, 9, 12, 14], "from_arrai": [2, 14], "from_csv_row": [3, 6], "front": 12, "full": [3, 8], "function": [3, 5, 6, 7, 8, 12], "fundament": 0, "further": [9, 12], "futur": 12, "g": [7, 9, 12], "gb": 8, "gener": [3, 6, 8, 12], "generos": 12, "geometr": 3, "get": [3, 6, 7, 9], "get_3dreg_config": [3, 5], "get_chunk_kei": [3, 6], "get_csv_str": [3, 6], "get_dataload": [3, 6, 7], "get_dataset_count": [3, 6], "get_dataset_nam": [3, 6], "get_formatted_field": [3, 6], "get_lay": [3, 10], "get_raw_path": [3, 6], "get_s3_csv_str": [3, 6], "get_store_url": [3, 6], "get_test_crop": [3, 6], "get_zip_if_avail": [3, 6], "git": [8, 13], "github": [8, 12, 13], "githubusercont": 6, "give": [2, 12, 14], "given": [3, 5, 6, 8, 9], "glob": 9, "global": 8, "goal": 12, "googl": 12, "gpu": 7, "grid": 12, "ground": 3, "ground_truth": 3, "groundtruth": [3, 6, 8], "group": [0, 1, 2, 6, 12, 14], "group_id": 0, "group_model": [2, 14], "groupmetadata": [2, 14], "grown": 12, "gt": [2, 3, 8, 12, 14], "gt_sourc": [3, 6], "guid": [2, 7, 9, 14], "ha": [0, 3, 9, 12], "hand": 12, "handl": [3, 7], "happen": 12, "happi": 8, "hausdorff": 3, "hausdorff_dist": [3, 10], "hausdorff_distance_max": 3, "haussdorf": 3, "haussdorf_dist": 3, "have": [0, 3, 7, 8, 9, 12], "hchrom": 0, "hd": 3, "head": 6, "heart": 1, "hela": 12, "help": [8, 9], "here": [2, 8, 9, 12, 14], "heterochromatin": 0, "hidden_st": 5, "hierachi": 12, "hierarch": 0, "hierarchi": [8, 12], "high": 0, "highest": [9, 12], "highli": 8, "histor": 12, "histori": 12, "home": 12, "hook": [5, 6], "host": 12, "hostedtoolcach": [3, 6], "hour": 8, "how": [2, 7, 8, 9, 14], "howev": 12, "http": [3, 5, 6, 8, 13], "human": [1, 12], "hwio": 5, "hyperparamet": 3, "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14], "i8": [2, 14], "icpr": 3, "icpr94": 3, "icroscopi": 12, "id": [3, 6, 8], "idea": 8, "ideal": 9, "identifi": [0, 12], "ignor": [3, 5, 6], "imag": [2, 3, 5, 14], "image0": 3, "image1": 3, "imageri": 12, "img_siz": 5, "immut": 12, "impair": 12, "implement": [5, 12], "import": [2, 6, 7, 9, 14], "improv": 8, "in_channel": 5, "includ": [0, 1, 3, 6, 7, 8, 12], "include_miss": 3, "inclus": 0, "independ": 3, "index": 8, "indic": [2, 6, 8, 12, 14], "individu": [0, 12], "induc": 12, "inf": 3, "infer": 9, "infin": 3, "info": [6, 7], "inform": [0, 3, 8, 12], "initi": [3, 5, 6, 9], "inner_arrai": 6, "input": [2, 3, 5, 6, 7, 14], "input_array_info": [3, 6, 7], "input_id": 5, "input_nc": 5, "input_path": 3, "input_search_path": 3, "insid": 12, "instal": [7, 8, 9, 13], "instanc": [3, 5, 6, 8, 9, 12], "instance_class": 3, "instancenorm": 5, "instancenorm2d": 5, "instancenorm3d": 5, "instead": [5, 6, 12], "institut": 12, "instruct": 8, "int": [3, 5, 6], "integ": 3, "integr": [7, 9], "intend": 12, "inter": 12, "interact": [8, 12], "interest": 12, "intern": [5, 6, 12], "internet": 8, "interpol": 3, "intersect": 3, "introduc": 12, "invent": 12, "invok": 8, "involv": 12, "invovl": 6, "iou": 3, "is_avail": 7, "isotrop": 3, "israel": 3, "issu": [2, 6, 7, 14], "ist": 3, "item": 7, "iter": [3, 6, 7], "iterations_per_epoch": [3, 6, 7], "its": [0, 3, 6, 12], "jain": 3, "janelia": [2, 6, 8, 12, 13, 14], "jeff": 3, "jerusalem": 3, "jonesa3": 8, "jpeg": 12, "jpg": 12, "jrc": 12, "jrc_cos7": [8, 12], "jrc_dauer": 12, "jrc_hela": [2, 12, 14], "jrc_macrophag": 12, "jrc_mu": 12, "json": [3, 12], "just": [6, 8], "k": [3, 8], "keep": [9, 12], "kei": [1, 6, 7, 9, 12], "kept": [6, 12], "kernel_s": [5, 7], "keyword": [3, 6], "kidnei": 1, "kind": 3, "known": 12, "kwarg": [5, 6], "l": 8, "label": [3, 6, 8, 12], "label1": 3, "label2": 3, "label3": 3, "label_nam": [3, 8], "label_scor": 3, "larg": [2, 3, 12, 14], "larger": 12, "largest": [3, 12], "larva": 12, "latest": [3, 5, 9], "latter": [5, 6], "layer": [3, 5], "layer_typ": 3, "ld": 3, "lead": 8, "learn": [3, 8, 12], "learning_r": 3, "least": [6, 12], "lection": 12, "led": 12, "len": [3, 7], "less": 12, "level": [0, 12], "leverag": 7, "lib": [3, 6], "librari": [2, 9, 14], "light": 12, "like": [2, 6, 8, 12, 14], "limit": [3, 12], "line": [2, 8, 14], "linear": [3, 5], "link": [1, 12], "linux": 8, "list": [0, 1, 3, 6, 7, 8, 12], "liver": 1, "lm": 12, "lm_488": 12, "load": [3, 5, 6, 7, 8, 12], "load_best_v": [3, 5, 9], "load_latest": [3, 5, 9], "load_model": 3, "load_pretrain": 9, "load_safe_config": [3, 6], "loader": 7, "local": [2, 8, 12, 13, 14], "local_filenam": 6, "localhost": 8, "localvolum": 3, "locat": [2, 8, 12, 14], "log": [3, 5, 8, 9], "logdir": [3, 8], "logs_save_path": [3, 5, 9], "long": [6, 8, 9], "longer": 12, "look": 12, "loop": 7, "loss": [3, 7, 8, 9, 10], "loss_fn": 6, "lossi": 12, "lot": 12, "low_is_best": [5, 9], "lower": [5, 9], "lowest": 9, "lr": 7, "lt": [2, 12, 14], "lumen": 0, "lyso": 3, "m": [3, 12], "m3": 8, "macbook": 8, "machin": 12, "maco": 8, "mai": [0, 3, 8, 12], "main": [6, 12, 13], "maintain": 12, "make": [6, 8, 9, 12, 13], "make_datasplit_csv": [3, 6], "make_s3_datasplit_csv": [3, 6], "mamba": 8, "manag": [9, 13], "mani": 12, "manifest": 6, "manual": 8, "map": [6, 12], "mask": 8, "massiv": 12, "match": [3, 5, 7, 8, 9], "match_crop_spac": [3, 10], "matter": 12, "max": 8, "max_dist": 3, "maximum": 3, "md": [3, 8], "mean": [3, 12], "member": [2, 14], "membran": 0, "memori": 8, "mere": 12, "merg": 8, "mesh": 12, "messag": [2, 8, 14], "metadata": [2, 3, 14], "metamorphos": 12, "method": [2, 3, 12, 14], "metric": [8, 9], "mhd": 3, "micro": 8, "micromamba": 8, "microscopi": 12, "mid_channel": 5, "might": [9, 12], "migrat": 12, "mirror": [3, 6, 7], "mismatch": 9, "miss": [3, 7], "missing_volume_scor": [3, 10], "mito": [0, 3, 6, 8], "mito_lum": 0, "mito_mem": 0, "mito_pr": 12, "mito_ribo": 0, "mito_seg": 12, "mitochondri": 0, "mitochondria": [0, 12], "mkdoc": 13, "mlp": [3, 5], "modal": 12, "mode": [3, 8], "model": [2, 3, 7, 10, 12, 14], "model_": 9, "model_dump": [2, 14], "model_kwarg": 3, "model_load": [3, 8, 10], "model_nam": 3, "model_save_path": [3, 5, 9], "model_to_load": 3, "modif": [6, 9], "modifi": [3, 9], "modul": [8, 9, 10], "monitor": [3, 8], "more": [3, 8], "most": 9, "motiv": 12, "mous": [1, 12], "move": 12, "mp": [3, 6, 7], "mt": 3, "much": [2, 8, 14], "mulitscal": [2, 14], "multi": [2, 12, 14], "multipl": 0, "multiscal": [2, 3, 8, 14], "multscal": 12, "must": [3, 6, 9, 12], "my_model": 9, "mymodel": 9, "mzouink": 8, "n": 8, "n5": [8, 12], "n5fsstore": [2, 14], "n_block": 5, "n_channel": 5, "n_class": 5, "n_downsampl": 5, "name": [0, 2, 3, 6, 7, 8, 14], "navig": [0, 8, 13], "ndarrai": 3, "ndim": 5, "ne_mem": 0, "nearest": [3, 12], "necessari": [3, 7], "need": [0, 2, 3, 5, 6, 7, 8, 9, 12, 14], "needlessli": 12, "neighbor": 3, "nesteddirectorystor": [2, 14], "net": 5, "neuroglanc": [1, 3, 8, 12], "neuroglancer_n5": [2, 14], "never": 12, "new": [8, 12], "newer": 12, "next": 8, "ngf": 5, "ngff": [3, 12], "nm": [2, 8, 14], "nn": [5, 6, 7, 9], "no_grad": 7, "non": [3, 5, 12], "none": [2, 3, 5, 6, 14], "nonzero": 3, "norm_lay": 5, "normal": [3, 5, 7], "normalized_haussdorf_dist": 3, "note": [2, 3, 8, 12, 14], "novo": 3, "now": 9, "np": [2, 3, 14], "np2th": [3, 5], "np_in": 0, "np_out": 0, "nuc": [0, 3, 6, 7, 8], "nuclear": 0, "nucleo": 0, "nucleolu": 0, "nucleoplasm": 0, "nucleu": 0, "nucpl": 0, "num_voxel": 3, "number": [3, 5, 6, 7, 8, 12], "numpi": [2, 3, 8, 9, 12, 14], "o": [2, 12, 14], "object": [3, 5, 6, 7, 8, 12], "obviou": 12, "offer": 8, "offset": 3, "often": [8, 12], "oihw": 5, "old": 12, "older": 12, "om": [3, 12], "onc": [8, 12], "one": [5, 6, 7, 8, 12], "onli": [6, 12], "onlin": 8, "open": [2, 8, 12, 14], "openorganel": 12, "oper": [2, 12, 14], "opt": [3, 6], "optim": [3, 7, 9], "option": [3, 6, 8], "order": [2, 14], "org": [3, 5], "organ": [0, 1, 2, 8, 12, 14], "organel": [0, 12], "origin": [5, 12], "orthogon": 3, "other": [3, 8, 12], "otherwis": [3, 6, 8], "our": [0, 2, 12, 14], "out": [2, 12, 14], "out_channel": 5, "outconv": [3, 5], "outer_arrai": 6, "output": [3, 5, 6, 7], "output_nc": 5, "output_path": 3, "over": [3, 6], "overall_scor": 3, "overhaul": 12, "overlap": 12, "overridden": [5, 6], "overview": [0, 8], "overwrit": [3, 8], "own": [0, 12], "p": 3, "pacinian": 12, "pacininan": 12, "pack": 8, "packag": [2, 7, 8, 10, 13, 14], "package_submiss": [3, 10], "pad": [3, 5, 6, 7, 8], "pad_valu": 3, "padding_typ": 5, "page": [3, 8], "pancrea": 1, "paper": [5, 12], "parallel": 12, "param": 5, "paramet": [2, 3, 5, 6, 7, 9, 12, 14], "paramt": [2, 14], "parlanc": 12, "pars": 12, "parse_s3_url": [3, 6], "part": [5, 12], "parti": 12, "partial": 9, "particip": 1, "particular": 8, "partit": 12, "partition_copy_stor": [3, 6], "pass": [2, 3, 5, 6, 14], "path": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14], "pattern": 9, "pdf": 5, "per": [3, 6, 7, 8], "perform": [2, 3, 5, 6, 9, 14], "perox": 3, "phase": 7, "physic": 12, "piec": 12, "pip": [2, 8, 9, 14], "pixel": 3, "pixelresolut": [2, 12, 14], "place": 5, "placehold": [3, 9], "placement": 7, "plan": 12, "plane": 3, "platform": 12, "pleas": 8, "pm": 8, "poetri": 13, "point": [3, 7], "pool": 6, "pore": 0, "portal": [8, 12], "possibl": [8, 9], "possibli": 5, "potenti": [6, 12], "powershel": 8, "pre": 3, "precomput": 12, "pred": 3, "pred_label": 3, "pred_label_path": 3, "pred_volume_path": 3, "predict": [10, 12], "predict_2d": 8, "predict_3d": 8, "predict_orthoplan": [3, 10], "predictions_path": 3, "prefer": 8, "prefix": 12, "prepar": 7, "preprocess": 7, "prerequisit": 8, "present": [2, 3, 6, 14], "pressur": 12, "pretrain": 8, "preview": 13, "previou": 12, "previous": 9, "primari": 12, "principl": 12, "print": [2, 7, 14], "pro": 8, "probabl": 6, "problem": [2, 12, 14], "process": [9, 10], "process_2d": 8, "process_3d": 8, "process_func": [3, 8], "processed_path": 3, "produc": [2, 12, 14], "product": 12, "program": 12, "progress": [3, 8], "projct": 12, "project": [2, 8, 12, 14], "properli": 7, "properti": 0, "proport": 3, "provid": [0, 1, 2, 3, 6, 7, 8, 9, 12, 14], "ps1": 8, "psu": 3, "pth": [3, 8, 9], "public": 12, "publish": 12, "pull": 13, "purpos": 12, "put": [2, 14], "py": [3, 8], "pydant": [2, 14], "pyramid": 12, "pytest": 13, "python": [2, 3, 6, 8, 12, 14], "python3": [3, 6], "pytorch": [3, 8, 9], "question": 8, "r": 8, "rais": [2, 14], "ran": [8, 12], "randint": 3, "random": [3, 6, 12], "random_se": 3, "random_valid": [6, 7], "randomli": [6, 7], "rang": [2, 3, 6, 7, 14], "rarer": 12, "rate": 3, "raw": [3, 6, 8, 12], "raw_nam": [3, 6], "raw_pad": 6, "raw_path": 6, "re": [3, 8], "read": [9, 12], "read_group": [3, 6], "readabl": 12, "readm": [3, 8], "reason": 12, "receiv": 8, "recent": 9, "recip": [5, 6], "recommend": 8, "recon": [3, 6], "redirect": 12, "ref": 6, "refer": [0, 3, 8], "reflect": [3, 5], "refresh": 7, "region": [1, 6, 12], "regist": [5, 6], "registrationhead": [3, 5], "regularli": 9, "rel": [2, 6, 8, 12, 14], "relat": 8, "relationship": 0, "relev": 8, "relu": [5, 7], "remov": 12, "renam": 12, "render": 13, "replac": [3, 8], "replic": 5, "repo": 8, "repositori": [12, 13], "repres": [0, 3, 6, 12], "reproduc": 3, "request": [6, 8, 13], "requir": [3, 7, 8, 12], "resampl": 3, "resblock": 5, "rescal": 3, "research": [2, 12, 14], "reshap": [2, 14], "resiz": 3, "resize_arrai": [3, 10], "resnet": [3, 10], "resnet2d": [3, 5], "resnet3d": [3, 5], "resnetblock2d": [3, 5], "resnetblock3d": [3, 5], "resolut": [3, 8], "resolv": 8, "resolve_em_url": [3, 6], "resourc": 12, "respect": [3, 6, 8, 12], "respresent": 12, "restor": 9, "result": [2, 3, 6, 8, 12, 14], "result_fil": 3, "resum": 9, "reticulum": 0, "retriev": [0, 8], "return": [3, 5, 6, 7, 8], "rganel": 12, "rhoad": 3, "rhoadesscholar": 8, "ribosom": 0, "rinva": 8, "root": 12, "rotat": [3, 6, 7], "row": 6, "run": [3, 5, 6, 8, 9, 13], "s0": [2, 12, 14], "s1": [2, 12, 14], "s2": 12, "s3": [2, 3, 14], "s3_url": 6, "saalfeldlab": 12, "safe": [6, 12], "safeti": 6, "same": [3, 8, 12], "sampl": [1, 7, 8, 12], "satisfi": [8, 12], "save": [3, 8, 9, 12], "save_numpy_binary_to_zarr": [3, 8], "save_numpy_class_arrays_to_zarr": [3, 10], "save_numpy_class_labels_to_zarr": [3, 10], "save_numpy_labels_to_zarr": [3, 8], "save_path": 3, "scalar": [9, 12], "scale": [0, 2, 3, 6, 7, 8, 12, 14], "scene": 12, "schema": [8, 13], "scheme": 12, "scipi": 3, "score": [3, 5, 9], "score_inst": [3, 10], "score_label": [3, 10], "score_semant": [3, 10], "score_submiss": [3, 10], "score_volum": [3, 10], "screenshot": 12, "script": [3, 6, 8, 9], "scriptmodul": [5, 6], "seamlessli": [7, 9], "search": [3, 5, 6, 8, 9], "search_path": [3, 5, 6, 9], "second": [3, 12], "section": [8, 12], "secur": [3, 10], "see": [2, 3, 8, 12, 14], "seed": 3, "segment": [1, 3, 6, 7, 12], "select": [9, 12], "self": 6, "sem": [1, 12], "semant": [3, 12], "separ": [1, 3, 12], "sequenc": [3, 6, 12], "sequenti": [5, 7], "serv": [8, 13], "server": 8, "servic": 12, "set": [3, 6, 7, 12], "sever": 12, "sh": 8, "shape": [2, 3, 5, 6, 7, 8, 12, 14], "share": [5, 6, 8, 12], "shell": 8, "ship": [2, 14], "short": 12, "should": [3, 5, 6, 8, 9, 12], "show": 8, "shown": 3, "side": 8, "sign": 8, "silent": [3, 5, 6], "similar": 12, "similarli": 3, "simpl": [8, 12], "simpli": [8, 12], "simplifi": 7, "sinc": [5, 6], "singl": [3, 8, 12], "site": 0, "size": [3, 6, 7, 8, 12], "skip": 5, "skip_channel": 5, "slice": 6, "small": [2, 14], "smaller": [3, 12], "smooth": 12, "so": [2, 8, 9, 12, 14], "softwar": 12, "solv": 12, "some": [0, 8, 12], "sometim": 3, "soon": 8, "sort": 9, "sourc": [3, 5, 6, 12], "source_stor": 6, "space": 12, "span": 1, "spatial": [3, 5, 6, 7, 12], "spatial_transform": [3, 6, 7], "special": [0, 12], "specif": [0, 2, 12, 14], "specifi": [3, 6, 7, 8, 9, 12], "specimen": 12, "spectrum": 1, "speed": 8, "speedtest": [3, 10], "spend": 3, "split": [3, 6, 7], "src": [6, 8], "stai": 12, "standard": [3, 5, 12], "start": 12, "state": [5, 6, 9], "state_dict": 9, "step": [7, 8], "still": 12, "storag": [2, 8, 12, 14], "store": [2, 6, 12, 14], "str": [3, 5, 6, 9], "strategi": 12, "streamlin": 9, "strict": [9, 12], "stride": 5, "string": [3, 6, 9], "structur": [2, 3, 7, 12, 14], "style": 12, "subclass": [5, 6], "submiss": [3, 8], "submission_path": [3, 8], "submit": 13, "submodul": [8, 10], "subpackag": [8, 10], "subsampl": 12, "subsequ": 12, "subset_to_slic": [3, 6], "succe": [2, 14], "success": 12, "suffix": 12, "summari": [2, 3, 14], "summarywrit": 9, "suppli": 8, "support": [2, 7, 8, 12, 14], "suppos": 9, "sure": 9, "swish": [3, 5], "system": 12, "t": [9, 12], "tabl": 1, "tag": 9, "take": [3, 5, 6, 8, 12], "taken": 12, "target": [3, 6, 7, 12], "target_array_info": [3, 6, 7], "target_shap": 3, "task": 7, "tb": [2, 12, 14], "team": [2, 8, 12, 14], "techniqu": 12, "technologi": 12, "tem": 12, "tensor": 6, "tensorboard": [3, 5, 8, 9], "tensorboardx": [7, 9], "terabyt": [2, 14], "termin": [3, 8], "test": [2, 3, 6, 9, 13, 14], "test_crop_manifest": 6, "test_volum": 3, "test_volume_nam": [3, 8], "testcroprow": [3, 6], "text": [2, 14], "than": [2, 3, 12, 14], "thei": [0, 2, 8, 12, 14], "them": [5, 6, 7, 8, 9, 12], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 14], "third": 12, "thoroughli": 8, "those": [2, 8, 14], "thought": 8, "threadpoolexecutor": 6, "threshold": [3, 8, 12], "through": [0, 8], "thu": [8, 12], "thumbnail": 12, "time": [3, 5, 8, 9, 12], "tissu": [1, 12], "tmp": [2, 14], "to_zarr": [2, 14], "togeth": 12, "toi": [2, 14], "too": [2, 14], "took": 8, "tool": [2, 6, 8, 12, 14], "toolbox": 8, "top": [8, 12], "torch": [3, 5, 6, 7, 9], "torchvis": 7, "track": 12, "tracker": [2, 14], "tradit": 3, "train": [1, 6, 7, 9, 10], "train_2d": 8, "train_3d": 8, "train_load": 7, "transform": [3, 5, 6, 12], "transit": 12, "translat": [3, 6, 12], "transpos": [3, 6, 7], "transpose_for_scor": [3, 5], "trasposit": 6, "trilinear": 5, "troubleshoot": 8, "true": [3, 5, 6, 7, 9, 12], "truth": 3, "truth_label": 3, "truth_path": 3, "truth_volume_path": 3, "try": 12, "tune": 9, "tupl": [3, 6], "tutori": 8, "twice": 12, "two": [3, 7, 9, 12], "type": [1, 3, 5, 6, 12], "typic": 12, "u": [2, 5, 8, 12, 14], "uint16": [2, 12, 14], "uint8": [3, 6, 12], "ultim": 12, "unchang": 12, "under": [0, 12], "underscor": 12, "understand": 12, "unet_2d": [3, 5], "unet_3d": [3, 5], "unet_model_2d": [3, 8, 10], "unet_model_3d": [3, 10], "unformat": 6, "union": 3, "uniqu": [0, 8, 12], "unit": [2, 3, 12, 14], "unsaf": 6, "until": 12, "unus": 6, "unzip": [3, 8], "unzip_fil": [3, 10], "up": [3, 5, 7], "upath": [3, 7, 9], "updat": 9, "upload": 8, "upsampl": 5, "uri": 8, "url": [1, 2, 3, 6, 12, 14], "us": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14], "usag": [3, 6, 8], "use_batchnorm": 5, "use_bia": 5, "use_dropout": 5, "use_s3": 3, "user": [8, 12], "util": [3, 7, 8, 9, 10], "v": [5, 8], "val": [3, 6], "val_count": 7, "val_load": 7, "val_loss": 7, "valid": [3, 5, 6, 7, 8, 9, 12], "validation_batch_limit": 3, "validation_loss": 9, "validation_prob": [3, 6], "validation_time_limit": 3, "valu": [3, 6, 12], "varieti": [1, 12], "variou": 0, "ve": 3, "veri": 12, "verifi": [6, 7, 9], "versa": 3, "version": 12, "vi": 5, "via": 12, "vice": 3, "view": [8, 12], "viewabl": 8, "viewdoc": 3, "viewer": [3, 8], "vim": 3, "visual": [0, 1, 10, 12], "visul": 12, "vit": 5, "vitnet": [3, 10], "vitvnet": [3, 5], "volum": [3, 8, 12], "voxel": [3, 8], "voxel_s": [3, 6], "wa": [8, 12], "wai": [8, 12], "want": [8, 9, 12], "wasn": 12, "watersh": 8, "we": [2, 5, 8, 12, 14], "web": 12, "webrequest": 8, "weight": [5, 8, 9], "welcom": 8, "well": [3, 8, 12], "were": 12, "what": [2, 14], "when": [2, 3, 6, 9, 12, 14], "where": [2, 3, 9, 12, 14], "whereev": 12, "whether": [2, 3, 5, 6, 8, 14], "which": [2, 3, 6, 8, 9, 12, 14], "while": [3, 5, 6, 8, 12], "wide": [2, 12, 14], "wifi": 8, "wiki": 3, "wikipedia": 3, "window": [8, 12], "wish": 8, "within": [5, 6, 12], "won": 9, "word": 12, "work": [1, 2, 3, 8, 12, 14], "worker": 6, "workflow": [7, 9, 12], "world": 3, "would": [2, 12, 14], "write": [2, 6, 12, 14], "writer": 9, "written": 6, "x": [2, 3, 5, 6, 7, 14], "x1": 5, "x2": 5, "x64": [3, 6], "y": [2, 3, 6, 7, 8, 14], "yarl": 6, "year": 12, "yet": 12, "yield": 3, "you": [1, 2, 7, 8, 9, 12, 14], "your": [7, 9, 13], "yuriyzubov": 8, "z": [3, 6], "zarr": [0, 2, 3, 6, 8, 12, 14], "zarr_path": 3, "zarr_vers": [2, 14], "zebrafish": 1, "zero": 5, "zero_grad": 7, "zip": [3, 6, 8], "zip_manifest": 6, "zip_path": 3, "zip_submiss": [3, 10], "zipdatasetrow": [3, 6], "zips_from_manifest": 6, "zoom": 12}, "titles": ["Annotation Classes", "Available Data", "CellMap Schemas", "cellmap_segmentation_challenge package", "cellmap_segmentation_challenge.cli package", "cellmap_segmentation_challenge.models package", "cellmap_segmentation_challenge.utils package", "Creating a CellMap Data PyTorch Dataloader", "CellMap Segmentation Challenge", "Loading a Pretrained Model Checkpoint", "src", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas"], "titleterms": {"acknowledg": 8, "ad": 13, "alias": 0, "align": 12, "an": [2, 14], "annot": 0, "api": 8, "arrai": 12, "avail": 1, "categori": 0, "cellmap": [2, 7, 8, 14], "cellmap_segmentation_challeng": [3, 4, 5, 6], "challeng": 8, "check": [2, 14], "checkpoint": 9, "chunk": 12, "class": 0, "cli": [2, 4, 14], "clone": 8, "conclus": [7, 9], "config": 3, "contain": [2, 14], "content": [0, 3, 4, 5, 6, 8], "contribut": [2, 14], "coordin": 12, "cosem": 12, "creat": [2, 7, 14], "crop": 6, "data": [1, 7, 8], "dataload": [6, 7], "dataset": 12, "datasplit": [4, 6], "definit": 9, "descript": 0, "detail": 0, "download": 8, "downsampl": 12, "environ": 8, "evalu": [3, 4], "exampl": [0, 2, 7, 14], "fetch_data": [4, 6], "final": 8, "format": 12, "function": 9, "get": 8, "hierarchi": [2, 14], "i": 12, "imag": 12, "inspect": [2, 14], "instal": [2, 14], "issu": 8, "layout": 12, "link": 8, "load": 9, "loss": 6, "metadata": 12, "model": [5, 8, 9], "model_load": 5, "modul": [3, 4, 5, 6], "multipl": 12, "multiresolut": 12, "multiscal": [0, 12], "n5": [2, 14], "name": 12, "neuroglanc": [2, 14], "note": [7, 9], "outlin": 12, "overview": [7, 9], "packag": [3, 4, 5, 6], "post": 8, "predict": [3, 4, 8], "prerequisit": [7, 9], "pretrain": 9, "process": [3, 4, 8], "project": 13, "pytorch": 7, "repositori": 8, "resnet": 5, "s3": 12, "schema": [2, 14], "secur": 6, "segment": 8, "set": 8, "speedtest": 4, "src": 10, "start": 8, "step": 9, "structur": [0, 8], "submit": 8, "submodul": [3, 4, 5, 6], "subpackag": 3, "tabl": [0, 8], "test": 8, "thi": 13, "train": [3, 4, 8], "troubleshoot": [7, 9], "tutori": 9, "unet_model_2d": 5, "unet_model_3d": 5, "up": 8, "usag": 7, "util": 6, "valid": [2, 14], "visual": [3, 4, 8], "vitnet": 5, "what": 12, "your": 8}})