Search.setIndex({"alltitles": {"API": [[16, "api"]], "CellMap Segmentation Challenge": [[16, null]], "Clone the repository": [[16, "clone-the-repository"]], "Download the data": [[16, "download-the-data"]], "Getting started": [[16, "getting-started"]], "Links": [[16, "links"]], "Module contents": [[1, "module-contents"], [14, "module-contents"]], "Predict on test data": [[16, "predict-on-test-data"]], "Repository structure": [[16, "repository-structure"]], "Set up your environment": [[16, "set-up-your-environment"]], "Submit your predictions": [[16, "submit-your-predictions"]], "Submodules": [[1, "submodules"], [14, "submodules"]], "Train a model": [[16, "train-a-model"]], "cellmap_segmentation_challenge": [[0, null]], "cellmap_segmentation_challenge.cli package": [[1, null]], "cellmap_segmentation_challenge.cli.fetch_data module": [[1, "cellmap-segmentation-challenge-cli-fetch-data-module"]], "cellmap_segmentation_challenge.dataloader": [[2, null]], "cellmap_segmentation_challenge.datasplit": [[3, null]], "cellmap_segmentation_challenge.evaluate": [[4, null]], "cellmap_segmentation_challenge.loss": [[5, null]], "cellmap_segmentation_challenge.models": [[6, null]], "cellmap_segmentation_challenge.models.model_load": [[7, null]], "cellmap_segmentation_challenge.models.resnet": [[8, null]], "cellmap_segmentation_challenge.models.unet_model_2D": [[9, null]], "cellmap_segmentation_challenge.models.unet_model_3D": [[10, null]], "cellmap_segmentation_challenge.models.vitnet": [[11, null]], "cellmap_segmentation_challenge.predict": [[12, null]], "cellmap_segmentation_challenge.train": [[13, null]], "cellmap_segmentation_challenge.utils package": [[14, null]], "cellmap_segmentation_challenge.utils.crops module": [[14, "cellmap-segmentation-challenge-utils-crops-module"]], "cellmap_segmentation_challenge.utils.pipeline module": [[14, "cellmap-segmentation-challenge-utils-pipeline-module"]], "cellmap_segmentation_challenge.visualize": [[15, null]], "src": [[17, null]]}, "docnames": ["cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.dataloader", "cellmap_segmentation_challenge.datasplit", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.loss", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.visualize", "index", "modules"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.dataloader.rst", "cellmap_segmentation_challenge.datasplit.rst", "cellmap_segmentation_challenge.evaluate.rst", "cellmap_segmentation_challenge.loss.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.models.model_load.rst", "cellmap_segmentation_challenge.models.resnet.rst", "cellmap_segmentation_challenge.models.unet_model_2D.rst", "cellmap_segmentation_challenge.models.unet_model_3D.rst", "cellmap_segmentation_challenge.models.vitnet.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "cellmap_segmentation_challenge.visualize.rst", "index.rst", "modules.rst"], "indexentries": {"attention (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[0, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.dataloader": [[2, "module-cellmap_segmentation_challenge.dataloader", false]], "cellmap_segmentation_challenge.datasplit": [[3, "module-cellmap_segmentation_challenge.datasplit", false]], "cellmap_segmentation_challenge.evaluate": [[4, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.loss": [[5, "module-cellmap_segmentation_challenge.loss", false]], "cellmap_segmentation_challenge.models": [[6, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[7, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[8, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[9, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[10, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[11, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.visualize": [[15, "module-cellmap_segmentation_challenge.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.loss)": [[5, "cellmap_segmentation_challenge.loss.CellMapLossWrapper", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "forward() (cellmap_segmentation_challenge.loss.cellmaplosswrapper method)": [[5, "cellmap_segmentation_challenge.loss.CellMapLossWrapper.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[8, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[8, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[11, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[11, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[11, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[11, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[11, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_class_incl_ids() (in module cellmap_segmentation_challenge.datasplit)": [[3, "cellmap_segmentation_challenge.datasplit.get_class_incl_ids", false]], "get_class_relations() (in module cellmap_segmentation_challenge.datasplit)": [[3, "cellmap_segmentation_challenge.datasplit.get_class_relations", false]], "get_csv_string() (in module cellmap_segmentation_challenge.datasplit)": [[3, "cellmap_segmentation_challenge.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.dataloader)": [[2, "cellmap_segmentation_challenge.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.datasplit)": [[3, "cellmap_segmentation_challenge.datasplit.get_dataset_counts", false]], "get_loss_plot() (in module cellmap_segmentation_challenge.visualize)": [[15, "cellmap_segmentation_challenge.visualize.get_loss_plot", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[7, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[7, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.datasplit)": [[3, "cellmap_segmentation_challenge.datasplit.make_datasplit_csv", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[0, "module-cellmap_segmentation_challenge", false], [2, "module-cellmap_segmentation_challenge.dataloader", false], [3, "module-cellmap_segmentation_challenge.datasplit", false], [4, "module-cellmap_segmentation_challenge.evaluate", false], [5, "module-cellmap_segmentation_challenge.loss", false], [6, "module-cellmap_segmentation_challenge.models", false], [7, "module-cellmap_segmentation_challenge.models.model_load", false], [8, "module-cellmap_segmentation_challenge.models.resnet", false], [9, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [10, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [11, "module-cellmap_segmentation_challenge.models.vitnet", false], [15, "module-cellmap_segmentation_challenge.visualize", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "predict() (in module cellmap_segmentation_challenge)": [[12, "cellmap_segmentation_challenge.predict", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[8, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[8, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[8, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[8, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "save_result_figs() (in module cellmap_segmentation_challenge.visualize)": [[15, "cellmap_segmentation_challenge.visualize.save_result_figs", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "train() (in module cellmap_segmentation_challenge)": [[13, "cellmap_segmentation_challenge.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[11, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[4, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[9, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[10, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[11, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]]}, "objects": {"": [[0, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[2, 0, 0, "-", "dataloader"], [3, 0, 0, "-", "datasplit"], [4, 0, 0, "-", "evaluate"], [5, 0, 0, "-", "loss"], [6, 0, 0, "-", "models"], [12, 1, 1, "", "predict"], [13, 1, 1, "", "train"], [15, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.dataloader": [[2, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.datasplit": [[3, 1, 1, "", "get_class_incl_ids"], [3, 1, 1, "", "get_class_relations"], [3, 1, 1, "", "get_csv_string"], [3, 1, 1, "", "get_dataset_counts"], [3, 1, 1, "", "make_datasplit_csv"]], "cellmap_segmentation_challenge.evaluate": [[4, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [4, 1, 1, "", "save_numpy_class_labels_to_zarr"], [4, 1, 1, "", "score_instance"], [4, 1, 1, "", "score_label"], [4, 1, 1, "", "score_semantic"], [4, 1, 1, "", "score_submission"], [4, 1, 1, "", "score_volume"], [4, 1, 1, "", "unzip_file"]], "cellmap_segmentation_challenge.loss": [[5, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.loss.CellMapLossWrapper": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models": [[7, 0, 0, "-", "model_load"], [8, 0, 0, "-", "resnet"], [9, 0, 0, "-", "unet_model_2D"], [10, 0, 0, "-", "unet_model_3D"], [11, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[7, 1, 1, "", "load_best_val"], [7, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[8, 2, 1, "", "ResNet"], [8, 2, 1, "", "Resnet2D"], [8, 2, 1, "", "Resnet3D"], [8, 2, 1, "", "ResnetBlock2D"], [8, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[8, 3, 1, "", "build_conv_block"], [8, 3, 1, "", "crop"], [8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[8, 3, 1, "", "build_conv_block"], [8, 3, 1, "", "crop"], [8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[9, 2, 1, "", "DoubleConv"], [9, 2, 1, "", "Down"], [9, 2, 1, "", "OutConv"], [9, 2, 1, "", "UNet_2D"], [9, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[10, 2, 1, "", "DoubleConv"], [10, 2, 1, "", "Down"], [10, 2, 1, "", "OutConv"], [10, 2, 1, "", "UNet_3D"], [10, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[11, 2, 1, "", "Attention"], [11, 2, 1, "", "Block"], [11, 2, 1, "", "CNNEncoder"], [11, 2, 1, "", "Conv3dReLU"], [11, 2, 1, "", "DecoderBlock"], [11, 2, 1, "", "DecoderCup"], [11, 2, 1, "", "DoubleConv"], [11, 2, 1, "", "Down"], [11, 2, 1, "", "Embeddings"], [11, 2, 1, "", "Encoder"], [11, 2, 1, "", "Mlp"], [11, 2, 1, "", "RegistrationHead"], [11, 2, 1, "", "Transformer"], [11, 2, 1, "", "ViTVNet"], [11, 1, 1, "", "get_3DReg_config"], [11, 1, 1, "", "np2th"], [11, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[11, 3, 1, "", "forward"], [11, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[11, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.visualize": [[15, 1, 1, "", "get_loss_plot"], [15, 1, 1, "", "save_result_figs"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": 16, "0": [2, 3, 4, 11, 12, 13, 16], "0001": 13, "03385": 8, "1": [2, 3, 8, 11, 13, 16], "1000": [2, 13], "11": 16, "128": [4, 11, 13], "1512": 8, "180": [2, 13], "2": [4, 8, 11, 12, 16], "255": 12, "2d": [2, 16], "2d_resnet": 13, "2d_unet": 13, "3": [3, 11, 13, 16], "3d": [2, 4, 16], "3d_resnet": 13, "3d_unet": 13, "4": 4, "42": 13, "5": [2, 13], "6": 8, "64": 8, "8": 13, "8x8x8": 16, "8x8x8nm": 16, "A": [4, 8, 16], "For": [2, 12, 16], "If": [12, 13], "It": 16, "The": [4, 12, 13, 16], "To": 16, "_": [4, 13], "_loss": 5, "_weightedloss": 5, "account": 16, "activ": [8, 16], "affin": 12, "after": 13, "afterward": [5, 9, 10, 11], "against": 4, "all": [5, 9, 10, 11, 16], "along": 16, "alreadi": [13, 16], "also": 16, "although": [5, 9, 10, 11], "alwai": [2, 16], "an": 13, "angl": 2, "ani": [2, 13], "annot": 16, "anyth": 13, "appli": [2, 8, 13], "ar": [13, 16], "architectur": 13, "argument": [13, 16], "arrai": [2, 4, 16], "array_info": 2, "arxiv": 8, "assum": 16, "attent": [11, 17], "avail": 16, "ax": [2, 13], "axi": 2, "b": 16, "background": [4, 16], "batch": [2, 13], "batch_siz": [2, 13], "befor": 8, "belong": 12, "below": 16, "best": 13, "bilinear": 9, "binari": [4, 16], "block": [8, 11, 12, 17], "bool": [3, 8], "boolean": 16, "both": [5, 9, 10, 11, 16], "build_conv_block": 8, "built": 16, "call": [5, 9, 10, 11, 13], "can": [12, 13, 16], "care": [5, 9, 10, 11], "cd": 16, "cellmap_segmentation_challeng": [16, 17], "cellmapdataload": 2, "cellmaplosswrapp": [5, 17], "center": 8, "chanel": 12, "channel": [8, 12], "checkpoint": [13, 16], "choos": 16, "chosen": 2, "clariti": 16, "class": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16], "cnnencod": [11, 17], "com": 16, "combin": 12, "command": 16, "comput": [5, 9, 10, 11], "config": [11, 13], "config_path": 13, "configur": 13, "connect": 8, "construct": [8, 13], "constructor": 13, "contain": [2, 13, 16], "conv": [8, 11], "conv3drelu": [11, 17], "conveni": 16, "convert": [11, 16], "convolut": 8, "correct": 16, "correspond": [4, 16], "could": 2, "creat": 16, "crop": [3, 8, 16], "csc": 16, "csv": [3, 13], "csv_path": 3, "cuda": 2, "curl": 16, "data": [2, 3, 4, 8, 12, 13], "dataload": [13, 17], "datapath_prefix": 3, "dataset": [3, 12, 13], "datasplit": [2, 13, 17], "datasplit_path": [2, 13], "de": 13, "decoderblock": [11, 17], "decodercup": [11, 17], "default": [8, 12, 13, 16], "defin": [2, 5, 9, 10, 11, 13], "depend": 16, "design": 16, "dest": 16, "devic": 2, "dict": [4, 12], "dictionari": [2, 4, 12, 13], "dim": 8, "dimens": 8, "directori": [4, 16], "do": 16, "document": [13, 16], "doe": 13, "doubleconv": [9, 10, 11, 17], "down": [9, 10, 11, 17], "downsampl": 8, "dry_run": 3, "e": 16, "each": [2, 4, 12, 13, 16], "easi": 16, "edit": 16, "either": [2, 16], "em": [3, 16], "embed": [11, 17], "encod": [11, 17], "end": [4, 16], "end1": 12, "end2": 12, "entir": 12, "epoch": [2, 13], "er": 13, "evalu": [16, 17], "everi": [5, 9, 10, 11], "exampl": [2, 4, 12, 16], "except": 16, "exist": [13, 16], "extens": 16, "fals": [3, 4, 8, 9, 10, 11], "fastest": 16, "featur": 11, "fetch": 16, "fibsem": 3, "figures_save_path": 15, "file": [2, 4, 13, 16], "filenam": [4, 16], "filesystem": 16, "first": 16, "flag": 16, "flexibl": 16, "float": [2, 3, 4, 12], "folder": 16, "follow": 16, "force_all_class": 3, "form": 12, "format": [12, 16], "former": [5, 9, 10, 11], "forward": [5, 8, 9, 10, 11, 17], "from": [2, 13, 16], "function": [2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16], "gener": [4, 13, 16], "get": 2, "get_3dreg_config": [11, 17], "get_class_incl_id": [3, 17], "get_class_rel": [3, 17], "get_csv_str": [3, 17], "get_dataload": [2, 17], "get_dataset_count": [3, 17], "get_loss_plot": [15, 17], "git": 16, "github": 16, "given": [2, 8], "ground": 4, "ground_truth": 4, "groundtruth": [3, 16], "hausdorff_distance_max": 4, "have": 16, "help": 16, "here": 16, "hidden_st": 11, "hook": [5, 9, 10, 11], "how": 16, "http": 8, "hwio": 11, "hyperparamet": 13, "i": [2, 8, 12, 13, 16], "id": 16, "ignor": [5, 9, 10, 11, 13], "imag": 8, "img_siz": 11, "implement": 8, "in_channel": [9, 10, 11], "in_dataset": 12, "incl_ids_str": 3, "includ": [12, 13], "independ": 13, "index": 16, "indic": 12, "inf": 4, "info": 2, "inform": [13, 16], "initi": [5, 8, 9, 10, 11, 13], "input": [2, 8, 12, 13, 15], "input_array_info": [2, 13], "input_block_shap": 12, "input_id": 11, "input_nc": 8, "instal": 16, "instanc": [4, 5, 9, 10, 11, 16], "instance_class": 4, "instancenorm": 8, "instancenorm2d": 8, "instancenorm3d": 8, "instead": [5, 9, 10, 11], "instruct": 16, "int": [2, 8, 12], "interact": 16, "interest": 12, "intern": [5, 9, 10, 11], "invovl": 2, "iter": [2, 13], "iterations_per_epoch": [2, 13, 15], "janelia": 16, "kernel_s": 11, "keyword": 13, "kwarg": [5, 8], "l": 16, "label": [3, 4, 12, 16], "label1": 4, "label2": 4, "label3": 4, "label_nam": [4, 16], "larg": 12, "latest": 13, "latter": [5, 9, 10, 11], "layer": 8, "learn": 13, "learning_r": 13, "len": 4, "like": 2, "line": 16, "linear": 8, "list": [2, 3, 4, 12, 13, 16], "load": [2, 13], "load_best_v": [7, 17], "load_latest": [7, 17], "load_model": 13, "local": 16, "log": [13, 16], "logdir": [13, 16], "logs_save_path": [7, 13], "loss": [15, 16, 17], "loss_fn": 5, "low_is_best": 7, "mai": 13, "make": 16, "make_datasplit_csv": [3, 17], "mamba": 16, "map": 2, "match": [8, 12, 16], "max_raw": 12, "maximum": 12, "md": [13, 16], "metric": 16, "micro": 16, "micromamba": 16, "mid_channel": [9, 10, 11], "min_raw": 12, "minimum": 12, "mirror": [2, 13], "mito": [3, 4], "mlp": [11, 17], "mode": 16, "model": [12, 13, 17], "model_kwarg": 13, "model_load": [16, 17], "model_nam": 13, "model_save_path": [7, 13], "model_to_load": 13, "modul": [0, 5, 6, 8, 9, 10, 11, 12, 13, 16], "monitor": [13, 16], "more": [13, 16], "multipl": 12, "must": 2, "n": 16, "n_block": 8, "n_channel": [9, 10, 11], "n_class": [9, 10], "n_downsampl": 8, "name": [4, 12, 13, 16], "named_class": 3, "ndarrai": 4, "ndim": 8, "need": [5, 9, 10, 11, 13, 16], "net": [9, 10, 11], "new": 16, "ngf": 8, "nm": 16, "nn": [5, 8, 9, 10, 11, 12], "non": 8, "none": [2, 3, 4, 8, 9, 10, 11, 12, 13], "norm_lay": 8, "normal": 8, "note": 16, "novo": 13, "np": 4, "np2th": [11, 17], "nuc": [3, 4, 12, 13], "number": [2, 8, 13, 16], "numpi": [4, 16], "o": 12, "object": 16, "oihw": 11, "onc": 16, "one": [5, 9, 10, 11, 16], "onlin": 16, "optim": 13, "option": [2, 12, 13, 16], "org": 8, "origin": 8, "other": 13, "otherwis": 16, "out_channel": [9, 10, 11], "out_dataset": 12, "outconv": [9, 10, 17], "output": [5, 8, 12, 15], "output_nc": 8, "overridden": [5, 9, 10, 11], "overwrit": [4, 16], "packag": 16, "pad": 11, "padding_typ": 8, "page": 16, "paper": 8, "param": 8, "paramet": [2, 3, 4, 5, 12, 13, 15], "part": [9, 10], "pass": [5, 9, 10, 11, 13], "path": [2, 3, 4, 12, 13, 16], "pathlik": 12, "pdf": 8, "per": [2, 12, 13, 16], "perform": [5, 9, 10, 11], "pip": 16, "pm": 16, "portal": 16, "possibli": 11, "pre": 13, "pred": 4, "pred_label": 4, "pred_label_path": 4, "pred_volume_path": 4, "predict": [4, 13, 17], "predict_2d": 16, "predict_3d": 16, "probabl": 2, "progress": [13, 16], "proport": 13, "provid": [2, 13, 16], "pth": [13, 16], "py": 16, "python": [13, 16], "pytorch": 13, "r": 16, "randint": 4, "random": [4, 13], "random_se": 13, "randomli": 2, "rang": [2, 4], "rate": 13, "raw": 12, "raw_nam": 3, "readm": [13, 16], "recip": [5, 9, 10, 11], "recommend": 16, "recon": 3, "reflect": [8, 13], "region": 12, "regist": [5, 9, 10, 11], "registrationhead": [11, 17], "relu": 8, "replic": 8, "repo": 16, "reproduc": 13, "requir": [4, 16], "resblock": 8, "resnet": 17, "resnet2d": [8, 17], "resnet3d": [8, 17], "resnetblock2d": [8, 17], "resnetblock3d": [8, 17], "respect": 16, "result_fil": 4, "retriev": 16, "return": [2, 4, 8, 12, 13], "roi": 12, "rotat": [2, 13], "run": [5, 9, 10, 11, 13, 16], "same": [12, 13, 16], "sampl": 16, "save": [4, 12, 13, 16], "save_numpy_binary_to_zarr": [4, 16], "save_numpy_class_arrays_to_zarr": [4, 17], "save_numpy_class_labels_to_zarr": [4, 17], "save_numpy_labels_to_zarr": [4, 16], "save_path": 4, "save_result_fig": [15, 17], "scale": [2, 13, 16], "score": 4, "score_inst": [4, 17], "score_label": [4, 17], "score_semant": [4, 17], "score_submiss": [4, 17], "score_volum": [4, 17], "script": [13, 16], "scriptmodul": [5, 9, 10, 11], "search": 16, "search_path": [3, 7], "see": [13, 16], "seed": 13, "segment": 2, "semant": 4, "separ": 12, "sequenc": [2, 12, 15], "set": 13, "sh": 16, "shape": [2, 8, 12, 13, 16], "share": [5, 9, 10, 11], "shell": 16, "should": [2, 5, 9, 10, 11, 13, 16], "sign": 16, "silent": [5, 9, 10, 11, 13], "simpli": 16, "sinc": [5, 9, 10, 11], "singl": [4, 12, 16], "size": [2, 13], "skip": [8, 11], "skip_channel": 11, "sourc": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15], "spatial": [2, 8, 13], "spatial_transform": [2, 13], "specifi": [2, 4, 12, 13, 16], "split": [2, 12, 13], "src": 16, "stage": 3, "standard": 8, "start1": 12, "start2": 12, "state": [5, 9, 10, 11], "str": [2, 3, 4, 8, 12, 13, 15], "stride": 11, "string": [12, 13], "structur": 4, "subclass": [5, 9, 10, 11], "submiss": [4, 16], "submission_path": [4, 16], "sure": 16, "swish": [11, 17], "take": [5, 9, 10, 11], "target": [2, 5, 13, 15], "target_array_info": [2, 13], "tensor": [5, 15], "tensorboard": [13, 16], "termin": [13, 16], "test": 4, "test_volum": 4, "test_volume_nam": [4, 16], "thei": [12, 16], "them": [5, 9, 10, 11, 16], "thi": [2, 5, 9, 10, 11, 13, 16], "thoroughli": 16, "through": 16, "time": 8, "top": 16, "torch": [2, 8, 12], "train": [2, 17], "train_2d": 16, "train_3d": 16, "transform": [2, 11, 13, 17], "transpos": [2, 13], "transpose_for_scor": 11, "trasposit": 2, "trilinear": [9, 10], "true": [7, 9, 10, 11], "truth": 4, "truth_label": 4, "truth_path": 4, "tupl": [2, 12], "type": [2, 4, 8, 12, 13], "u": [9, 10], "uint8": 3, "unet_2d": [9, 17], "unet_3d": [10, 17], "unet_model_2d": [16, 17], "unet_model_3d": 17, "uniqu": 16, "unzip": 4, "unzip_fil": [4, 17], "up": [9, 10, 17], "upsampl": 11, "us": [2, 12, 13, 16], "usag": [3, 4], "use_batchnorm": 11, "use_bia": 8, "use_dropout": 8, "util": [2, 16], "v": 11, "val": [2, 13], "valid": [2, 8, 13, 16], "validation_prob": [3, 13], "validation_scor": 15, "valu": [2, 12], "vi": 11, "view": 16, "viewabl": 16, "visual": 17, "vit": 11, "vitnet": [13, 17], "vitvnet": [11, 17], "volum": [4, 16], "voxel": 16, "wai": 16, "we": [8, 16], "weight": [11, 16], "welcom": 16, "well": [13, 16], "when": 2, "which": [13, 16], "while": [5, 9, 10, 11], "within": [2, 5, 9, 10, 11], "worker": 2, "x": [2, 8, 9, 10, 11, 12, 13], "x1": [9, 10], "x2": [9, 10], "y": [2, 12, 13, 16], "you": 16, "z": [2, 12], "zarr": [3, 4, 16], "zero": 8, "zip": [4, 16], "zip_path": 4}, "titles": ["cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli package", "cellmap_segmentation_challenge.dataloader", "cellmap_segmentation_challenge.datasplit", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.loss", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils package", "cellmap_segmentation_challenge.visualize", "CellMap Segmentation Challenge", "src"], "titleterms": {"api": 16, "cellmap": 16, "cellmap_segmentation_challeng": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "challeng": 16, "cli": 1, "clone": 16, "content": [1, 14], "crop": 14, "data": 16, "dataload": 2, "datasplit": 3, "download": 16, "environ": 16, "evalu": 4, "fetch_data": 1, "get": 16, "link": 16, "loss": 5, "model": [6, 7, 8, 9, 10, 11, 16], "model_load": 7, "modul": [1, 14], "packag": [1, 14], "pipelin": 14, "predict": [12, 16], "repositori": 16, "resnet": 8, "segment": 16, "set": 16, "src": 17, "start": 16, "structur": 16, "submit": 16, "submodul": [1, 14], "test": 16, "train": [13, 16], "unet_model_2d": 9, "unet_model_3d": 10, "up": 16, "util": 14, "visual": 15, "vitnet": 11, "your": 16}})