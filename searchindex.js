Search.setIndex({"alltitles": {"API": [[21, "api"]], "Adding to this project": [[27, null]], "COSEM": [[26, "cosem"]], "CellMap Schemas": [[0, null], [28, null]], "CellMap Segmentation Challenge": [[21, null]], "Chunked array format": [[26, "chunked-array-format"]], "Clone the repository": [[21, "clone-the-repository"]], "Contents:": [[21, null]], "Contributing": [[0, "contributing"], [28, "contributing"]], "Dataset names": [[26, "dataset-names"]], "Datasets on S3": [[26, "datasets-on-s3"]], "Download the data": [[21, "download-the-data"]], "Downsampling and coordinates": [[26, "downsampling-and-coordinates"]], "Example: creating an N5 hierarchy for Neuroglancer": [[0, "example-creating-an-n5-hierarchy-for-neuroglancer"], [28, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[0, "example-validating-a-container-with-the-cli"], [28, "example-validating-a-container-with-the-cli"]], "Getting started": [[21, "getting-started"]], "Image layout": [[26, "image-layout"]], "Installation": [[0, "installation"], [28, "installation"]], "Links": [[21, "links"]], "Module contents": [[2, "module-contents"]], "Multiple image alignments": [[26, "multiple-image-alignments"]], "Multiresolution image layout": [[26, "multiresolution-image-layout"]], "Multiscale image metadata": [[26, "multiscale-image-metadata"]], "Outline": [[26, null]], "Predict on test data": [[21, "predict-on-test-data"]], "Repository structure": [[21, "repository-structure"]], "S3 layout": [[26, "s3-layout"]], "Set up your environment": [[21, "set-up-your-environment"]], "Submit your predictions": [[21, "submit-your-predictions"]], "Submodules": [[2, "submodules"]], "Train a model": [[21, "train-a-model"]], "What is a dataset": [[26, "what-is-a-dataset"]], "cellmap-schemas check": [[0, "cellmap-schemas-check"], [28, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[0, "cellmap-schemas-inspect"], [28, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge": [[1, null]], "cellmap_segmentation_challenge.cli package": [[2, null]], "cellmap_segmentation_challenge.cli.datasplit module": [[2, "cellmap-segmentation-challenge-cli-datasplit-module"]], "cellmap_segmentation_challenge.cli.evaluate module": [[2, "module-cellmap_segmentation_challenge.cli.evaluate"]], "cellmap_segmentation_challenge.cli.fetch_data module": [[2, "module-cellmap_segmentation_challenge.cli.fetch_data"]], "cellmap_segmentation_challenge.cli.predict module": [[2, "module-cellmap_segmentation_challenge.cli.predict"]], "cellmap_segmentation_challenge.cli.train module": [[2, "module-cellmap_segmentation_challenge.cli.train"]], "cellmap_segmentation_challenge.evaluate": [[3, null]], "cellmap_segmentation_challenge.models": [[4, null]], "cellmap_segmentation_challenge.models.model_load": [[5, null]], "cellmap_segmentation_challenge.models.resnet": [[6, null]], "cellmap_segmentation_challenge.models.unet_model_2D": [[7, null]], "cellmap_segmentation_challenge.models.unet_model_3D": [[8, null]], "cellmap_segmentation_challenge.models.vitnet": [[9, null]], "cellmap_segmentation_challenge.postprocess": [[10, null]], "cellmap_segmentation_challenge.predict": [[11, null]], "cellmap_segmentation_challenge.train": [[12, null]], "cellmap_segmentation_challenge.utils": [[13, null]], "cellmap_segmentation_challenge.utils.crops": [[14, null]], "cellmap_segmentation_challenge.utils.dataloader": [[15, null]], "cellmap_segmentation_challenge.utils.datasplit": [[16, null]], "cellmap_segmentation_challenge.utils.fetch_data": [[17, null]], "cellmap_segmentation_challenge.utils.loss": [[18, null]], "cellmap_segmentation_challenge.utils.pipeline": [[19, null]], "cellmap_segmentation_challenge.utils.visualize": [[20, null]], "src": [[22, null]]}, "docnames": ["cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.postprocess", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.pipeline", "cellmap_segmentation_challenge.utils.visualize", "index", "modules", "scheme_docs/api/annotation", "scheme_docs/api/multiscale/cosem", "scheme_docs/api/multiscale/neuroglancer_n5", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.evaluate.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.models.model_load.rst", "cellmap_segmentation_challenge.models.resnet.rst", "cellmap_segmentation_challenge.models.unet_model_2D.rst", "cellmap_segmentation_challenge.models.unet_model_3D.rst", "cellmap_segmentation_challenge.models.vitnet.rst", "cellmap_segmentation_challenge.postprocess.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "cellmap_segmentation_challenge.utils.crops.rst", "cellmap_segmentation_challenge.utils.dataloader.rst", "cellmap_segmentation_challenge.utils.datasplit.rst", "cellmap_segmentation_challenge.utils.fetch_data.rst", "cellmap_segmentation_challenge.utils.loss.rst", "cellmap_segmentation_challenge.utils.pipeline.rst", "cellmap_segmentation_challenge.utils.visualize.rst", "index.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/api/multiscale/cosem.md", "scheme_docs/api/multiscale/neuroglancer_n5.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md"], "indexentries": {"alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[1, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.cli.evaluate": [[2, "module-cellmap_segmentation_challenge.cli.evaluate", false]], "cellmap_segmentation_challenge.cli.fetch_data": [[2, "module-cellmap_segmentation_challenge.cli.fetch_data", false]], "cellmap_segmentation_challenge.cli.predict": [[2, "module-cellmap_segmentation_challenge.cli.predict", false]], "cellmap_segmentation_challenge.cli.train": [[2, "module-cellmap_segmentation_challenge.cli.train", false]], "cellmap_segmentation_challenge.evaluate": [[3, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[4, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[5, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[6, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[7, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[8, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[9, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.postprocess": [[10, "module-cellmap_segmentation_challenge.postprocess", false]], "cellmap_segmentation_challenge.utils": [[13, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[14, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[15, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[16, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[17, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[18, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.pipeline": [[19, "module-cellmap_segmentation_challenge.utils.pipeline", false]], "cellmap_segmentation_challenge.utils.visualize": [[20, "module-cellmap_segmentation_challenge.utils.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[18, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "createpoints (class in cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.CreatePoints", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "dilatepoints (class in cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.DilatePoints", false]], "dilations (cellmap_segmentation_challenge.utils.pipeline.randomdilatelabels attribute)": [[19, "cellmap_segmentation_challenge.utils.pipeline.RandomDilateLabels.dilations", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "expandlabels (class in cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.ExpandLabels", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[14, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[9, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[9, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[9, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[18, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_array_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_array_objects", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[16, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[15, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[16, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_fibsem_path() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_fibsem_path", false]], "get_group_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_group_objects", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_url", false]], "gt_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_url", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "labels (cellmap_segmentation_challenge.utils.pipeline.randomdilatelabels attribute)": [[19, "cellmap_segmentation_challenge.utils.pipeline.RandomDilateLabels.labels", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[16, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[1, "module-cellmap_segmentation_challenge", false], [2, "module-cellmap_segmentation_challenge.cli.evaluate", false], [2, "module-cellmap_segmentation_challenge.cli.fetch_data", false], [2, "module-cellmap_segmentation_challenge.cli.predict", false], [2, "module-cellmap_segmentation_challenge.cli.train", false], [3, "module-cellmap_segmentation_challenge.evaluate", false], [4, "module-cellmap_segmentation_challenge.models", false], [5, "module-cellmap_segmentation_challenge.models.model_load", false], [6, "module-cellmap_segmentation_challenge.models.resnet", false], [7, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [8, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [9, "module-cellmap_segmentation_challenge.models.vitnet", false], [10, "module-cellmap_segmentation_challenge.postprocess", false], [13, "module-cellmap_segmentation_challenge.utils", false], [14, "module-cellmap_segmentation_challenge.utils.crops", false], [15, "module-cellmap_segmentation_challenge.utils.dataloader", false], [16, "module-cellmap_segmentation_challenge.utils.datasplit", false], [17, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [18, "module-cellmap_segmentation_challenge.utils.loss", false], [19, "module-cellmap_segmentation_challenge.utils.pipeline", false], [20, "module-cellmap_segmentation_challenge.utils.visualize", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge)": [[11, "cellmap_segmentation_challenge.predict", false]], "process() (cellmap_segmentation_challenge.utils.pipeline.createpoints method)": [[19, "cellmap_segmentation_challenge.utils.pipeline.CreatePoints.process", false]], "process() (cellmap_segmentation_challenge.utils.pipeline.dilatepoints method)": [[19, "cellmap_segmentation_challenge.utils.pipeline.DilatePoints.process", false]], "process() (cellmap_segmentation_challenge.utils.pipeline.expandlabels method)": [[19, "cellmap_segmentation_challenge.utils.pipeline.ExpandLabels.process", false]], "process() (cellmap_segmentation_challenge.utils.pipeline.randomdilatelabels method)": [[19, "cellmap_segmentation_challenge.utils.pipeline.RandomDilateLabels.process", false], [19, "id0", false]], "process() (cellmap_segmentation_challenge.utils.pipeline.relabel method)": [[19, "cellmap_segmentation_challenge.utils.pipeline.Relabel.process", false]], "provide() (cellmap_segmentation_challenge.utils.pipeline.zerossource method)": [[19, "cellmap_segmentation_challenge.utils.pipeline.ZerosSource.provide", false]], "random_source_pipeline() (in module cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.random_source_pipeline", false]], "randomdilatelabels (class in cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.RandomDilateLabels", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "relabel (class in cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.Relabel", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "save_result_figs() (in module cellmap_segmentation_challenge.utils.visualize)": [[20, "cellmap_segmentation_challenge.utils.visualize.save_result_figs", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "setup() (cellmap_segmentation_challenge.utils.pipeline.zerossource method)": [[19, "cellmap_segmentation_challenge.utils.pipeline.ZerosSource.setup", false]], "simulate_predictions_accuracy() (in module cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.simulate_predictions_accuracy", false]], "simulate_predictions_iou() (in module cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.simulate_predictions_iou", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "train() (in module cellmap_segmentation_challenge)": [[12, "cellmap_segmentation_challenge.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]], "zerossource (class in cellmap_segmentation_challenge.utils.pipeline)": [[19, "cellmap_segmentation_challenge.utils.pipeline.ZerosSource", false]]}, "objects": {"": [[1, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[3, 0, 0, "-", "evaluate"], [4, 0, 0, "-", "models"], [10, 0, 0, "-", "postprocess"], [11, 1, 1, "", "predict"], [12, 1, 1, "", "train"], [13, 0, 0, "-", "utils"]], "cellmap_segmentation_challenge.cli": [[2, 0, 0, "-", "evaluate"], [2, 0, 0, "-", "fetch_data"], [2, 0, 0, "-", "predict"], [2, 0, 0, "-", "train"]], "cellmap_segmentation_challenge.evaluate": [[3, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [3, 1, 1, "", "save_numpy_class_labels_to_zarr"], [3, 1, 1, "", "score_instance"], [3, 1, 1, "", "score_label"], [3, 1, 1, "", "score_semantic"], [3, 1, 1, "", "score_submission"], [3, 1, 1, "", "score_volume"], [3, 1, 1, "", "unzip_file"]], "cellmap_segmentation_challenge.models": [[5, 0, 0, "-", "model_load"], [6, 0, 0, "-", "resnet"], [7, 0, 0, "-", "unet_model_2D"], [8, 0, 0, "-", "unet_model_3D"], [9, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[5, 1, 1, "", "load_best_val"], [5, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[6, 2, 1, "", "ResNet"], [6, 2, 1, "", "Resnet2D"], [6, 2, 1, "", "Resnet3D"], [6, 2, 1, "", "ResnetBlock2D"], [6, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[6, 3, 1, "", "build_conv_block"], [6, 3, 1, "", "crop"], [6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[6, 3, 1, "", "build_conv_block"], [6, 3, 1, "", "crop"], [6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[7, 2, 1, "", "DoubleConv"], [7, 2, 1, "", "Down"], [7, 2, 1, "", "OutConv"], [7, 2, 1, "", "UNet_2D"], [7, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[8, 2, 1, "", "DoubleConv"], [8, 2, 1, "", "Down"], [8, 2, 1, "", "OutConv"], [8, 2, 1, "", "UNet_3D"], [8, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[9, 2, 1, "", "Attention"], [9, 2, 1, "", "Block"], [9, 2, 1, "", "CNNEncoder"], [9, 2, 1, "", "Conv3dReLU"], [9, 2, 1, "", "DecoderBlock"], [9, 2, 1, "", "DecoderCup"], [9, 2, 1, "", "DoubleConv"], [9, 2, 1, "", "Down"], [9, 2, 1, "", "Embeddings"], [9, 2, 1, "", "Encoder"], [9, 2, 1, "", "Mlp"], [9, 2, 1, "", "RegistrationHead"], [9, 2, 1, "", "Transformer"], [9, 2, 1, "", "ViTVNet"], [9, 1, 1, "", "get_3DReg_config"], [9, 1, 1, "", "np2th"], [9, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[9, 3, 1, "", "forward"], [9, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils": [[14, 0, 0, "-", "crops"], [15, 0, 0, "-", "dataloader"], [16, 0, 0, "-", "datasplit"], [17, 0, 0, "-", "fetch_data"], [18, 0, 0, "-", "loss"], [19, 0, 0, "-", "pipeline"], [20, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.utils.crops": [[14, 2, 1, "", "CropRow"], [14, 1, 1, "", "fetch_manifest"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[14, 4, 1, "", "alignment"], [14, 4, 1, "", "dataset"], [14, 4, 1, "", "em_url"], [14, 3, 1, "", "from_csv_row"], [14, 4, 1, "", "gt_url"], [14, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.dataloader": [[15, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[16, 1, 1, "", "get_csv_string"], [16, 1, 1, "", "get_dataset_counts"], [16, 1, 1, "", "make_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[17, 1, 1, "", "copy_store"], [17, 1, 1, "", "get_array_objects"], [17, 1, 1, "", "get_chunk_keys"], [17, 1, 1, "", "get_fibsem_path"], [17, 1, 1, "", "get_group_objects"], [17, 1, 1, "", "get_store_url"], [17, 1, 1, "", "get_url"], [17, 1, 1, "", "partition_copy_store"], [17, 1, 1, "", "read_group"], [17, 1, 1, "", "resolve_em_url"], [17, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[18, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.pipeline": [[19, 2, 1, "", "CreatePoints"], [19, 2, 1, "", "DilatePoints"], [19, 2, 1, "", "ExpandLabels"], [19, 2, 1, "", "RandomDilateLabels"], [19, 2, 1, "", "Relabel"], [19, 2, 1, "", "ZerosSource"], [19, 1, 1, "", "random_source_pipeline"], [19, 1, 1, "", "simulate_predictions_accuracy"], [19, 1, 1, "", "simulate_predictions_iou"]], "cellmap_segmentation_challenge.utils.pipeline.CreatePoints": [[19, 3, 1, "", "process"]], "cellmap_segmentation_challenge.utils.pipeline.DilatePoints": [[19, 3, 1, "", "process"]], "cellmap_segmentation_challenge.utils.pipeline.ExpandLabels": [[19, 3, 1, "", "process"]], "cellmap_segmentation_challenge.utils.pipeline.RandomDilateLabels": [[19, 4, 1, "", "dilations"], [19, 4, 1, "", "labels"], [19, 3, 1, "id0", "process"]], "cellmap_segmentation_challenge.utils.pipeline.Relabel": [[19, 3, 1, "", "process"]], "cellmap_segmentation_challenge.utils.pipeline.ZerosSource": [[19, 3, 1, "", "provide"], [19, 3, 1, "", "setup"]], "cellmap_segmentation_challenge.utils.visualize": [[20, 1, 1, "", "save_result_figs"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [21, 26], "0": [0, 3, 9, 11, 12, 15, 16, 19, 21, 26, 28], "0001": 12, "03385": 6, "1": [0, 6, 9, 12, 15, 16, 19, 21, 28], "10": [0, 28], "100": 19, "1000": [12, 15], "11": [21, 26], "12": 16, "128": [3, 9, 12], "148": 19, "150": 19, "1512": 6, "16": [0, 26, 28], "180": [12, 15], "2": [0, 3, 6, 9, 11, 19, 21, 26, 28], "20": 19, "2019": 26, "255": 11, "2d": [15, 21, 26], "2d_resnet": 12, "2d_unet": 12, "2x2": 26, "3": [9, 12, 16, 21], "3d": [3, 15, 21], "3d_resnet": 12, "3d_unet": 12, "4": [0, 3, 28], "42": 12, "5": [0, 12, 15, 26, 28], "6": 6, "64": 6, "7": 16, "8": [0, 12, 19, 26, 28], "8x8x8": 21, "8x8x8nm": 21, "A": [3, 6, 14, 16, 19, 21, 26], "And": [0, 28], "As": 26, "At": 26, "But": [0, 26, 28], "By": [16, 26], "For": [0, 3, 11, 15, 21, 26, 28], "If": [11, 12, 16, 19, 26], "In": [0, 26, 28], "It": 21, "OR": 3, "The": [0, 3, 5, 11, 12, 14, 16, 17, 19, 20, 21, 26, 28], "These": 17, "To": [0, 21, 26, 28], "With": 26, "_": [3, 12, 26], "_loss": 18, "_weightedloss": 18, "abbrevi": 26, "abl": 26, "about": 26, "abov": [0, 26, 28], "access": 26, "accord": 26, "account": 21, "accuraci": [3, 19], "acquir": 26, "acronym": 26, "across": 3, "activ": [6, 21], "add": 19, "addit": 26, "addition": 26, "address": [0, 26, 28], "adjac": 26, "adopt": 26, "advent": 26, "affin": 11, "after": [12, 27], "afterward": [7, 8, 9, 18], "against": [0, 3, 28], "aic_desmosom": 26, "aim": 26, "align": 14, "all": [3, 7, 8, 9, 16, 17, 18, 21, 26], "along": [21, 26], "alreadi": [12, 21, 26], "also": [0, 21, 26, 28], "altern": 26, "although": [7, 8, 9, 18], "alwai": [15, 21], "amazon": 26, "amount": 26, "an": [5, 12, 19, 21, 26], "analysi": 26, "angl": 15, "ani": [0, 12, 15, 19, 26, 28], "annot": [21, 23], "anoth": 26, "anyon": 26, "anyth": 12, "apart": 26, "appli": [6, 12, 15, 19, 26], "applic": [0, 26, 28], "ar": [0, 12, 16, 19, 21, 26, 28], "arang": [0, 28], "architectur": 12, "argument": [12, 21], "around": 26, "arrai": [0, 3, 15, 17, 19, 21, 28], "array_info": 15, "arrayspec": 19, "art": 26, "arxiv": 6, "assum": [21, 26], "attempt": [0, 28], "attent": [9, 22], "attr": [0, 28], "attract": 26, "attribut": [0, 26, 28], "avail": [21, 26], "averag": 26, "ax": [0, 12, 15, 28], "axi": [15, 26], "b": 21, "backend": 26, "background": [3, 19, 21, 26], "base": [0, 26, 28], "basestor": 17, "batch": [12, 15, 19], "batch_siz": [12, 15, 17], "batchrequest": 19, "becam": 26, "becaus": [0, 26, 28], "been": 26, "befor": [6, 19, 26], "being": [16, 17], "belong": 11, "below": 21, "best": [5, 12], "better": [5, 26], "beyond": 26, "bilinear": 7, "binari": [3, 21], "bit": 26, "block": [6, 9, 11, 22, 26], "bool": [5, 6, 16, 19], "boolean": 21, "both": [7, 8, 9, 18, 21], "boundlogg": 17, "branch": 27, "brows": 26, "bucket": 26, "build": 26, "build_conv_block": 6, "built": 21, "bulk": 26, "c": [0, 26, 28], "call": [7, 8, 9, 12, 18, 26], "came": 26, "campu": [0, 26, 28], "can": [0, 11, 12, 21, 26, 28], "cannot": 26, "care": [7, 8, 9, 18], "cd": 21, "cell": 26, "cellmap": [17, 26, 27], "cellmap_schema": [0, 23, 24, 25, 28], "cellmap_segmentation_challeng": [21, 22], "cellmapdataload": 15, "cellmaplosswrapp": [18, 22], "cellular": 26, "center": 6, "certain": 26, "chanel": 11, "chang": [26, 27], "channel": [6, 11], "checkpoint": [5, 12, 21], "choos": 21, "chosen": [15, 26], "chunk": [0, 17, 28], "clariti": 21, "class": [0, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 26, 28], "classmethod": 14, "cli": 21, "client": 26, "clone": 27, "cloud": [0, 26, 28], "cnnencod": [9, 22], "coarsen": 26, "coarser": 26, "code": [26, 27], "coicind": 26, "coin": 26, "collabor": 26, "collect": 26, "com": [21, 27], "combin": [3, 11], "combined_scor": 3, "come": [0, 26, 28], "command": [0, 21, 28], "common": 26, "commun": 26, "compactli": 26, "complet": 26, "compli": [0, 26, 28], "complic": 26, "compress": 26, "compressor": [0, 28], "compris": 26, "comput": [7, 8, 9, 18], "config": [9, 12], "config_path": 12, "configur": 12, "confirm": [0, 28], "connect": [6, 19], "consist": 26, "constraint": 26, "construct": [6, 12], "constructor": 12, "consum": [0, 26, 28], "contain": [12, 15, 19, 21, 26], "contigu": 26, "continu": 26, "contribut": 21, "conv": [6, 9], "conv3drelu": [9, 22], "conveni": [21, 26], "convent": [0, 26, 28], "convention": 26, "convert": [9, 21, 26], "convolut": 6, "copi": [17, 26], "copy_stor": [17, 22], "core": 17, "corner": 26, "corpuscl": 26, "correct": [21, 26], "correctli": [0, 26, 28], "correspond": [3, 21], "cosem": [0, 24, 28], "cost": 26, "could": [15, 26], "count": 16, "cover": 26, "creat": [14, 17, 19, 21, 26], "createpoint": [19, 22], "crop": [6, 16, 17, 21, 22], "crop_path": 17, "croprow": [14, 22], "csc": 21, "csv": [12, 14, 16], "csv_path": 16, "cuda": 15, "curl": 21, "current": 26, "data": [0, 3, 6, 11, 12, 15, 16, 17, 19, 26, 28], "data_d": [0, 28], "dataclass": 14, "dataload": [12, 22], "datapath": 16, "datapath_prefix": 16, "dataset": [0, 11, 12, 14, 16, 28], "datasplit": [12, 15, 22], "datasplit_path": [12, 15], "date": 26, "de": 12, "decid": 26, "decis": 26, "declar": 26, "decoderblock": [9, 22], "decodercup": [9, 22], "deem": 26, "default": [6, 11, 12, 16, 17, 19, 21], "defin": [0, 7, 8, 9, 12, 15, 18, 26, 28], "denot": 26, "depend": [21, 26, 27], "depict": 26, "deriv": 26, "describ": 26, "design": [21, 26], "dest": [17, 21], "dest_stor": 17, "detail": 26, "develop": [0, 26, 28], "devic": 15, "dice": 3, "dice_scor": 3, "dict": [3, 11, 16, 19], "dictionari": [3, 11, 12, 15, 16], "did": [0, 26, 28], "differ": 26, "dilat": 19, "dilatepoint": [19, 22], "dim": 6, "dimens": [0, 6, 26, 28], "dimension_ord": [0, 28], "dimension_separ": [0, 28], "directli": 26, "directori": [3, 5, 21, 26, 27], "disk": [0, 28], "displai": 26, "disrupt": 26, "distanc": [3, 26], "distinct": 26, "distinguish": 26, "distribut": 26, "divid": 26, "do": [0, 16, 21, 26, 28], "document": [12, 21, 26, 27], "doe": [12, 26], "doubleconv": [7, 8, 9, 22], "down": [7, 8, 9, 22], "downsampl": 6, "downscal": 26, "dry_run": 16, "dtype": [0, 19, 28], "dure": 26, "e": [21, 26], "each": [3, 11, 12, 15, 16, 21, 26], "earli": 26, "earlier": [0, 28], "easi": 21, "edit": 21, "effort": 26, "egment": 26, "either": [15, 21], "electron": 26, "ellular": 26, "em": [0, 16, 21, 26, 28], "em_source_path": 17, "em_source_root": 17, "em_url": 14, "embed": [9, 22], "emit": 26, "encod": [9, 22], "end": [3, 21, 26], "end1": 11, "end2": 11, "enorm": 26, "ensur": 26, "entail": 26, "entir": 11, "epoch": [12, 15], "equal": 26, "er": 12, "er_palm": 26, "era": 26, "error": [0, 28], "especi": 26, "essenti": 26, "estim": 26, "etc": 26, "evalu": [21, 22], "everi": [7, 8, 9, 18, 26], "exampl": [3, 11, 15, 19, 21, 26], "except": 21, "exclud": [0, 28], "exist": [5, 12, 17, 21, 26], "expand": 19, "expand_label": 19, "expandlabel": [19, 22], "explain": 26, "express": 26, "extend": 26, "extens": 21, "f": [0, 28], "face": 26, "factor": 26, "fail": [0, 28], "fals": [3, 6, 7, 8, 9, 16, 19], "far": 26, "fastest": 21, "featur": [9, 26], "feel": 26, "fetch": [14, 21], "fetch_data": 22, "fetch_manifest": [14, 22], "few": 26, "fib": [17, 26], "fibsem": [0, 16, 17, 26, 28], "figur": 20, "figures_save_path": 20, "file": [0, 3, 12, 14, 15, 16, 21, 26, 28], "filenam": [3, 21], "filesystem": 21, "fill": 19, "fill_valu": [0, 28], "filter": [0, 19, 28], "find": [16, 26], "fine": 26, "first": [21, 26], "flag": 21, "flexibl": 21, "flip": [0, 28], "float": [3, 11, 15, 16], "fluent": 26, "fluoresc": 26, "folder": 21, "follow": [0, 3, 21, 26, 28], "foo": [0, 28], "footprint": 26, "forc": [16, 26], "force_all_class": 16, "form": [11, 26], "formal": [0, 28], "format": [0, 11, 21, 28], "former": [7, 8, 9, 18], "forward": [6, 7, 8, 9, 18], "found": [16, 26], "freedom": [0, 28], "from": [0, 5, 12, 14, 15, 17, 21, 26, 28], "from_arrai": [0, 28], "from_csv_row": 14, "front": 26, "function": [3, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 26], "further": 26, "futur": 26, "g": 26, "gener": [3, 12, 17, 19, 21, 26], "generos": 26, "geometr": 3, "get": [15, 16, 17], "get_3dreg_config": [9, 22], "get_array_object": [17, 22], "get_chunk_kei": [17, 22], "get_csv_str": [16, 22], "get_dataload": [15, 22], "get_dataset_count": [16, 22], "get_fibsem_path": [17, 22], "get_group_object": [17, 22], "get_store_url": [17, 22], "get_url": [17, 22], "git": [21, 27], "github": [21, 26, 27], "give": [0, 26, 28], "given": [6, 15, 16], "goal": 26, "googl": 26, "gp": 19, "grid": 26, "ground": 3, "ground_truth": 3, "groundtruth": [16, 21], "group": [0, 17, 26, 28], "group_model": [0, 28], "groupmetadata": [0, 28], "grown": 26, "gt": [0, 26, 28], "gt_url": 14, "guid": [0, 28], "gunpowd": 19, "ha": 26, "hand": 26, "happen": 26, "hausdorff_distance_max": 3, "haussdorf": 3, "haussdorf_dist": 3, "have": [21, 26], "hela": 26, "help": 21, "here": [0, 21, 26, 28], "hidden_st": 9, "hierachi": 26, "hierarchi": [21, 26], "highest": 26, "histor": 26, "histori": 26, "home": 26, "hook": [7, 8, 9, 18], "host": 26, "hostedtoolcach": 16, "how": [0, 21, 28], "howev": 26, "http": [6, 27], "human": 26, "hwio": 9, "hyperparamet": 12, "i": [0, 3, 5, 6, 11, 12, 15, 16, 19, 21, 28], "i8": [0, 28], "icroscopi": 26, "id": [14, 21], "identifi": 26, "ignor": [7, 8, 9, 12, 18], "imag": [0, 6, 20, 28], "imageri": 26, "img_siz": 9, "immut": 26, "impair": 26, "implement": [6, 19, 26], "import": [0, 28], "in_channel": [7, 8, 9], "in_dataset": 11, "includ": [11, 12, 16, 26], "independ": 12, "index": 21, "indic": [0, 11, 26, 28], "individu": [19, 26], "induc": 26, "inf": 3, "info": 15, "inform": [12, 21, 26], "initi": [6, 7, 8, 9, 12, 18, 19], "inner_arrai": 17, "input": [0, 6, 11, 12, 15, 19, 20, 28], "input_array_info": [12, 15], "input_block_shap": 11, "input_id": 9, "input_nc": 6, "input_shap": 19, "insid": 26, "instal": [21, 27], "instanc": [3, 7, 8, 9, 18, 21, 26], "instance_class": 3, "instancenorm": 6, "instancenorm2d": 6, "instancenorm3d": 6, "instead": [7, 8, 9, 18, 26], "institut": 26, "instruct": 21, "int": [6, 11, 14, 15, 19], "integ": 19, "intend": 26, "inter": 26, "interact": [21, 26], "interest": [11, 26], "intern": [7, 8, 9, 18, 26], "intersect": 3, "introduc": 26, "invent": 26, "involv": 26, "invovl": 15, "iou": [3, 19], "issu": [0, 28], "iter": [12, 15, 17], "iterations_per_epoch": [12, 15], "its": 26, "janelia": [0, 17, 21, 26, 27, 28], "jpeg": 26, "jpg": 26, "jrc": 26, "jrc_cos7": 26, "jrc_dauer": 26, "jrc_hela": [0, 26, 28], "jrc_macrophag": 26, "jrc_mu": 26, "json": [3, 26], "just": 16, "keep": 26, "kei": [17, 19, 26], "kept": 26, "kernel_s": 9, "keyword": 12, "known": 26, "kwarg": [6, 17, 18], "l": 21, "label": [3, 11, 16, 19, 21, 26], "label1": 3, "label2": 3, "label3": 3, "label_nam": [3, 21], "label_scor": 3, "larg": [0, 11, 26, 28], "larger": 26, "largest": 26, "larva": 26, "latest": [5, 12], "latter": [7, 8, 9, 18], "layer": 6, "learn": [12, 26], "learning_r": 12, "least": [16, 26], "lection": 26, "led": 26, "len": 3, "less": 26, "level": 26, "lib": 16, "librari": [0, 28], "light": 26, "like": [0, 15, 26, 28], "limit": 26, "line": [0, 21, 28], "linear": 6, "link": 26, "list": [3, 11, 12, 15, 16, 17, 19, 21, 26], "lm": 26, "lm_488": 26, "load": [5, 12, 15, 26], "load_best_v": [5, 22], "load_latest": [5, 22], "load_model": 12, "local": [0, 21, 26, 27, 28], "locat": [0, 26, 28], "log": [5, 12, 17, 21], "logdir": [12, 21], "logs_save_path": [5, 12], "long": 16, "longer": 26, "look": 26, "loss": [21, 22], "loss_fn": 18, "lossi": 26, "lot": 26, "low_is_best": 5, "lower": 5, "lt": [0, 26, 28], "m": 26, "machin": 26, "mai": [12, 17, 26], "main": [26, 27], "maintain": 26, "make": [16, 21, 26, 27], "make_datasplit_csv": [16, 22], "mamba": 21, "manag": 27, "mani": 26, "manifest": 14, "map": [15, 26], "massiv": 26, "match": [6, 11, 21], "matter": 26, "max_raw": 11, "maximum": 11, "md": [12, 21], "mean": [3, 26], "member": [0, 28], "mere": 26, "mesh": 26, "messag": [0, 28], "metadata": [0, 28], "metamorphos": 26, "method": [0, 19, 26, 28], "metric": 21, "micro": 21, "micromamba": 21, "microscopi": 26, "mid_channel": [7, 8, 9], "might": 26, "migrat": 26, "min_raw": 11, "minimum": 11, "mirror": [12, 15], "mito": [3, 16], "mito_pr": 26, "mito_seg": 26, "mitochondria": 26, "mkdoc": 27, "mlp": [9, 22], "modal": 26, "mode": 21, "model": [0, 11, 12, 22, 26, 28], "model_dump": [0, 28], "model_kwarg": 12, "model_load": [21, 22], "model_nam": 12, "model_save_path": [5, 12], "model_to_load": 12, "modif": 17, "modul": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 21], "monitor": [12, 21], "more": [12, 21], "motiv": 26, "mous": 26, "move": 26, "much": [0, 28], "mulitscal": [0, 28], "multi": [0, 26, 28], "multipl": 11, "multiscal": [0, 24, 25, 28], "multscal": 26, "must": [15, 26], "n": 21, "n5": [21, 26], "n_block": 6, "n_channel": [7, 8, 9], "n_class": [7, 8], "n_downsampl": 6, "name": [0, 3, 11, 12, 16, 19, 21, 28], "navig": 27, "ndarrai": 3, "ndim": 6, "nearest": 26, "necessari": 19, "need": [0, 7, 8, 9, 12, 18, 21, 26, 28], "needlessli": 26, "nesteddirectorystor": [0, 28], "net": [7, 8, 9], "neuroglanc": [21, 26], "neuroglancer_n5": [0, 25, 28], "never": 26, "new": [21, 26], "newer": 26, "ngf": 6, "ngff": 26, "nm": [0, 21, 28], "nn": [5, 6, 7, 8, 9, 11, 18], "node": 17, "non": [6, 26], "none": [0, 3, 6, 7, 8, 9, 11, 12, 15, 16, 17, 28], "norm_lay": 6, "normal": [3, 6], "normalized_haussdorf_dist": 3, "note": [0, 21, 26, 28], "notimplementederror": 19, "novo": 12, "np": [0, 3, 19, 28], "np2th": [9, 22], "nuc": [3, 11, 12, 16], "num_point": 19, "num_voxel": 3, "number": [3, 6, 12, 15, 19, 21, 26], "numpi": [0, 3, 19, 21, 26, 28], "o": [0, 11, 26, 28], "object": [5, 14, 17, 19, 21, 26], "obviou": 26, "often": 26, "oihw": 9, "old": 26, "older": 26, "om": 26, "onc": [21, 26], "one": [7, 8, 9, 16, 18, 21, 26], "onli": [16, 26], "onlin": 21, "open": [0, 26, 28], "openorganel": 26, "oper": [0, 26, 28], "opt": 16, "optim": 12, "option": [11, 12, 15, 16, 19, 21], "order": [0, 28], "org": 6, "organ": [0, 26, 28], "organel": 26, "origin": [6, 26], "other": [12, 26], "otherwis": [16, 21], "our": [0, 26, 28], "out": [0, 26, 28], "out_channel": [7, 8, 9], "out_dataset": 11, "outconv": [7, 8, 22], "outer_arrai": 17, "output": [6, 11, 18, 19, 20], "output_nc": 6, "over": [3, 17], "overall_scor": 3, "overhaul": 26, "overlap": 26, "overridden": [7, 8, 9, 18], "overwrit": [3, 21], "own": 26, "pacinian": 26, "pacininan": 26, "packag": [0, 16, 21, 27, 28], "pad": 9, "padding_typ": 6, "page": 21, "paper": [6, 26], "parallel": 26, "param": 6, "paramet": [0, 3, 5, 11, 12, 14, 15, 16, 17, 18, 19, 20, 26, 28], "paramt": [0, 28], "parlanc": 26, "pars": 26, "part": [7, 8, 26], "parti": 26, "partit": 26, "partition_copy_stor": [17, 22], "pass": [0, 7, 8, 9, 12, 18, 28], "path": [0, 3, 5, 11, 12, 15, 16, 17, 20, 21, 26, 27, 28], "pathlik": 11, "pdf": 6, "per": [11, 12, 15, 21], "perform": [0, 7, 8, 9, 18, 19, 28], "physic": 26, "piec": 26, "pip": [0, 21, 28], "pipelin": 22, "pixelresolut": [0, 26, 28], "place": 5, "plan": 26, "platform": 26, "pm": 21, "poetri": 27, "point": 19, "pool": 17, "portal": [21, 26], "possibli": 9, "postprocess": 22, "potenti": 26, "pre": 12, "precomput": 26, "pred": 3, "pred_label": 3, "pred_label_path": 3, "pred_volume_path": 3, "predict": [3, 12, 22, 26], "predict_2d": 21, "predict_3d": 21, "prefix": [16, 26], "present": [0, 16, 20, 28], "pressur": 26, "preview": 27, "previou": 26, "primari": 26, "principl": 26, "print": [0, 28], "probabl": [15, 16], "problem": [0, 26, 28], "process": 19, "produc": [0, 26, 28], "product": 26, "program": 26, "progress": [12, 21], "projct": 26, "project": [0, 26, 28], "proport": 12, "provid": [0, 12, 15, 19, 21, 26, 28], "pth": [12, 21], "public": 26, "publish": 26, "pull": 27, "purpos": 26, "put": [0, 28], "py": 21, "pydant": [0, 28], "pyramid": 26, "pytest": 27, "python": [0, 12, 16, 21, 26, 28], "python3": 16, "pytorch": 12, "r": 21, "rais": [0, 19, 28], "ran": 26, "randint": 3, "random": [3, 12, 19, 26], "random_dil": 19, "random_se": 12, "random_source_pipelin": [19, 22], "randomdilatelabel": [19, 22], "randomli": [15, 19], "rang": [0, 3, 15, 19, 28], "rarer": 26, "rate": 12, "raw": [11, 16, 26], "raw_nam": 16, "read": 26, "read_group": [17, 22], "readabl": 26, "readm": [12, 21], "reason": 26, "recip": [7, 8, 9, 18], "recommend": 21, "recon": 16, "reconstruct": 17, "redirect": 26, "reflect": [6, 12], "region": [11, 17, 26], "regist": [7, 8, 9, 18], "registrationhead": [9, 22], "rel": [0, 17, 26, 28], "relabel": [19, 22], "relabel_connect": 19, "relu": 6, "remov": 26, "renam": 26, "render": 27, "replic": 6, "repo": 21, "repositori": [26, 27], "repres": [14, 19, 26], "reproduc": 12, "request": [16, 19, 27], "requir": [3, 21, 26], "resblock": 6, "research": [0, 26, 28], "reshap": [0, 28], "resnet": 22, "resnet2d": [6, 22], "resnet3d": [6, 22], "resnetblock2d": [6, 22], "resnetblock3d": [6, 22], "resolv": 17, "resolve_em_url": [17, 22], "resourc": 26, "respect": [16, 21, 26], "respresent": 26, "result": [0, 3, 17, 26, 28], "result_fil": 3, "retriev": 21, "return": [3, 6, 11, 12, 14, 15, 16, 17, 19], "rganel": 26, "roi": [11, 19], "root": 26, "rotat": [12, 15], "row": 14, "run": [7, 8, 9, 12, 18, 21, 27], "s0": [0, 26, 28], "s1": [0, 26, 28], "s2": 26, "s3": [0, 28], "saalfeldlab": 26, "safe": 26, "same": [11, 12, 21, 26], "sampl": [21, 26], "satisfi": 26, "save": [3, 11, 12, 20, 21, 26], "save_numpy_binary_to_zarr": [3, 21], "save_numpy_class_arrays_to_zarr": [3, 22], "save_numpy_class_labels_to_zarr": [3, 22], "save_numpy_labels_to_zarr": [3, 21], "save_path": 3, "save_result_fig": [20, 22], "scalar": 26, "scale": [0, 12, 15, 21, 26, 28], "scene": 26, "schema": [21, 27], "scheme": 26, "score": [3, 5], "score_inst": [3, 22], "score_label": [3, 22], "score_semant": [3, 22], "score_submiss": [3, 22], "score_volum": [3, 22], "screenshot": 26, "script": [12, 21], "scriptmodul": [7, 8, 9, 18], "search": [5, 16, 21], "search_path": [5, 16], "second": 26, "section": 26, "see": [0, 12, 21, 26, 28], "seed": 12, "segment": [3, 15, 26], "select": 26, "self": 14, "sem": [17, 26], "semant": [3, 26], "separ": [11, 26], "sequenc": [11, 15, 20, 26], "serv": 27, "servic": 26, "set": [12, 16, 26], "setup": 19, "sever": 26, "sh": 21, "shape": [0, 6, 11, 12, 15, 19, 21, 26, 28], "share": [7, 8, 9, 18, 26], "shell": 21, "ship": [0, 28], "short": 26, "should": [7, 8, 9, 12, 15, 18, 21, 26], "sign": 21, "silent": [7, 8, 9, 12, 18], "similar": 26, "simpl": 26, "simpli": [21, 26], "simulate_predictions_accuraci": [19, 22], "simulate_predictions_i": [19, 22], "sinc": [7, 8, 9, 18], "singl": [3, 11, 21, 26], "site": 16, "size": [12, 15, 19, 26], "skip": [6, 9], "skip_channel": 9, "slice": 17, "small": [0, 28], "smaller": 26, "smooth": 26, "so": [0, 26, 28], "softwar": 26, "solv": 26, "some": 26, "sourc": [3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 26], "source_stor": 17, "space": 26, "spatial": [6, 12, 15, 26], "spatial_transform": [12, 15], "spec": 19, "special": 26, "specif": [0, 19, 26, 28], "specifi": [3, 11, 12, 15, 20, 21, 26], "specimen": 26, "split": [11, 12, 15], "src": 21, "stai": 26, "standard": [6, 26], "start": 26, "start1": 11, "start2": 11, "state": [7, 8, 9, 18], "still": 26, "storag": [0, 17, 26, 28], "store": [0, 17, 26, 28], "str": [3, 5, 6, 11, 12, 14, 15, 16, 17, 19, 20], "strategi": 26, "strict": 26, "stride": 9, "string": [11, 12, 16, 17, 19], "structur": [0, 3, 26, 28], "style": 26, "subclass": [7, 8, 9, 18], "submiss": [3, 21], "submission_path": [3, 21], "submit": 27, "subsampl": 26, "subsequ": 26, "subset_to_slic": [17, 22], "succe": [0, 28], "success": 26, "suffix": 26, "summari": [0, 28], "support": [0, 17, 26, 28], "sure": 21, "swish": [9, 22], "system": 26, "t": 26, "take": [7, 8, 9, 18, 26], "taken": 26, "target": [12, 15, 18, 20, 26], "target_array_info": [12, 15], "tb": [0, 26, 28], "team": [0, 26, 28], "techniqu": 26, "technologi": 26, "tem": 26, "tensor": [18, 20], "tensorboard": [5, 12, 21], "terabyt": [0, 28], "termin": [12, 21], "test": [0, 3, 27, 28], "test_volum": 3, "test_volume_nam": [3, 21], "text": [0, 28], "than": [0, 26, 28], "thei": [0, 11, 21, 26, 28], "them": [7, 8, 9, 17, 18, 21, 26], "thi": [0, 7, 8, 9, 12, 15, 17, 18, 21, 26, 28], "third": 26, "thoroughli": 21, "those": [0, 28], "threadpoolexecutor": 17, "threshold": 26, "through": 21, "thu": 26, "thumbnail": 26, "time": [6, 26], "tissu": 26, "tmp": [0, 28], "to_zarr": [0, 28], "togeth": 26, "toi": [0, 28], "too": [0, 28], "tool": [0, 17, 26, 28], "top": [21, 26], "torch": [5, 6, 11, 15, 20], "track": 26, "tracker": [0, 28], "train": [15, 16, 19, 22], "train_2d": 21, "train_3d": 21, "transform": [9, 12, 15, 22, 26], "transit": 26, "translat": 26, "transpos": [12, 15], "transpose_for_scor": 9, "trasposit": 15, "trilinear": [7, 8], "true": [5, 7, 8, 9, 16, 19, 26], "true_label": 19, "truth": 3, "truth_label": 3, "truth_path": 3, "try": 26, "tupl": [11, 14, 15, 17, 19], "twice": 26, "two": [19, 26], "type": [3, 6, 11, 12, 14, 15, 16, 17, 19, 26], "typic": 26, "u": [0, 7, 8, 26, 28], "uint16": [0, 26, 28], "uint8": [16, 19, 26], "ultim": 26, "unchang": 26, "under": 26, "underscor": 26, "understand": 26, "unet_2d": [7, 22], "unet_3d": [8, 22], "unet_model_2d": [21, 22], "unet_model_3d": 22, "union": 3, "uniqu": [21, 26], "unit": [0, 19, 26, 28], "until": 26, "unzip": 3, "unzip_fil": [3, 22], "up": [7, 8, 22], "upsampl": 9, "uri": 17, "url": [0, 14, 17, 26, 28], "us": [0, 11, 12, 15, 16, 17, 19, 21, 26, 27, 28], "usag": [3, 16], "use_batchnorm": 9, "use_bia": 6, "use_dropout": 6, "user": 26, "util": [21, 22], "v": 9, "val": [12, 15], "valid": [5, 6, 12, 15, 16, 21, 26], "validation_prob": [12, 16], "valu": [11, 15, 19, 26], "valueerror": 19, "varieti": 26, "veri": 26, "version": 26, "vi": 9, "via": 26, "view": [21, 26], "viewabl": 21, "visual": [22, 26], "visul": 26, "vit": 9, "vitnet": [12, 22], "vitvnet": [9, 22], "volum": [3, 19, 21, 26], "voxel": [3, 19, 21], "voxel_s": 19, "wa": 26, "wai": [21, 26], "want": 26, "wasn": 26, "we": [0, 6, 21, 26, 28], "web": 26, "weight": [5, 9, 21], "welcom": 21, "well": [12, 21, 26], "were": 26, "what": [0, 28], "when": [0, 15, 26, 28], "where": [0, 26, 28], "whereev": 26, "whether": [0, 5, 19, 28], "which": [0, 12, 16, 17, 21, 26, 28], "while": [7, 8, 9, 18, 26], "wide": [0, 26, 28], "window": 26, "within": [7, 8, 9, 15, 18, 26], "word": 26, "work": [0, 26, 28], "worker": 15, "workflow": 26, "world": 19, "would": [0, 26, 28], "write": [0, 16, 26, 28], "written": 16, "x": [0, 6, 7, 8, 9, 11, 12, 15, 28], "x1": [7, 8], "x2": [7, 8], "x64": 16, "y": [0, 11, 12, 15, 21, 28], "yarl": 14, "year": 26, "yet": 26, "you": [0, 21, 26, 28], "your": 27, "z": [11, 15], "zarr": [0, 3, 16, 17, 21, 26, 28], "zarr_vers": [0, 28], "zero": [6, 19], "zerossourc": [19, 22], "zip": [3, 21], "zip_path": 3, "zoom": 26}, "titles": ["CellMap Schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli package", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.postprocess", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.pipeline", "cellmap_segmentation_challenge.utils.visualize", "CellMap Segmentation Challenge", "src", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas"], "titleterms": {"ad": 27, "align": 26, "an": [0, 28], "api": 21, "arrai": 26, "cellmap": [0, 21, 28], "cellmap_segmentation_challeng": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "challeng": 21, "check": [0, 28], "chunk": 26, "cli": [0, 2, 28], "clone": 21, "contain": [0, 28], "content": [2, 21], "contribut": [0, 28], "coordin": 26, "cosem": 26, "creat": [0, 28], "crop": 14, "data": 21, "dataload": 15, "dataset": 26, "datasplit": [2, 16], "download": 21, "downsampl": 26, "environ": 21, "evalu": [2, 3], "exampl": [0, 28], "fetch_data": [2, 17], "format": 26, "get": 21, "hierarchi": [0, 28], "i": 26, "imag": 26, "inspect": [0, 28], "instal": [0, 28], "layout": 26, "link": 21, "loss": 18, "metadata": 26, "model": [4, 5, 6, 7, 8, 9, 21], "model_load": 5, "modul": 2, "multipl": 26, "multiresolut": 26, "multiscal": 26, "n5": [0, 28], "name": 26, "neuroglanc": [0, 28], "outlin": 26, "packag": 2, "pipelin": 19, "postprocess": 10, "predict": [2, 11, 21], "project": 27, "repositori": 21, "resnet": 6, "s3": 26, "schema": [0, 28], "segment": 21, "set": 21, "src": 22, "start": 21, "structur": 21, "submit": 21, "submodul": 2, "test": 21, "thi": 27, "train": [2, 12, 21], "unet_model_2d": 7, "unet_model_3d": 8, "up": 21, "util": [13, 14, 15, 16, 17, 18, 19, 20], "valid": [0, 28], "visual": 20, "vitnet": 9, "what": 26, "your": 21}})