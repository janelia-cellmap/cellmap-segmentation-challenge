Search.setIndex({"alltitles": {"CellMap Segmentation Challenge": [[15, null]], "Clone the repository": [[15, "clone-the-repository"]], "Contents": [[15, "contents"]], "Download the data": [[15, "download-the-data"]], "Getting started": [[15, "getting-started"]], "Links": [[15, "links"]], "Module contents": [[13, "module-contents"]], "Predict on test data": [[15, "predict-on-test-data"]], "Repository structure": [[15, "repository-structure"]], "Set up your environment": [[15, "set-up-your-environment"]], "Submit your predictions": [[15, "submit-your-predictions"]], "Submodules": [[13, "submodules"]], "Train a model": [[15, "train-a-model"]], "cellmap_segmentation_challenge": [[0, null]], "cellmap_segmentation_challenge.dataloader": [[1, null]], "cellmap_segmentation_challenge.datasplit": [[2, null]], "cellmap_segmentation_challenge.evaluate": [[3, null]], "cellmap_segmentation_challenge.loss": [[4, null]], "cellmap_segmentation_challenge.models": [[5, null]], "cellmap_segmentation_challenge.models.model_load": [[6, null]], "cellmap_segmentation_challenge.models.resnet": [[7, null]], "cellmap_segmentation_challenge.models.unet_model_2D": [[8, null]], "cellmap_segmentation_challenge.models.unet_model_3D": [[9, null]], "cellmap_segmentation_challenge.models.vitnet": [[10, null]], "cellmap_segmentation_challenge.predict": [[11, null]], "cellmap_segmentation_challenge.train": [[12, null]], "cellmap_segmentation_challenge.utils package": [[13, null]], "cellmap_segmentation_challenge.utils.pipeline module": [[13, "cellmap-segmentation-challenge-utils-pipeline-module"]], "cellmap_segmentation_challenge.visualize": [[14, null]], "src": [[16, null]]}, "docnames": ["cellmap_segmentation_challenge", "cellmap_segmentation_challenge.dataloader", "cellmap_segmentation_challenge.datasplit", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.loss", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.visualize", "index", "modules"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.dataloader.rst", "cellmap_segmentation_challenge.datasplit.rst", "cellmap_segmentation_challenge.evaluate.rst", "cellmap_segmentation_challenge.loss.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.models.model_load.rst", "cellmap_segmentation_challenge.models.resnet.rst", "cellmap_segmentation_challenge.models.unet_model_2D.rst", "cellmap_segmentation_challenge.models.unet_model_3D.rst", "cellmap_segmentation_challenge.models.vitnet.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "cellmap_segmentation_challenge.visualize.rst", "index.rst", "modules.rst"], "indexentries": {"attention (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[0, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.dataloader": [[1, "module-cellmap_segmentation_challenge.dataloader", false]], "cellmap_segmentation_challenge.datasplit": [[2, "module-cellmap_segmentation_challenge.datasplit", false]], "cellmap_segmentation_challenge.evaluate": [[3, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.loss": [[4, "module-cellmap_segmentation_challenge.loss", false]], "cellmap_segmentation_challenge.models": [[5, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[6, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[7, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[8, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[9, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[10, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.visualize": [[14, "module-cellmap_segmentation_challenge.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.loss)": [[4, "cellmap_segmentation_challenge.loss.CellMapLossWrapper", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "forward() (cellmap_segmentation_challenge.loss.cellmaplosswrapper method)": [[4, "cellmap_segmentation_challenge.loss.CellMapLossWrapper.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[7, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[7, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[10, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[10, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[10, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[10, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[10, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_class_incl_ids() (in module cellmap_segmentation_challenge.datasplit)": [[2, "cellmap_segmentation_challenge.datasplit.get_class_incl_ids", false]], "get_class_relations() (in module cellmap_segmentation_challenge.datasplit)": [[2, "cellmap_segmentation_challenge.datasplit.get_class_relations", false]], "get_csv_string() (in module cellmap_segmentation_challenge.datasplit)": [[2, "cellmap_segmentation_challenge.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.dataloader)": [[1, "cellmap_segmentation_challenge.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.datasplit)": [[2, "cellmap_segmentation_challenge.datasplit.get_dataset_counts", false]], "get_loss_plot() (in module cellmap_segmentation_challenge.visualize)": [[14, "cellmap_segmentation_challenge.visualize.get_loss_plot", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[6, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[6, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.datasplit)": [[2, "cellmap_segmentation_challenge.datasplit.make_datasplit_csv", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[0, "module-cellmap_segmentation_challenge", false], [1, "module-cellmap_segmentation_challenge.dataloader", false], [2, "module-cellmap_segmentation_challenge.datasplit", false], [3, "module-cellmap_segmentation_challenge.evaluate", false], [4, "module-cellmap_segmentation_challenge.loss", false], [5, "module-cellmap_segmentation_challenge.models", false], [6, "module-cellmap_segmentation_challenge.models.model_load", false], [7, "module-cellmap_segmentation_challenge.models.resnet", false], [8, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [9, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [10, "module-cellmap_segmentation_challenge.models.vitnet", false], [14, "module-cellmap_segmentation_challenge.visualize", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "predict() (in module cellmap_segmentation_challenge)": [[11, "cellmap_segmentation_challenge.predict", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[7, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[7, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[7, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[7, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "save_result_figs() (in module cellmap_segmentation_challenge.visualize)": [[14, "cellmap_segmentation_challenge.visualize.save_result_figs", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "train() (in module cellmap_segmentation_challenge)": [[12, "cellmap_segmentation_challenge.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[10, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[8, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[9, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[10, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]]}, "objects": {"": [[0, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[1, 0, 0, "-", "dataloader"], [2, 0, 0, "-", "datasplit"], [3, 0, 0, "-", "evaluate"], [4, 0, 0, "-", "loss"], [5, 0, 0, "-", "models"], [11, 1, 1, "", "predict"], [12, 1, 1, "", "train"], [14, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.dataloader": [[1, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.datasplit": [[2, 1, 1, "", "get_class_incl_ids"], [2, 1, 1, "", "get_class_relations"], [2, 1, 1, "", "get_csv_string"], [2, 1, 1, "", "get_dataset_counts"], [2, 1, 1, "", "make_datasplit_csv"]], "cellmap_segmentation_challenge.evaluate": [[3, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [3, 1, 1, "", "save_numpy_class_labels_to_zarr"], [3, 1, 1, "", "score_instance"], [3, 1, 1, "", "score_label"], [3, 1, 1, "", "score_semantic"], [3, 1, 1, "", "score_submission"], [3, 1, 1, "", "score_volume"], [3, 1, 1, "", "unzip_file"]], "cellmap_segmentation_challenge.loss": [[4, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.loss.CellMapLossWrapper": [[4, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models": [[6, 0, 0, "-", "model_load"], [7, 0, 0, "-", "resnet"], [8, 0, 0, "-", "unet_model_2D"], [9, 0, 0, "-", "unet_model_3D"], [10, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[6, 1, 1, "", "load_best_val"], [6, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[7, 2, 1, "", "ResNet"], [7, 2, 1, "", "Resnet2D"], [7, 2, 1, "", "Resnet3D"], [7, 2, 1, "", "ResnetBlock2D"], [7, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[7, 3, 1, "", "build_conv_block"], [7, 3, 1, "", "crop"], [7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[7, 3, 1, "", "build_conv_block"], [7, 3, 1, "", "crop"], [7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[8, 2, 1, "", "DoubleConv"], [8, 2, 1, "", "Down"], [8, 2, 1, "", "OutConv"], [8, 2, 1, "", "UNet_2D"], [8, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[9, 2, 1, "", "DoubleConv"], [9, 2, 1, "", "Down"], [9, 2, 1, "", "OutConv"], [9, 2, 1, "", "UNet_3D"], [9, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[10, 2, 1, "", "Attention"], [10, 2, 1, "", "Block"], [10, 2, 1, "", "CNNEncoder"], [10, 2, 1, "", "Conv3dReLU"], [10, 2, 1, "", "DecoderBlock"], [10, 2, 1, "", "DecoderCup"], [10, 2, 1, "", "DoubleConv"], [10, 2, 1, "", "Down"], [10, 2, 1, "", "Embeddings"], [10, 2, 1, "", "Encoder"], [10, 2, 1, "", "Mlp"], [10, 2, 1, "", "RegistrationHead"], [10, 2, 1, "", "Transformer"], [10, 2, 1, "", "ViTVNet"], [10, 1, 1, "", "get_3DReg_config"], [10, 1, 1, "", "np2th"], [10, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[10, 3, 1, "", "forward"], [10, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[10, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.visualize": [[14, 1, 1, "", "get_loss_plot"], [14, 1, 1, "", "save_result_figs"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": 15, "0": [1, 2, 3, 10, 11, 12, 15], "0001": 12, "03385": 7, "1": [1, 2, 7, 10, 12, 15], "1000": [1, 12], "11": 15, "128": [3, 10, 12], "1512": 7, "180": [1, 12], "2": [3, 7, 10, 11, 15], "255": 11, "2d": [1, 15], "2d_resnet": 12, "2d_unet": 12, "3": [2, 10, 12, 15], "3d": [1, 3, 15], "3d_resnet": 12, "3d_unet": 12, "4": 3, "42": 12, "5": [1, 12], "6": 7, "64": 7, "8": 12, "8x8x8": 15, "8x8x8nm": 15, "A": [3, 7, 15], "For": [1, 11, 15], "If": [11, 12], "It": 15, "The": [3, 11, 12, 15], "To": 15, "_": [3, 12], "_loss": 4, "_weightedloss": 4, "account": 15, "activ": [7, 15], "affin": 11, "after": 12, "afterward": [4, 8, 9, 10], "against": 3, "all": [4, 8, 9, 10, 15], "along": 15, "alreadi": [12, 15], "also": 15, "although": [4, 8, 9, 10], "alwai": [1, 15], "an": 12, "angl": 1, "ani": [1, 12], "annot": 15, "anyth": 12, "api": 15, "appli": [1, 7, 12], "ar": [12, 15], "architectur": 12, "argument": [12, 15], "arrai": [1, 3, 15], "array_info": 1, "arxiv": 7, "assum": 15, "attent": [10, 16], "avail": 15, "ax": [1, 12], "axi": 1, "b": 15, "background": [3, 15], "batch": [1, 12], "batch_siz": [1, 12], "befor": 7, "belong": 11, "below": 15, "best": 12, "bilinear": 8, "binari": [3, 15], "block": [7, 10, 11, 16], "bool": [2, 7], "boolean": 15, "both": [4, 8, 9, 10, 15], "build_conv_block": 7, "built": 15, "call": [4, 8, 9, 10, 12], "can": [11, 12, 15], "care": [4, 8, 9, 10], "cd": 15, "cellmap_segmentation_challeng": [15, 16], "cellmapdataload": 1, "cellmaplosswrapp": [4, 16], "center": 7, "chanel": 11, "channel": [7, 11], "checkpoint": [12, 15], "chosen": 1, "clariti": 15, "class": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15], "cnnencod": [10, 16], "com": 15, "combin": 11, "command": 15, "comput": [4, 8, 9, 10], "config": [10, 12], "config_path": 12, "configur": 12, "connect": 7, "construct": [7, 12], "constructor": 12, "contain": [1, 12, 15], "conv": [7, 10], "conv3drelu": [10, 16], "conveni": 15, "convert": [10, 15], "convolut": 7, "correct": 15, "correspond": [3, 15], "could": 1, "creat": 15, "crop": [2, 7], "csv": [2, 12], "csv_path": 2, "cuda": 1, "curl": 15, "data": [1, 2, 3, 7, 11, 12], "dataload": [12, 16], "datapath_prefix": 2, "dataset": [2, 11, 12], "datasplit": [1, 12, 16], "datasplit_path": [1, 12], "de": 12, "decoderblock": [10, 16], "decodercup": [10, 16], "default": [7, 11, 12, 15], "defin": [1, 4, 8, 9, 10, 12], "depend": 15, "design": 15, "devic": 1, "dict": [3, 11], "dictionari": [1, 3, 11, 12], "dim": 7, "dimens": 7, "directori": [3, 15], "do": 15, "document": [12, 15], "doe": 12, "doubleconv": [8, 9, 10, 16], "down": [8, 9, 10, 16], "downsampl": 7, "dry_run": 2, "e": 15, "each": [1, 3, 11, 12, 15], "easi": 15, "edit": 15, "either": [1, 15], "em": 2, "embed": [10, 16], "encod": [10, 16], "end": [3, 15], "end1": 11, "end2": 11, "entir": 11, "epoch": [1, 12], "er": 12, "evalu": [15, 16], "everi": [4, 8, 9, 10], "exampl": [1, 3, 11, 15], "except": 15, "exist": [12, 15], "extens": 15, "fals": [2, 3, 7, 8, 9, 10], "fastest": 15, "featur": 10, "fibsem": 2, "figures_save_path": 14, "file": [1, 3, 12, 15], "filenam": [3, 15], "first": 15, "flag": 15, "flexibl": 15, "float": [1, 2, 3, 11], "folder": 15, "follow": 15, "force_all_class": 2, "form": 11, "format": [11, 15], "former": [4, 8, 9, 10], "forward": [4, 7, 8, 9, 10, 16], "from": [1, 12, 15], "function": [1, 2, 3, 4, 6, 7, 8, 9, 10, 14, 15], "gener": [3, 12, 15], "get": 1, "get_3dreg_config": [10, 16], "get_class_incl_id": [2, 16], "get_class_rel": [2, 16], "get_csv_str": [2, 16], "get_dataload": [1, 16], "get_dataset_count": [2, 16], "get_loss_plot": [14, 16], "git": 15, "github": 15, "given": [1, 7], "ground": 3, "ground_truth": 3, "groundtruth": 2, "hausdorff_distance_max": 3, "have": 15, "here": 15, "hidden_st": 10, "hook": [4, 8, 9, 10], "how": 15, "http": 7, "hwio": 10, "hyperparamet": 12, "i": [1, 7, 11, 12, 15], "id": 15, "ignor": [4, 8, 9, 10, 12], "imag": 7, "img_siz": 10, "implement": 7, "in_channel": [8, 9, 10], "in_dataset": 11, "incl_ids_str": 2, "includ": [11, 12], "independ": 12, "index": 15, "indic": 11, "inf": 3, "info": 1, "inform": [12, 15], "initi": [4, 7, 8, 9, 10, 12], "input": [1, 7, 11, 12, 14], "input_array_info": [1, 12], "input_block_shap": 11, "input_id": 10, "input_nc": 7, "instal": 15, "instanc": [3, 4, 8, 9, 10, 15], "instance_class": 3, "instancenorm": 7, "instancenorm2d": 7, "instancenorm3d": 7, "instead": [4, 8, 9, 10], "instruct": 15, "int": [1, 7, 11], "interact": 15, "interest": 11, "intern": [4, 8, 9, 10], "invovl": 1, "iter": [1, 12], "iterations_per_epoch": [1, 12, 14], "janelia": 15, "kernel_s": 10, "keyword": 12, "kwarg": [4, 7], "l": 15, "label": [2, 3, 11, 15], "label1": 3, "label2": 3, "label3": 3, "label_nam": [3, 15], "larg": 11, "latest": 12, "latter": [4, 8, 9, 10], "layer": 7, "learn": 12, "learning_r": 12, "len": 3, "like": 1, "line": 15, "linear": 7, "list": [1, 2, 3, 11, 12, 15], "load": [1, 12], "load_best_v": [6, 16], "load_latest": [6, 16], "load_model": 12, "log": [12, 15], "logdir": [12, 15], "logs_save_path": [6, 12], "loss": [14, 15, 16], "loss_fn": 4, "low_is_best": 6, "mai": 12, "make": 15, "make_datasplit_csv": [2, 16], "mamba": 15, "map": 1, "match": [7, 11, 15], "max_raw": 11, "maximum": 11, "md": [12, 15], "metric": 15, "micro": 15, "micromamba": 15, "mid_channel": [8, 9, 10], "min_raw": 11, "minimum": 11, "mirror": [1, 12], "mito": [2, 3], "mlp": [10, 16], "mode": 15, "model": [11, 12, 16], "model_kwarg": 12, "model_load": [15, 16], "model_nam": 12, "model_save_path": [6, 12], "model_to_load": 12, "modul": [0, 4, 5, 7, 8, 9, 10, 11, 12, 15], "monitor": [12, 15], "more": [12, 15], "multipl": 11, "must": 1, "n": 15, "n_block": 7, "n_channel": [8, 9, 10], "n_class": [8, 9], "n_downsampl": 7, "name": [3, 11, 12, 15], "named_class": 2, "ndarrai": 3, "ndim": 7, "need": [4, 8, 9, 10, 12, 15], "net": [8, 9, 10], "new": 15, "ngf": 7, "nm": 15, "nn": [4, 7, 8, 9, 10, 11], "non": 7, "none": [1, 2, 3, 7, 8, 9, 10, 11, 12], "norm_lay": 7, "normal": 7, "note": 15, "novo": 12, "np": 3, "np2th": [10, 16], "nuc": [2, 3, 11, 12], "number": [1, 7, 12, 15], "numpi": [3, 15], "o": 11, "object": 15, "oihw": 10, "onc": 15, "one": [4, 8, 9, 10, 15], "onlin": 15, "optim": 12, "option": [1, 11, 12, 15], "org": 7, "origin": 7, "other": 12, "otherwis": 15, "out_channel": [8, 9, 10], "out_dataset": 11, "outconv": [8, 9, 16], "output": [4, 7, 11, 14], "output_nc": 7, "overridden": [4, 8, 9, 10], "overwrit": [3, 15], "packag": 15, "pad": 10, "padding_typ": 7, "page": 15, "paper": 7, "param": 7, "paramet": [1, 2, 3, 4, 11, 12, 14], "part": [8, 9], "pass": [4, 8, 9, 10, 12], "path": [1, 2, 3, 11, 12, 15], "pathlik": 11, "pdf": 7, "per": [1, 11, 12, 15], "perform": [4, 8, 9, 10], "pip": 15, "pm": 15, "portal": 15, "possibli": 10, "pre": 12, "pred": 3, "pred_label": 3, "pred_label_path": 3, "pred_volume_path": 3, "predict": [3, 12, 16], "predict_2d": 15, "predict_3d": 15, "probabl": 1, "progress": [12, 15], "proport": 12, "provid": [1, 12, 15], "pth": [12, 15], "py": 15, "python": [12, 15], "pytorch": 12, "r": 15, "randint": 3, "random": [3, 12], "random_se": 12, "randomli": 1, "rang": [1, 3], "rate": 12, "raw": 11, "raw_nam": 2, "readm": [12, 15], "recip": [4, 8, 9, 10], "recommend": 15, "recon": 2, "reflect": [7, 12], "region": 11, "regist": [4, 8, 9, 10], "registrationhead": [10, 16], "relu": 7, "replic": 7, "repo": 15, "reproduc": 12, "requir": [3, 15], "resblock": 7, "resnet": 16, "resnet2d": [7, 16], "resnet3d": [7, 16], "resnetblock2d": [7, 16], "resnetblock3d": [7, 16], "respect": 15, "return": [1, 3, 7, 11, 12], "roi": 11, "rotat": [1, 12], "run": [4, 8, 9, 10, 12, 15], "same": [11, 12, 15], "sampl": 15, "save": [3, 11, 12, 15], "save_numpy_binary_to_zarr": [3, 15], "save_numpy_class_arrays_to_zarr": [3, 16], "save_numpy_class_labels_to_zarr": [3, 16], "save_numpy_labels_to_zarr": [3, 15], "save_path": 3, "save_result_fig": [14, 16], "scale": [1, 12, 15], "score": 3, "score_inst": [3, 16], "score_label": [3, 16], "score_semant": [3, 16], "score_submiss": [3, 16], "score_volum": [3, 16], "script": [12, 15], "scriptmodul": [4, 8, 9, 10], "search": 15, "search_path": [2, 6], "see": [12, 15], "seed": 12, "segment": 1, "semant": 3, "separ": 11, "sequenc": [1, 11, 14], "set": 12, "sh": 15, "shape": [1, 7, 11, 12, 15], "share": [4, 8, 9, 10], "shell": 15, "should": [1, 4, 8, 9, 10, 12, 15], "sign": 15, "silent": [4, 8, 9, 10, 12], "simpli": 15, "sinc": [4, 8, 9, 10], "singl": [3, 11, 15], "size": [1, 12], "skip": [7, 10], "skip_channel": 10, "sourc": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "spatial": [1, 7, 12], "spatial_transform": [1, 12], "specifi": [1, 3, 11, 12, 15], "split": [1, 11, 12], "src": 15, "stage": 2, "standard": 7, "start1": 11, "start2": 11, "state": [4, 8, 9, 10], "str": [1, 2, 3, 7, 11, 12, 14], "stride": 10, "string": [11, 12], "structur": 3, "subclass": [4, 8, 9, 10], "submiss": [3, 15], "submission_path": [3, 15], "sure": 15, "swish": [10, 16], "take": [4, 8, 9, 10], "target": [1, 4, 12, 14], "target_array_info": [1, 12], "tensor": [4, 14], "tensorboard": [12, 15], "termin": [12, 15], "test": 3, "test_volum": 3, "test_volume_nam": [3, 15], "thei": [11, 15], "them": [4, 8, 9, 10, 15], "thi": [1, 4, 8, 9, 10, 12, 15], "thoroughli": 15, "through": 15, "time": 7, "top": 15, "torch": [1, 7, 11], "train": [1, 16], "train_2d": 15, "train_3d": 15, "transform": [1, 10, 12, 16], "transpos": [1, 12], "transpose_for_scor": 10, "trasposit": 1, "trilinear": [8, 9], "true": [6, 8, 9, 10], "truth": 3, "truth_label": 3, "truth_path": 3, "tupl": [1, 11], "type": [1, 3, 7, 11, 12], "u": [8, 9], "uint8": 2, "unet_2d": [8, 16], "unet_3d": [9, 16], "unet_model_2d": [15, 16], "unet_model_3d": 16, "uniqu": 15, "unzip": 3, "unzip_fil": [3, 16], "up": [8, 9, 16], "upsampl": 10, "us": [1, 11, 12, 15], "usag": [2, 3], "use_batchnorm": 10, "use_bia": 7, "use_dropout": 7, "util": [1, 15], "v": 10, "val": [1, 12], "valid": [1, 7, 12, 15], "validation_prob": [2, 12], "validation_scor": 14, "valu": [1, 11], "vi": 10, "view": 15, "viewabl": 15, "visual": 16, "vit": 10, "vitnet": [12, 16], "vitvnet": [10, 16], "volum": [3, 15], "voxel": 15, "wai": 15, "we": [7, 15], "weight": [10, 15], "welcom": 15, "well": [12, 15], "when": 1, "which": [12, 15], "while": [4, 8, 9, 10], "within": [1, 4, 8, 9, 10], "worker": 1, "x": [1, 7, 8, 9, 10, 11, 12], "x1": [8, 9], "x2": [8, 9], "y": [1, 11, 12, 15], "you": 15, "z": [1, 11], "zarr": [2, 3, 15], "zero": 7, "zip": [3, 15], "zip_path": 3}, "titles": ["cellmap_segmentation_challenge", "cellmap_segmentation_challenge.dataloader", "cellmap_segmentation_challenge.datasplit", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.loss", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils package", "cellmap_segmentation_challenge.visualize", "CellMap Segmentation Challenge", "src"], "titleterms": {"cellmap": 15, "cellmap_segmentation_challeng": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "challeng": 15, "clone": 15, "content": [13, 15], "data": 15, "dataload": 1, "datasplit": 2, "download": 15, "environ": 15, "evalu": 3, "get": 15, "link": 15, "loss": 4, "model": [5, 6, 7, 8, 9, 10, 15], "model_load": 6, "modul": 13, "packag": 13, "pipelin": 13, "predict": [11, 15], "repositori": 15, "resnet": 7, "segment": 15, "set": 15, "src": 16, "start": 15, "structur": 15, "submit": 15, "submodul": 13, "test": 15, "train": [12, 15], "unet_model_2d": 8, "unet_model_3d": 9, "up": 15, "util": 13, "visual": 14, "vitnet": 10, "your": 15}})