Search.setIndex({"alltitles": {"API": [[30, "api"]], "Adding to this project": [[36, null]], "COSEM": [[35, "cosem"]], "CellMap Schemas": [[0, null], [37, null]], "CellMap Segmentation Challenge": [[30, null]], "Chunked array format": [[35, "chunked-array-format"]], "Clone the repository": [[30, "clone-the-repository"]], "Contents:": [[30, null]], "Contributing": [[0, "contributing"], [37, "contributing"]], "Dataset names": [[35, "dataset-names"]], "Datasets on S3": [[35, "datasets-on-s3"]], "Download the data": [[30, "download-the-data"]], "Downsampling and coordinates": [[35, "downsampling-and-coordinates"]], "Example: creating an N5 hierarchy for Neuroglancer": [[0, "example-creating-an-n5-hierarchy-for-neuroglancer"], [37, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[0, "example-validating-a-container-with-the-cli"], [37, "example-validating-a-container-with-the-cli"]], "Getting started": [[30, "getting-started"]], "Image layout": [[35, "image-layout"]], "Installation": [[0, "installation"], [37, "installation"]], "Links": [[30, "links"]], "Multiple image alignments": [[35, "multiple-image-alignments"]], "Multiresolution image layout": [[35, "multiresolution-image-layout"]], "Multiscale image metadata": [[35, "multiscale-image-metadata"]], "Outline": [[35, null]], "Post-process model predictions": [[30, "post-process-model-predictions"]], "Predict on test data": [[30, "predict-on-test-data"]], "Repository structure": [[30, "repository-structure"]], "S3 layout": [[35, "s3-layout"]], "Set up your environment": [[30, "set-up-your-environment"]], "Submit your final predictions": [[30, "submit-your-final-predictions"]], "Train a model": [[30, "train-a-model"]], "Visualize data and predictions": [[30, "visualize-data-and-predictions"]], "What is a dataset": [[35, "what-is-a-dataset"]], "cellmap-schemas check": [[0, "cellmap-schemas-check"], [37, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[0, "cellmap-schemas-inspect"], [37, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge": [[1, null]], "cellmap_segmentation_challenge.cli": [[2, null]], "cellmap_segmentation_challenge.cli.datasplit": [[3, null]], "cellmap_segmentation_challenge.cli.evaluate": [[4, null]], "cellmap_segmentation_challenge.cli.fetch_data": [[5, null]], "cellmap_segmentation_challenge.cli.predict": [[6, null]], "cellmap_segmentation_challenge.cli.process": [[7, null]], "cellmap_segmentation_challenge.cli.speedtest": [[8, null]], "cellmap_segmentation_challenge.cli.train": [[9, null]], "cellmap_segmentation_challenge.cli.visualize": [[10, null]], "cellmap_segmentation_challenge.config": [[11, null]], "cellmap_segmentation_challenge.evaluate": [[12, null]], "cellmap_segmentation_challenge.models": [[13, null]], "cellmap_segmentation_challenge.models.model_load": [[14, null]], "cellmap_segmentation_challenge.models.resnet": [[15, null]], "cellmap_segmentation_challenge.models.unet_model_2D": [[16, null]], "cellmap_segmentation_challenge.models.unet_model_3D": [[17, null]], "cellmap_segmentation_challenge.models.vitnet": [[18, null]], "cellmap_segmentation_challenge.predict": [[19, null]], "cellmap_segmentation_challenge.process": [[20, null]], "cellmap_segmentation_challenge.train": [[21, null]], "cellmap_segmentation_challenge.utils": [[22, null]], "cellmap_segmentation_challenge.utils.crops": [[23, null]], "cellmap_segmentation_challenge.utils.dataloader": [[24, null]], "cellmap_segmentation_challenge.utils.datasplit": [[25, null]], "cellmap_segmentation_challenge.utils.fetch_data": [[26, null]], "cellmap_segmentation_challenge.utils.loss": [[27, null]], "cellmap_segmentation_challenge.utils.security": [[28, null]], "cellmap_segmentation_challenge.visualize": [[29, null]], "src": [[31, null]]}, "docnames": ["cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.cli.datasplit", "cellmap_segmentation_challenge.cli.evaluate", "cellmap_segmentation_challenge.cli.fetch_data", "cellmap_segmentation_challenge.cli.predict", "cellmap_segmentation_challenge.cli.process", "cellmap_segmentation_challenge.cli.speedtest", "cellmap_segmentation_challenge.cli.train", "cellmap_segmentation_challenge.cli.visualize", "cellmap_segmentation_challenge.config", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.process", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.security", "cellmap_segmentation_challenge.visualize", "index", "modules", "scheme_docs/api/annotation", "scheme_docs/api/multiscale/cosem", "scheme_docs/api/multiscale/neuroglancer_n5", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.cli.datasplit.rst", "cellmap_segmentation_challenge.cli.evaluate.rst", "cellmap_segmentation_challenge.cli.fetch_data.rst", "cellmap_segmentation_challenge.cli.predict.rst", "cellmap_segmentation_challenge.cli.process.rst", "cellmap_segmentation_challenge.cli.speedtest.rst", "cellmap_segmentation_challenge.cli.train.rst", "cellmap_segmentation_challenge.cli.visualize.rst", "cellmap_segmentation_challenge.config.rst", "cellmap_segmentation_challenge.evaluate.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.models.model_load.rst", "cellmap_segmentation_challenge.models.resnet.rst", "cellmap_segmentation_challenge.models.unet_model_2D.rst", "cellmap_segmentation_challenge.models.unet_model_3D.rst", "cellmap_segmentation_challenge.models.vitnet.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.process.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "cellmap_segmentation_challenge.utils.crops.rst", "cellmap_segmentation_challenge.utils.dataloader.rst", "cellmap_segmentation_challenge.utils.datasplit.rst", "cellmap_segmentation_challenge.utils.fetch_data.rst", "cellmap_segmentation_challenge.utils.loss.rst", "cellmap_segmentation_challenge.utils.security.rst", "cellmap_segmentation_challenge.visualize.rst", "index.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/api/multiscale/cosem.md", "scheme_docs/api/multiscale/neuroglancer_n5.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md"], "indexentries": {"alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "analyze_script() (in module cellmap_segmentation_challenge.utils.security)": [[28, "cellmap_segmentation_challenge.utils.security.analyze_script", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[1, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.cli": [[2, "module-cellmap_segmentation_challenge.cli", false]], "cellmap_segmentation_challenge.cli.datasplit": [[3, "module-cellmap_segmentation_challenge.cli.datasplit", false]], "cellmap_segmentation_challenge.cli.evaluate": [[4, "module-cellmap_segmentation_challenge.cli.evaluate", false]], "cellmap_segmentation_challenge.cli.fetch_data": [[5, "module-cellmap_segmentation_challenge.cli.fetch_data", false]], "cellmap_segmentation_challenge.cli.predict": [[6, "module-cellmap_segmentation_challenge.cli.predict", false]], "cellmap_segmentation_challenge.cli.process": [[7, "module-cellmap_segmentation_challenge.cli.process", false]], "cellmap_segmentation_challenge.cli.speedtest": [[8, "module-cellmap_segmentation_challenge.cli.speedtest", false]], "cellmap_segmentation_challenge.cli.train": [[9, "module-cellmap_segmentation_challenge.cli.train", false]], "cellmap_segmentation_challenge.cli.visualize": [[10, "module-cellmap_segmentation_challenge.cli.visualize", false]], "cellmap_segmentation_challenge.config": [[11, "module-cellmap_segmentation_challenge.config", false]], "cellmap_segmentation_challenge.evaluate": [[12, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[13, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[14, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[15, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[16, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[17, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[18, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.utils": [[22, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[23, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[24, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[25, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[26, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[27, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.security": [[28, "module-cellmap_segmentation_challenge.utils.security", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[27, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "class_label (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow.class_label", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "combine_scores() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.combine_scores", false]], "config (class in cellmap_segmentation_challenge.utils.security)": [[28, "cellmap_segmentation_challenge.utils.security.Config", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[23, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "dataset (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[23, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "fetch_test_crop_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[23, "cellmap_segmentation_challenge.utils.crops.fetch_test_crop_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[15, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[15, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[18, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[18, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[18, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[18, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[18, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[27, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[23, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.testcroprow class method)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_array_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.get_array_objects", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[24, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_dataset_name() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_name", false]], "get_fibsem_path() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.get_fibsem_path", false]], "get_formatted_fields() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.get_formatted_fields", false]], "get_group_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.get_group_objects", false]], "get_raw_path() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.get_raw_path", false]], "get_s3_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.get_s3_csv_string", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_test_crops() (in module cellmap_segmentation_challenge.utils.crops)": [[23, "cellmap_segmentation_challenge.utils.crops.get_test_crops", false]], "get_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.get_url", false]], "gt_source (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_source", false]], "hausdorff_distance() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.hausdorff_distance", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "id (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow.id", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[14, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[14, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "load_safe_config() (in module cellmap_segmentation_challenge.utils.security)": [[28, "cellmap_segmentation_challenge.utils.security.load_safe_config", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "make_s3_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[25, "cellmap_segmentation_challenge.utils.datasplit.make_s3_datasplit_csv", false]], "match_crop_space() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.match_crop_space", false]], "missing_volume_score() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.missing_volume_score", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[1, "module-cellmap_segmentation_challenge", false], [2, "module-cellmap_segmentation_challenge.cli", false], [3, "module-cellmap_segmentation_challenge.cli.datasplit", false], [4, "module-cellmap_segmentation_challenge.cli.evaluate", false], [5, "module-cellmap_segmentation_challenge.cli.fetch_data", false], [6, "module-cellmap_segmentation_challenge.cli.predict", false], [7, "module-cellmap_segmentation_challenge.cli.process", false], [8, "module-cellmap_segmentation_challenge.cli.speedtest", false], [9, "module-cellmap_segmentation_challenge.cli.train", false], [10, "module-cellmap_segmentation_challenge.cli.visualize", false], [11, "module-cellmap_segmentation_challenge.config", false], [12, "module-cellmap_segmentation_challenge.evaluate", false], [13, "module-cellmap_segmentation_challenge.models", false], [14, "module-cellmap_segmentation_challenge.models.model_load", false], [15, "module-cellmap_segmentation_challenge.models.resnet", false], [16, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [17, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [18, "module-cellmap_segmentation_challenge.models.vitnet", false], [22, "module-cellmap_segmentation_challenge.utils", false], [23, "module-cellmap_segmentation_challenge.utils.crops", false], [24, "module-cellmap_segmentation_challenge.utils.dataloader", false], [25, "module-cellmap_segmentation_challenge.utils.datasplit", false], [26, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [27, "module-cellmap_segmentation_challenge.utils.loss", false], [28, "module-cellmap_segmentation_challenge.utils.security", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "package_submission() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.package_submission", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge)": [[1, "cellmap_segmentation_challenge.predict", false], [19, "cellmap_segmentation_challenge.predict", false]], "process() (in module cellmap_segmentation_challenge)": [[1, "cellmap_segmentation_challenge.process", false], [20, "cellmap_segmentation_challenge.process", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "resize_array() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.resize_array", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[15, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[15, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[15, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[15, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "shape (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow.shape", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[26, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "testcroprow (class in cellmap_segmentation_challenge.utils.crops)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow", false]], "train() (in module cellmap_segmentation_challenge)": [[1, "cellmap_segmentation_challenge.train", false], [21, "cellmap_segmentation_challenge.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "translation (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow.translation", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[18, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[16, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[17, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "visualize() (in module cellmap_segmentation_challenge)": [[1, "cellmap_segmentation_challenge.visualize", false], [29, "cellmap_segmentation_challenge.visualize", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[18, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]], "voxel_size (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[23, "cellmap_segmentation_challenge.utils.crops.TestCropRow.voxel_size", false]], "zip_submission() (in module cellmap_segmentation_challenge.evaluate)": [[12, "cellmap_segmentation_challenge.evaluate.zip_submission", false]]}, "objects": {"": [[1, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[2, 0, 0, "-", "cli"], [11, 0, 0, "-", "config"], [12, 0, 0, "-", "evaluate"], [13, 0, 0, "-", "models"], [19, 1, 1, "", "predict"], [20, 1, 1, "", "process"], [21, 1, 1, "", "train"], [22, 0, 0, "-", "utils"], [29, 1, 1, "", "visualize"]], "cellmap_segmentation_challenge.cli": [[3, 0, 0, "-", "datasplit"], [4, 0, 0, "-", "evaluate"], [5, 0, 0, "-", "fetch_data"], [6, 0, 0, "-", "predict"], [7, 0, 0, "-", "process"], [8, 0, 0, "-", "speedtest"], [9, 0, 0, "-", "train"], [10, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.evaluate": [[12, 1, 1, "", "combine_scores"], [12, 1, 1, "", "hausdorff_distance"], [12, 1, 1, "", "match_crop_space"], [12, 1, 1, "", "missing_volume_score"], [12, 1, 1, "", "package_submission"], [12, 1, 1, "", "resize_array"], [12, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [12, 1, 1, "", "save_numpy_class_labels_to_zarr"], [12, 1, 1, "", "score_instance"], [12, 1, 1, "", "score_label"], [12, 1, 1, "", "score_semantic"], [12, 1, 1, "", "score_submission"], [12, 1, 1, "", "score_volume"], [12, 1, 1, "", "unzip_file"], [12, 1, 1, "", "zip_submission"]], "cellmap_segmentation_challenge.models": [[14, 0, 0, "-", "model_load"], [15, 0, 0, "-", "resnet"], [16, 0, 0, "-", "unet_model_2D"], [17, 0, 0, "-", "unet_model_3D"], [18, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[14, 1, 1, "", "load_best_val"], [14, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[15, 2, 1, "", "ResNet"], [15, 2, 1, "", "Resnet2D"], [15, 2, 1, "", "Resnet3D"], [15, 2, 1, "", "ResnetBlock2D"], [15, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[15, 3, 1, "", "build_conv_block"], [15, 3, 1, "", "crop"], [15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[15, 3, 1, "", "build_conv_block"], [15, 3, 1, "", "crop"], [15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[16, 2, 1, "", "DoubleConv"], [16, 2, 1, "", "Down"], [16, 2, 1, "", "OutConv"], [16, 2, 1, "", "UNet_2D"], [16, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[17, 2, 1, "", "DoubleConv"], [17, 2, 1, "", "Down"], [17, 2, 1, "", "OutConv"], [17, 2, 1, "", "UNet_3D"], [17, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[18, 2, 1, "", "Attention"], [18, 2, 1, "", "Block"], [18, 2, 1, "", "CNNEncoder"], [18, 2, 1, "", "Conv3dReLU"], [18, 2, 1, "", "DecoderBlock"], [18, 2, 1, "", "DecoderCup"], [18, 2, 1, "", "DoubleConv"], [18, 2, 1, "", "Down"], [18, 2, 1, "", "Embeddings"], [18, 2, 1, "", "Encoder"], [18, 2, 1, "", "Mlp"], [18, 2, 1, "", "RegistrationHead"], [18, 2, 1, "", "Transformer"], [18, 2, 1, "", "ViTVNet"], [18, 1, 1, "", "get_3DReg_config"], [18, 1, 1, "", "np2th"], [18, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[18, 3, 1, "", "forward"], [18, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils": [[23, 0, 0, "-", "crops"], [24, 0, 0, "-", "dataloader"], [25, 0, 0, "-", "datasplit"], [26, 0, 0, "-", "fetch_data"], [27, 0, 0, "-", "loss"], [28, 0, 0, "-", "security"]], "cellmap_segmentation_challenge.utils.crops": [[23, 2, 1, "", "CropRow"], [23, 2, 1, "", "TestCropRow"], [23, 1, 1, "", "fetch_manifest"], [23, 1, 1, "", "fetch_test_crop_manifest"], [23, 1, 1, "", "get_test_crops"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[23, 4, 1, "", "alignment"], [23, 4, 1, "", "dataset"], [23, 4, 1, "", "em_url"], [23, 3, 1, "", "from_csv_row"], [23, 4, 1, "", "gt_source"], [23, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.crops.TestCropRow": [[23, 4, 1, "", "class_label"], [23, 4, 1, "", "dataset"], [23, 3, 1, "", "from_csv_row"], [23, 4, 1, "", "id"], [23, 4, 1, "", "shape"], [23, 4, 1, "", "translation"], [23, 4, 1, "", "voxel_size"]], "cellmap_segmentation_challenge.utils.dataloader": [[24, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[25, 1, 1, "", "get_csv_string"], [25, 1, 1, "", "get_dataset_counts"], [25, 1, 1, "", "get_dataset_name"], [25, 1, 1, "", "get_formatted_fields"], [25, 1, 1, "", "get_raw_path"], [25, 1, 1, "", "get_s3_csv_string"], [25, 1, 1, "", "make_datasplit_csv"], [25, 1, 1, "", "make_s3_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[26, 1, 1, "", "copy_store"], [26, 1, 1, "", "get_array_objects"], [26, 1, 1, "", "get_chunk_keys"], [26, 1, 1, "", "get_fibsem_path"], [26, 1, 1, "", "get_group_objects"], [26, 1, 1, "", "get_store_url"], [26, 1, 1, "", "get_url"], [26, 1, 1, "", "partition_copy_store"], [26, 1, 1, "", "read_group"], [26, 1, 1, "", "resolve_em_url"], [26, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[27, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[27, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.security": [[28, 2, 1, "", "Config"], [28, 1, 1, "", "analyze_script"], [28, 1, 1, "", "load_safe_config"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [1, 12, 29, 35], "0": [0, 1, 12, 18, 21, 24, 25, 30, 35, 37], "0001": [1, 21], "03385": 15, "1": [0, 1, 12, 15, 18, 21, 24, 25, 30, 37], "10": [0, 12, 37], "1000": [1, 21, 24], "11": [30, 35], "1109": 12, "12": [1, 12, 19, 20, 25], "128": [1, 12, 18, 21, 30], "1512": 15, "16": [0, 35, 37], "180": [1, 21, 24], "18tb": 30, "1994": 12, "1a": 30, "2": [0, 1, 12, 15, 18, 19, 30, 35, 37], "2019": 35, "2024": 12, "234": 30, "236": 30, "2d": [1, 19, 24, 30, 35], "2d_resnet": [1, 21], "2d_unet": [1, 21], "2x2": 35, "3": [1, 12, 18, 19, 20, 21, 25, 30], "36": 30, "3d": [1, 12, 19, 24, 30], "3d_resnet": [1, 21], "3d_unet": [1, 21], "4": [0, 12, 37], "42": [1, 21], "5": [0, 1, 21, 24, 35, 37], "566": 12, "568": 12, "576361": 12, "5d": [1, 19], "6": [15, 30], "6006": 30, "64": 15, "7": [1, 12, 19, 20, 25, 30], "8": [0, 1, 21, 35, 37], "8155": 12, "820mbp": 30, "8x8x8": 30, "8x8x8nm": 30, "A": [1, 12, 15, 19, 20, 23, 25, 30, 35], "And": [0, 37], "As": [30, 35], "At": 35, "But": [0, 35, 37], "By": [25, 35], "For": [0, 12, 24, 30, 35, 37], "If": [1, 21, 25, 29, 30, 35], "In": [0, 12, 35, 37], "It": [1, 19], "OR": 12, "The": [0, 1, 12, 14, 19, 20, 21, 23, 25, 26, 29, 30, 35, 37], "There": 30, "These": 26, "To": [0, 30, 35, 37], "With": 35, "_": [1, 12, 21, 35], "_loss": 27, "_weightedloss": 27, "abbrevi": 35, "abl": 35, "about": 35, "abov": [0, 30, 35, 37], "access": [30, 35], "accord": 35, "account": 30, "accuraci": 12, "acquir": 35, "acronym": 35, "across": 12, "activ": [15, 30], "addit": [25, 35], "addition": [30, 35], "address": [0, 35, 37], "adjac": 35, "adopt": 35, "advanc": 30, "advent": 35, "after": [1, 21, 28, 30, 36], "afterward": [16, 17, 18, 27], "against": [0, 12, 37], "aic_desmosom": 35, "aim": 35, "al": 12, "align": 23, "all": [1, 12, 16, 17, 18, 25, 26, 27, 29, 30, 35], "allow": 30, "along": [30, 35], "alreadi": [1, 12, 19, 20, 21, 30, 35], "also": [0, 30, 35, 37], "altern": [30, 35], "although": [16, 17, 18, 27], "alwai": [24, 30], "amazon": 35, "amount": 35, "an": [1, 12, 14, 20, 21, 29, 30, 35], "analysi": 35, "analyz": 28, "analyze_script": [28, 31], "angl": 24, "ani": [0, 1, 12, 20, 21, 24, 30, 35, 37], "annot": [30, 32], "anoth": 35, "anyon": 35, "anyth": [1, 21], "apart": 35, "append": 12, "appl": 30, "appli": [1, 15, 21, 24, 30, 35], "applic": [0, 35, 37], "approxim": 30, "ar": [0, 1, 21, 25, 30, 35, 37], "arang": [0, 37], "arbitrari": [1, 20], "architectur": [1, 21], "argument": [1, 21, 25, 30], "around": 35, "arr": 12, "arrai": [0, 1, 12, 20, 24, 26, 30, 37], "array_info": 24, "art": 35, "arxiv": 15, "assign": 30, "assum": [12, 30, 35], "ast": 28, "attempt": [0, 37], "attent": [18, 31], "attr": [0, 37], "attract": 35, "attribut": [0, 35, 37], "avail": [30, 35], "averag": [1, 19, 35], "ax": [0, 1, 21, 24, 37], "axi": [24, 35], "b": 30, "backend": 35, "background": [12, 30, 35], "backward": 12, "base": [0, 12, 30, 35, 37], "base_data_path": 30, "base_path": 25, "basestor": 26, "bash": 30, "batch": [1, 21, 24, 30], "batch_siz": [1, 20, 21, 24, 26], "becam": 35, "becaus": [0, 35, 37], "been": [12, 35], "befor": [15, 30, 35], "beginn": 30, "being": [25, 26], "below": 30, "best": [1, 14, 21], "better": [12, 14, 35], "between": 12, "beyond": [30, 35], "bilinear": 16, "binari": [12, 30], "bit": 35, "block": [1, 15, 18, 19, 31, 35], "bool": [1, 12, 14, 15, 19, 20, 24, 25], "boolean": [28, 30], "border": 30, "both": [12, 16, 17, 18, 27, 30], "branch": 36, "brows": 35, "browser": 30, "bucket": 35, "build": 35, "build_conv_block": 15, "built": 30, "bulk": 35, "c": [0, 30, 35, 37], "calcul": 12, "call": [1, 16, 17, 18, 19, 21, 27, 28, 30, 35], "came": 35, "campu": [0, 35, 37], "can": [0, 1, 12, 19, 21, 29, 30, 35, 37], "cannot": 35, "care": [16, 17, 18, 27], "cd": 30, "cell": [12, 30, 35], "cellmap": [1, 12, 19, 20, 23, 26, 35, 36], "cellmap_schema": [0, 32, 33, 34, 37], "cellmap_segmentation_challeng": [30, 31], "cellmapdataload": 24, "cellmaplosswrapp": [27, 31], "cellular": 35, "center": 15, "certain": 35, "challeng": [12, 23], "chang": [30, 35, 36], "channel": 15, "checkpoint": [1, 14, 21, 30], "chosen": [24, 35], "chunk": [0, 1, 20, 26, 37], "citeseerx": 12, "clariti": 30, "class": [0, 1, 12, 15, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 35, 37], "class_label": [12, 23], "classmethod": 23, "cli": [30, 31], "client": 35, "clone": 36, "cloud": [0, 35, 37], "cnnencod": [18, 31], "coarsen": 35, "coarser": 35, "code": [35, 36], "coicind": 35, "coin": 35, "collabor": 35, "collect": 35, "com": [23, 30, 36], "combin": 12, "combine_scor": [12, 31], "combined_scor": 12, "come": [0, 35, 37], "comma": [1, 19, 20], "command": [0, 30, 37], "common": 35, "commun": 35, "compactli": 35, "compar": 30, "compat": 25, "complet": 35, "compli": [0, 35, 37], "complic": 35, "compon": 30, "compress": 35, "compressor": [0, 37], "compris": 35, "comput": [1, 16, 17, 18, 19, 27, 30], "conda": 30, "config": [1, 18, 19, 20, 21, 28, 30, 31], "config_path": [1, 19, 20, 21, 28], "configur": [1, 19, 20, 21, 28, 30], "confirm": [0, 37], "congruent": 12, "connect": [15, 30], "consid": 12, "consist": 35, "constraint": 35, "construct": [1, 15, 21], "constructor": [1, 21], "consum": [0, 35, 37], "contain": [1, 20, 21, 24, 30, 35], "contigu": 35, "continu": 35, "contribut": 30, "conv": [15, 18], "conv3drelu": [18, 31], "conveni": [30, 35], "convent": [0, 35, 37], "convention": 35, "convert": [18, 30, 35], "convolut": 15, "coordin": 12, "copi": [26, 35], "copy_stor": [26, 31], "core": 26, "corner": 35, "corpuscl": 35, "correct": [30, 35], "correctli": [0, 35, 37], "correspond": [1, 12, 20, 30], "cosem": [0, 33, 37], "cost": 35, "could": [24, 35], "count": 25, "cover": 35, "creat": [12, 23, 26, 30, 35], "crop": [1, 12, 15, 19, 20, 25, 26, 29, 30, 31], "crop_nam": 25, "crop_path": [25, 26], "croprow": [23, 31], "csc": 30, "csv": [1, 21, 23, 25], "csv_path": 25, "cuda": 24, "curl": 30, "current": 35, "custom": 30, "d": 30, "data": [0, 1, 12, 15, 19, 20, 21, 24, 25, 26, 29, 35, 37], "data_d": [0, 37], "dataclass": 23, "dataload": [1, 21, 31], "datapath": 25, "dataset": [0, 1, 12, 19, 20, 21, 23, 25, 29, 30, 37], "datasplit": [1, 21, 24, 31], "datasplit_path": [1, 21, 24], "date": 35, "de": [1, 21], "decid": 35, "decis": 35, "declar": 35, "decoderblock": [18, 31], "decodercup": [18, 31], "deem": 35, "default": [1, 12, 15, 19, 20, 21, 24, 25, 26, 29, 30], "defin": [0, 1, 16, 17, 18, 20, 21, 24, 27, 30, 35, 37], "denot": 35, "depend": [12, 30, 35, 36], "depict": 35, "deriv": 35, "describ": [30, 35], "design": [30, 35], "desir": 12, "dest": 26, "dest_stor": 26, "detail": 35, "detect": 28, "develop": [0, 35, 37], "devic": 24, "dice": 12, "dice_scor": 12, "dict": [12, 25], "dictionari": [1, 12, 21, 24, 25], "did": [0, 35, 37], "differ": 35, "dim": 15, "dimens": [0, 12, 15, 35, 37], "dimension_ord": [0, 37], "dimension_separ": [0, 37], "direct": 12, "directli": 35, "directori": [12, 14, 30, 35, 36], "discuss": 30, "disk": [0, 37], "displai": 35, "disrupt": 35, "distanc": [12, 35], "distinct": 35, "distinguish": 35, "distribut": 35, "divid": 35, "do": [0, 25, 30, 35, 37], "do_orthoplan": [1, 19], "document": [1, 21, 30, 35, 36], "doe": [1, 21, 35], "doi": 12, "doubleconv": [16, 17, 18, 31], "down": [16, 17, 18, 31], "downsampl": 15, "downscal": 35, "draw": 24, "dry_run": 25, "dtype": [0, 37], "dubuisson": 12, "dure": [30, 35], "e": [12, 30, 35], "each": [1, 12, 19, 21, 24, 25, 30, 35], "earli": 35, "earlier": [0, 37], "easi": 30, "edit": 30, "edu": 12, "effort": 35, "egment": 35, "either": [24, 30], "electron": 35, "element": 12, "ellular": 35, "em": [0, 25, 30, 35, 37], "em_source_path": 26, "em_source_root": 26, "em_url": 23, "embed": [18, 31], "emit": 35, "en": 12, "encod": [18, 31], "end": [12, 30, 35], "endo": 12, "enorm": 35, "ensur": 35, "entail": 35, "entir": [1, 19, 20, 24], "epoch": [1, 21, 24], "equal": 35, "er": [1, 21, 30], "er_palm": 35, "era": 35, "error": [0, 37], "especi": 35, "essenti": 35, "estim": 35, "et": 12, "etc": [12, 30, 35], "euclidean": 12, "evalu": [24, 30, 31], "everi": [16, 17, 18, 27, 35], "everytim": 24, "exampl": [12, 24, 30, 35], "except": 30, "exclud": [0, 37], "execut": 30, "exist": [1, 12, 14, 19, 20, 21, 26, 30, 35], "expect": [1, 19], "explain": 35, "express": 35, "extend": 35, "extens": 30, "extra": 30, "f": [0, 37], "face": 35, "factor": 35, "fail": [0, 37], "fals": [1, 12, 15, 16, 17, 18, 19, 20, 24, 25], "far": 35, "fastest": 30, "featur": [18, 35], "feel": 35, "fetch": [23, 30], "fetch_data": 31, "fetch_manifest": [23, 31], "fetch_test_crop_manifest": [23, 31], "few": 35, "fib": [26, 35], "fibsem": [0, 25, 26, 35, 37], "field": 25, "file": [0, 1, 12, 19, 20, 21, 23, 24, 25, 30, 35, 37], "filenam": [12, 30], "filepath": 28, "filesystem": 30, "fill_valu": [0, 37], "filter": [0, 30, 37], "find": [25, 35], "fine": 35, "first": [30, 35], "flag": 30, "flexibl": 30, "flip": [0, 37], "float": [12, 23, 24, 25], "fluent": 35, "fluoresc": 35, "folder": 30, "follow": [0, 12, 30, 35, 37], "foo": [0, 37], "footprint": 35, "forc": [25, 35], "force_all_class": 25, "forg": 30, "form": 35, "formal": [0, 37], "format": [0, 1, 12, 19, 20, 25, 30, 37], "former": [16, 17, 18, 27], "forward": [12, 15, 16, 17, 18, 27], "found": [25, 30, 35], "freedom": [0, 37], "from": [0, 1, 12, 14, 19, 21, 23, 24, 25, 26, 30, 35, 37], "from_arrai": [0, 37], "from_csv_row": 23, "front": 35, "full": [1, 19, 30], "function": [1, 12, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 30, 35], "further": 35, "futur": 35, "g": 35, "gb": 30, "gener": [1, 12, 21, 26, 30, 35], "generos": 35, "geometr": 12, "get": [24, 25, 26], "get_3dreg_config": [18, 31], "get_array_object": [26, 31], "get_chunk_kei": [26, 31], "get_csv_str": [25, 31], "get_dataload": [24, 31], "get_dataset_count": [25, 31], "get_dataset_nam": [25, 31], "get_fibsem_path": [26, 31], "get_formatted_field": [25, 31], "get_group_object": [26, 31], "get_raw_path": [25, 31], "get_s3_csv_str": [25, 31], "get_store_url": [26, 31], "get_test_crop": [23, 31], "get_url": [26, 31], "git": [30, 36], "github": [30, 35, 36], "githubusercont": 23, "give": [0, 35, 37], "given": [1, 12, 15, 19, 24, 25, 30], "global": 30, "goal": 35, "googl": 35, "grid": 35, "ground": 12, "ground_truth": 12, "groundtruth": [1, 25, 29, 30], "group": [0, 26, 35, 37], "group_model": [0, 37], "groupmetadata": [0, 37], "grown": 35, "gt": [0, 1, 29, 30, 35, 37], "gt_sourc": 23, "guid": [0, 37], "ha": [12, 35], "hand": 35, "handl": 12, "happen": 35, "hausdorff": 12, "hausdorff_dist": [12, 31], "hausdorff_distance_max": 12, "haussdorf": 12, "haussdorf_dist": 12, "have": [12, 30, 35], "hd": 12, "head": 23, "hela": 35, "help": 30, "here": [0, 30, 35, 37], "hidden_st": 18, "hierachi": 35, "hierarchi": [30, 35], "highest": 35, "highli": 30, "histor": 35, "histori": 35, "home": 35, "hook": [16, 17, 18, 27], "host": 35, "hostedtoolcach": [1, 12, 19, 20, 25], "hour": 30, "how": [0, 30, 37], "howev": 35, "http": [12, 15, 23, 30, 36], "human": 35, "hwio": 18, "hyperparamet": [1, 21], "i": [0, 1, 12, 14, 15, 19, 20, 21, 24, 25, 28, 29, 30, 37], "i8": [0, 37], "icpr": 12, "icpr94": 12, "icroscopi": 35, "id": [23, 30], "identifi": 35, "ignor": [1, 16, 17, 18, 21, 27], "imag": [0, 12, 15, 37], "image0": 12, "image1": 12, "imageri": 35, "img_siz": 18, "immut": 35, "impair": 35, "implement": [15, 35], "import": [0, 28, 37], "improv": 30, "in_channel": [16, 17, 18], "includ": [1, 12, 21, 25, 35], "include_miss": 12, "independ": [1, 21], "index": 30, "indic": [0, 28, 30, 35, 37], "individu": 35, "induc": 35, "inf": 12, "infin": 12, "info": 24, "inform": [1, 21, 30, 35], "initi": [1, 15, 16, 17, 18, 21, 27], "inner_arrai": 26, "input": [0, 1, 12, 15, 19, 20, 21, 24, 37], "input_array_info": [1, 20, 21, 24], "input_id": 18, "input_nc": 15, "input_path": [1, 20], "input_search_path": 12, "insid": 35, "instal": [30, 36], "instanc": [12, 16, 17, 18, 27, 30, 35], "instance_class": 12, "instancenorm": 15, "instancenorm2d": 15, "instancenorm3d": 15, "instead": [16, 17, 18, 27, 35], "institut": 35, "instruct": 30, "int": [1, 12, 15, 23, 24, 29], "integ": [1, 29], "intend": 35, "inter": 35, "interact": [30, 35], "interest": 35, "intern": [16, 17, 18, 27, 35], "internet": 30, "interpol": 12, "intersect": 12, "introduc": 35, "invent": 35, "involv": 35, "invovl": 24, "iou": 12, "isotrop": 12, "israel": 12, "issu": [0, 28, 37], "ist": 12, "iter": [1, 21, 24, 26], "iterations_per_epoch": [1, 21, 24], "its": [12, 28, 35], "jain": 12, "janelia": [0, 23, 26, 30, 35, 36, 37], "jeff": 12, "jerusalem": 12, "jpeg": 35, "jpg": 35, "jrc": 35, "jrc_cos7": [30, 35], "jrc_dauer": 35, "jrc_hela": [0, 35, 37], "jrc_macrophag": 35, "jrc_mu": 35, "json": [12, 35], "just": [25, 30], "k": [12, 30], "keep": 35, "kei": [26, 35], "kept": [25, 35], "kernel_s": 18, "keyword": [1, 21, 25], "kind": [1, 29], "known": 35, "kwarg": [15, 25, 26, 27, 28], "l": 30, "label": [1, 12, 19, 20, 25, 30, 35], "label1": 12, "label2": 12, "label3": 12, "label_nam": [12, 30], "label_scor": 12, "larg": [0, 1, 19, 35, 37], "larger": 35, "largest": [12, 35], "larva": 35, "latest": [1, 14, 21], "latter": [16, 17, 18, 27], "layer": [1, 15, 29], "ld": 12, "learn": [1, 21, 30, 35], "learning_r": [1, 21], "least": [25, 35], "lection": 35, "led": 35, "len": 12, "less": 35, "level": 35, "lib": [1, 12, 19, 20, 25], "librari": [0, 37], "light": 35, "like": [0, 24, 30, 35, 37], "limit": [1, 21, 35], "line": [0, 30, 37], "linear": [12, 15], "link": 35, "list": [1, 12, 19, 20, 21, 24, 25, 26, 28, 29, 30, 35], "lm": 35, "lm_488": 35, "load": [1, 14, 21, 24, 28, 35], "load_best_v": [14, 31], "load_latest": [14, 31], "load_model": [1, 21], "load_safe_config": [28, 31], "local": [0, 30, 35, 36, 37], "localhost": 30, "locat": [0, 30, 35, 37], "log": [1, 14, 21, 30], "logdir": [1, 21, 30], "logs_save_path": [1, 14, 21], "long": 25, "longer": 35, "look": 35, "loss": [30, 31], "loss_fn": 27, "lossi": 35, "lot": 35, "low_is_best": 14, "lower": 14, "lt": [0, 35, 37], "lyso": 12, "m": [12, 35], "m3": 30, "macbook": 30, "machin": 35, "mai": [1, 21, 26, 30, 35], "main": [23, 35, 36], "maintain": 35, "make": [25, 30, 35, 36], "make_datasplit_csv": [25, 31], "make_s3_datasplit_csv": [25, 31], "mamba": 30, "manag": 36, "mani": 35, "manifest": 23, "manual": 30, "map": [24, 35], "mask": 30, "massiv": 35, "match": [12, 15, 30], "match_crop_spac": [12, 31], "matter": 35, "max": 30, "max_dist": 12, "maximum": [1, 12, 21], "md": [1, 21, 30], "mean": [12, 35], "member": [0, 37], "memori": 30, "mere": 35, "merg": 30, "mesh": 35, "messag": [0, 37], "metadata": [0, 37], "metamorphos": 35, "method": [0, 12, 35, 37], "metric": 30, "mhd": 12, "micro": 30, "micromamba": 30, "microscopi": 35, "mid_channel": [16, 17, 18], "might": 35, "migrat": 35, "mirror": [1, 21, 24], "miss": 12, "missing_volume_scor": [12, 31], "mito": [12, 25, 30], "mito_pr": 35, "mito_seg": 35, "mitochondria": 35, "mkdoc": 36, "mlp": [18, 31], "modal": 35, "mode": 30, "model": [0, 1, 19, 21, 31, 35, 37], "model_dump": [0, 37], "model_kwarg": [1, 21], "model_load": [30, 31], "model_nam": [1, 21], "model_save_path": [1, 14, 21], "model_to_load": [1, 21], "modif": 26, "modifi": 12, "modul": [1, 2, 13, 14, 15, 16, 17, 18, 21, 22, 27, 30], "monitor": [1, 21, 30], "more": [1, 21, 30], "motiv": 35, "mous": 35, "move": 35, "mt": 12, "much": [0, 37], "mulitscal": [0, 37], "multi": [0, 35, 37], "multiscal": [0, 12, 33, 34, 37], "multscal": 35, "must": [12, 24, 35], "n": 30, "n5": [30, 35], "n_block": 15, "n_channel": [16, 17, 18], "n_class": [16, 17], "n_downsampl": 15, "name": [0, 1, 12, 21, 25, 29, 30, 37], "navig": [30, 36], "ndarrai": 12, "ndim": 15, "nearest": [12, 35], "necessari": 12, "need": [0, 1, 12, 16, 17, 18, 21, 27, 30, 35, 37], "needlessli": 35, "neighbor": 12, "nesteddirectorystor": [0, 37], "net": [16, 17, 18], "neuroglanc": [1, 29, 30, 35], "neuroglancer_n5": [0, 34, 37], "never": 35, "new": [30, 35], "newer": 35, "next": 30, "ngf": 15, "ngff": [12, 35], "nm": [0, 30, 37], "nn": [14, 15, 16, 17, 18, 27], "node": 26, "non": [12, 15, 35], "none": [0, 1, 12, 15, 16, 17, 18, 20, 21, 24, 26, 29, 37], "nonzero": 12, "norm_lay": 15, "normal": [12, 15], "normalized_haussdorf_dist": 12, "note": [0, 12, 30, 35, 37], "novo": [1, 21], "np": [0, 12, 37], "np2th": [18, 31], "nuc": [1, 12, 21, 25, 30], "num_voxel": 12, "number": [1, 12, 15, 19, 20, 21, 24, 29, 30, 35], "numpi": [0, 12, 30, 35, 37], "o": [0, 35, 37], "object": [12, 14, 23, 26, 30, 35], "obviou": 35, "offer": 30, "offset": 12, "often": [30, 35], "oihw": 18, "old": 35, "older": 35, "om": [12, 35], "onc": [30, 35], "one": [16, 17, 18, 25, 27, 30, 35], "onli": [25, 35], "onlin": 30, "open": [0, 30, 35, 37], "openorganel": 35, "oper": [0, 35, 37], "opt": [1, 12, 19, 20, 25], "optim": [1, 21], "option": [1, 12, 19, 20, 21, 24, 25, 29, 30], "order": [0, 37], "org": [12, 15], "organ": [0, 35, 37], "organel": 35, "origin": [15, 35], "orthogon": [1, 19], "other": [1, 20, 21, 35], "otherwis": [25, 30], "our": [0, 35, 37], "out": [0, 35, 37], "out_channel": [16, 17, 18], "outconv": [16, 17, 31], "outer_arrai": 26, "output": [1, 12, 15, 19, 20, 27], "output_nc": 15, "output_path": [1, 12, 19, 20], "over": [12, 26], "overall_scor": 12, "overhaul": 35, "overlap": 35, "overridden": [16, 17, 18, 27], "overwrit": [1, 12, 19, 20, 30], "own": 35, "p": 12, "pacinian": 35, "pacininan": 35, "pack": 30, "packag": [0, 12, 30, 36, 37], "package_submiss": [12, 31], "pad": [12, 18, 30], "pad_valu": 12, "padding_typ": 15, "page": [12, 30], "paper": [15, 35], "parallel": 35, "param": 15, "paramet": [0, 1, 12, 14, 19, 20, 21, 23, 24, 25, 26, 27, 29, 35, 37], "paramt": [0, 37], "parlanc": 35, "pars": 35, "part": [16, 17, 35], "parti": 35, "particular": 30, "partit": 35, "partition_copy_stor": [26, 31], "pass": [0, 1, 16, 17, 18, 21, 27, 37], "path": [0, 1, 12, 14, 19, 20, 21, 24, 25, 26, 30, 35, 36, 37], "pdf": 15, "per": [1, 21, 24, 30], "perform": [0, 12, 16, 17, 18, 27, 37], "perox": 12, "physic": 35, "piec": 35, "pip": [0, 30, 37], "pixel": 12, "pixelresolut": [0, 35, 37], "place": 14, "placehold": [1, 12, 19, 20], "plan": 35, "plane": [1, 19], "platform": 35, "pm": 30, "poetri": 36, "point": 12, "pool": 26, "portal": [30, 35], "possibli": 18, "potenti": [28, 35], "pre": [1, 21], "precomput": 35, "pred": 12, "pred_label": 12, "pred_label_path": 12, "pred_volume_path": 12, "predict": [1, 12, 20, 21, 29, 31, 35], "predict_2d": 30, "predict_3d": 30, "predictions_path": [1, 19, 20], "prefer": 30, "prefix": 35, "present": [0, 12, 25, 37], "pressur": 35, "preview": 36, "previou": 35, "primari": 35, "principl": 35, "print": [0, 37], "pro": 30, "probabl": [24, 25], "problem": [0, 35, 37], "process": [1, 12, 21, 29, 31], "process_2d": 30, "process_3d": 30, "process_func": [1, 20, 30], "processed_path": [1, 20], "produc": [0, 35, 37], "product": 35, "program": 35, "progress": [1, 21, 30], "projct": 35, "project": [0, 35, 37], "proport": [1, 21], "provid": [0, 1, 21, 24, 30, 35, 37], "psu": 12, "pth": [1, 21, 30], "public": 35, "publish": 35, "pull": 36, "purpos": 35, "put": [0, 37], "py": [1, 19, 20, 30], "pydant": [0, 37], "pyramid": 35, "pytest": 36, "python": [0, 1, 12, 19, 20, 21, 25, 30, 35, 37], "python3": [1, 12, 19, 20, 25], "pytorch": [1, 21], "r": 30, "rais": [0, 37], "ran": 35, "randint": 12, "random": [1, 12, 21, 24, 35], "random_se": [1, 21], "random_valid": 24, "randomli": 24, "rang": [0, 12, 24, 37], "rarer": 35, "rate": [1, 21], "raw": [23, 25, 30, 35], "raw_nam": 25, "raw_path": 25, "re": [12, 30], "read": 35, "read_group": [26, 31], "readabl": 35, "readm": [1, 21, 30], "reason": 35, "recip": [16, 17, 18, 27], "recommend": 30, "recon": 25, "reconstruct": 26, "redirect": 35, "ref": 23, "refer": [12, 30], "reflect": [1, 15, 21], "region": [26, 35], "regist": [16, 17, 18, 27], "registrationhead": [18, 31], "rel": [0, 26, 30, 35, 37], "relu": 15, "remov": 35, "renam": 35, "render": 36, "replac": 12, "replic": 15, "repo": 30, "repositori": [35, 36], "repres": [12, 23, 35], "reproduc": [1, 21], "request": [25, 30, 36], "requir": [1, 12, 20, 30, 35], "resampl": 12, "resblock": 15, "rescal": 12, "research": [0, 35, 37], "reshap": [0, 37], "resiz": 12, "resize_arrai": [12, 31], "resnet": 31, "resnet2d": [15, 31], "resnet3d": [15, 31], "resnetblock2d": [15, 31], "resnetblock3d": [15, 31], "resolut": [12, 30], "resolv": 26, "resolve_em_url": [26, 31], "resourc": 35, "respect": [1, 20, 25, 30, 35], "respresent": 35, "result": [0, 12, 26, 30, 35, 37], "result_fil": 12, "retriev": 30, "return": [1, 12, 15, 20, 21, 23, 24, 25, 26, 28, 30], "rganel": 35, "rhoad": 12, "root": 35, "rotat": [1, 21, 24], "row": 23, "run": [1, 16, 17, 18, 21, 27, 30, 36], "s0": [0, 35, 37], "s1": [0, 35, 37], "s2": 35, "s3": [0, 37], "saalfeldlab": 35, "safe": [28, 35], "safeti": 28, "same": [1, 12, 19, 21, 30, 35], "sampl": [30, 35], "satisfi": [30, 35], "save": [1, 12, 19, 20, 21, 30, 35], "save_numpy_binary_to_zarr": [12, 30], "save_numpy_class_arrays_to_zarr": [12, 31], "save_numpy_class_labels_to_zarr": [12, 31], "save_numpy_labels_to_zarr": [12, 30], "save_path": 12, "scalar": 35, "scale": [0, 1, 12, 20, 21, 24, 30, 35, 37], "scene": 35, "schema": [30, 36], "scheme": 35, "scipi": 12, "score": [12, 14], "score_inst": [12, 31], "score_label": [12, 31], "score_semant": [12, 31], "score_submiss": [12, 31], "score_volum": [12, 31], "screenshot": 35, "script": [1, 20, 21, 28, 30], "scriptmodul": [16, 17, 18, 27], "search": [14, 25, 30], "search_path": [14, 25], "second": [1, 21, 35], "section": [30, 35], "secur": 31, "see": [0, 1, 21, 30, 35, 37], "seed": [1, 21], "segment": [1, 12, 19, 20, 23, 24, 35], "select": 35, "self": 23, "sem": [26, 35], "semant": [12, 35], "separ": [1, 19, 20, 35], "sequenc": [1, 24, 29, 35], "serv": [30, 36], "server": 30, "servic": 35, "set": [1, 12, 19, 20, 21, 24, 25, 35], "sever": 35, "sh": 30, "shape": [0, 1, 12, 15, 19, 21, 23, 24, 30, 35, 37], "share": [16, 17, 18, 27, 35], "shell": 30, "ship": [0, 37], "short": 35, "should": [1, 16, 17, 18, 20, 21, 24, 27, 30, 35], "show": 30, "shown": 12, "side": 30, "sign": 30, "silent": [1, 16, 17, 18, 21, 27], "similar": 35, "similarli": [1, 19], "simpl": [30, 35], "simpli": [30, 35], "sinc": [16, 17, 18, 27], "singl": [12, 30, 35], "size": [1, 12, 20, 21, 24, 30, 35], "skip": [15, 18], "skip_channel": 18, "slice": 26, "small": [0, 37], "smaller": [12, 35], "smooth": 35, "so": [0, 35, 37], "softwar": 35, "solv": 35, "some": [30, 35], "sometim": [1, 19], "sourc": [1, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 35], "source_stor": 26, "space": 35, "spatial": [1, 12, 15, 21, 24, 35], "spatial_transform": [1, 21, 24], "special": 35, "specif": [0, 35, 37], "specifi": [1, 12, 20, 21, 24, 30, 35], "specimen": 35, "speed": 30, "speedtest": 31, "spend": [1, 21], "split": [1, 19, 21, 24], "src": [23, 30], "stai": 35, "standard": [12, 15, 35], "start": 35, "state": [16, 17, 18, 27], "step": 30, "still": 35, "storag": [0, 26, 30, 35, 37], "store": [0, 26, 35, 37], "str": [1, 12, 14, 15, 19, 20, 21, 23, 24, 25, 26, 29], "strategi": 35, "strict": 35, "stride": 18, "string": [1, 19, 20, 21, 25, 26, 29], "structur": [0, 12, 35, 37], "style": 35, "subclass": [16, 17, 18, 27], "submiss": [1, 12, 29, 30], "submission_path": [12, 30], "submit": 36, "subsampl": 35, "subsequ": 35, "subset_to_slic": [26, 31], "succe": [0, 37], "success": 35, "suffix": 35, "summari": [0, 12, 37], "suppli": 30, "support": [0, 26, 35, 37], "sure": 30, "swish": [18, 31], "system": 35, "t": 35, "take": [1, 16, 17, 18, 20, 27, 30, 35], "taken": 35, "target": [1, 12, 21, 24, 27, 35], "target_array_info": [1, 20, 21, 24], "target_shap": 12, "tb": [0, 35, 37], "team": [0, 35, 37], "techniqu": 35, "technologi": 35, "tem": 35, "tensor": 27, "tensorboard": [1, 14, 21, 30], "terabyt": [0, 37], "termin": [1, 21, 30], "test": [0, 1, 12, 19, 20, 23, 36, 37], "test_crop_manifest": 23, "test_volum": 12, "test_volume_nam": [12, 30], "testcroprow": [23, 31], "text": [0, 37], "than": [0, 12, 35, 37], "thei": [0, 30, 35, 37], "them": [16, 17, 18, 26, 27, 30, 35], "thi": [0, 1, 12, 16, 17, 18, 19, 21, 24, 26, 27, 30, 35, 37], "third": 35, "thoroughli": 30, "those": [0, 30, 37], "threadpoolexecutor": 26, "threshold": [12, 30, 35], "through": 30, "thu": [30, 35], "thumbnail": 35, "time": [1, 15, 21, 30, 35], "tissu": 35, "tmp": [0, 37], "to_zarr": [0, 37], "togeth": 35, "toi": [0, 37], "too": [0, 37], "took": 30, "tool": [0, 26, 30, 35, 37], "top": [30, 35], "torch": [14, 15, 24], "track": 35, "tracker": [0, 37], "tradit": 12, "train": [1, 19, 24, 25, 31], "train_2d": 30, "train_3d": 30, "transform": [1, 18, 21, 24, 31, 35], "transit": 35, "translat": [12, 23, 35], "transpos": [1, 21, 24], "transpose_for_scor": 18, "trasposit": 24, "trilinear": [16, 17], "true": [1, 12, 14, 16, 17, 18, 19, 25, 35], "truth": 12, "truth_label": 12, "truth_path": 12, "truth_volume_path": 12, "try": 35, "tupl": [12, 23, 24, 26], "twice": 35, "two": [12, 35], "type": [1, 12, 15, 20, 21, 23, 24, 25, 26, 29, 35], "typic": 35, "u": [0, 16, 17, 35, 37], "uint16": [0, 35, 37], "uint8": [25, 35], "ultim": 35, "unchang": 35, "under": 35, "underscor": 35, "understand": 35, "unet_2d": [16, 31], "unet_3d": [17, 31], "unet_model_2d": [30, 31], "unet_model_3d": 31, "unformat": 25, "union": 12, "uniqu": [30, 35], "unit": [0, 12, 35, 37], "unsaf": 28, "until": 35, "unus": 25, "unzip": 12, "unzip_fil": [12, 31], "up": [16, 17, 31], "upath": [1, 12, 20], "upsampl": 18, "uri": 26, "url": [0, 23, 26, 35, 37], "us": [0, 1, 12, 19, 20, 21, 24, 25, 26, 28, 30, 35, 36, 37], "usag": [12, 25], "use_batchnorm": 18, "use_bia": 15, "use_dropout": 15, "user": [30, 35], "util": [30, 31], "v": 18, "val": [1, 21, 24], "valid": [1, 14, 15, 21, 24, 25, 30, 35], "validation_batch_limit": [1, 21], "validation_prob": [1, 21, 25], "validation_time_limit": [1, 21], "valu": [12, 24, 35], "varieti": 35, "ve": 12, "veri": 35, "verifi": 28, "versa": 12, "version": 35, "vi": 18, "via": 35, "vice": 12, "view": [30, 35], "viewabl": 30, "viewdoc": 12, "viewer": 30, "vim": 12, "visual": [1, 31, 35], "visul": 35, "vit": 18, "vitnet": [1, 21, 31], "vitvnet": [18, 31], "volum": [1, 12, 19, 30, 35], "voxel": [12, 30], "voxel_s": [12, 23], "wa": [30, 35], "wai": [30, 35], "want": [30, 35], "wasn": 35, "watersh": 30, "we": [0, 15, 30, 35, 37], "web": 35, "weight": [14, 18, 30], "welcom": 30, "well": [1, 21, 30, 35], "were": 35, "what": [0, 37], "when": [0, 12, 24, 35, 37], "where": [0, 12, 35, 37], "whereev": 35, "whether": [0, 1, 12, 14, 19, 20, 24, 28, 30, 37], "which": [0, 1, 21, 25, 26, 30, 35, 37], "while": [12, 16, 17, 18, 27, 35], "wide": [0, 35, 37], "wifi": 30, "wiki": 12, "wikipedia": 12, "window": [30, 35], "wish": 30, "within": [16, 17, 18, 24, 27, 35], "word": 35, "work": [0, 12, 30, 35, 37], "worker": 24, "workflow": 35, "world": 12, "would": [0, 35, 37], "write": [0, 25, 35, 37], "written": 25, "x": [0, 1, 15, 16, 17, 18, 19, 21, 24, 37], "x1": [16, 17], "x2": [16, 17], "x64": [1, 12, 19, 20, 25], "y": [0, 1, 19, 21, 24, 30, 37], "yarl": 23, "year": 35, "yet": 35, "yield": [1, 19], "you": [0, 30, 35, 37], "your": 36, "z": [1, 19, 24], "zarr": [0, 1, 12, 19, 20, 25, 26, 30, 35, 37], "zarr_path": 12, "zarr_vers": [0, 37], "zero": 15, "zip": [12, 30], "zip_path": 12, "zip_submiss": [12, 31], "zoom": 35}, "titles": ["CellMap Schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.cli.datasplit", "cellmap_segmentation_challenge.cli.evaluate", "cellmap_segmentation_challenge.cli.fetch_data", "cellmap_segmentation_challenge.cli.predict", "cellmap_segmentation_challenge.cli.process", "cellmap_segmentation_challenge.cli.speedtest", "cellmap_segmentation_challenge.cli.train", "cellmap_segmentation_challenge.cli.visualize", "cellmap_segmentation_challenge.config", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.process", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.security", "cellmap_segmentation_challenge.visualize", "CellMap Segmentation Challenge", "src", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas"], "titleterms": {"ad": 36, "align": 35, "an": [0, 37], "api": 30, "arrai": 35, "cellmap": [0, 30, 37], "cellmap_segmentation_challeng": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "challeng": 30, "check": [0, 37], "chunk": 35, "cli": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 37], "clone": 30, "config": 11, "contain": [0, 37], "content": 30, "contribut": [0, 37], "coordin": 35, "cosem": 35, "creat": [0, 37], "crop": 23, "data": 30, "dataload": 24, "dataset": 35, "datasplit": [3, 25], "download": 30, "downsampl": 35, "environ": 30, "evalu": [4, 12], "exampl": [0, 37], "fetch_data": [5, 26], "final": 30, "format": 35, "get": 30, "hierarchi": [0, 37], "i": 35, "imag": 35, "inspect": [0, 37], "instal": [0, 37], "layout": 35, "link": 30, "loss": 27, "metadata": 35, "model": [13, 14, 15, 16, 17, 18, 30], "model_load": 14, "multipl": 35, "multiresolut": 35, "multiscal": 35, "n5": [0, 37], "name": 35, "neuroglanc": [0, 37], "outlin": 35, "post": 30, "predict": [6, 19, 30], "process": [7, 20, 30], "project": 36, "repositori": 30, "resnet": 15, "s3": 35, "schema": [0, 37], "secur": 28, "segment": 30, "set": 30, "speedtest": 8, "src": 31, "start": 30, "structur": 30, "submit": 30, "test": 30, "thi": 36, "train": [9, 21, 30], "unet_model_2d": 16, "unet_model_3d": 17, "up": 30, "util": [22, 23, 24, 25, 26, 27, 28], "valid": [0, 37], "visual": [10, 29, 30], "vitnet": 18, "what": 35, "your": 30}})