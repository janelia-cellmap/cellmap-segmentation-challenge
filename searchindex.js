Search.setIndex({"alltitles": {"API": [[7, "api"]], "Adding to this project": [[13, null]], "COSEM": [[12, "cosem"]], "CellMap Schemas": [[0, null], [14, null]], "CellMap Segmentation Challenge": [[7, null]], "Chunked array format": [[12, "chunked-array-format"]], "Clone the repository": [[7, "clone-the-repository"]], "Contents:": [[7, null]], "Contributing": [[0, "contributing"], [14, "contributing"]], "Dataset names": [[12, "dataset-names"]], "Datasets on S3": [[12, "datasets-on-s3"]], "Download the data": [[7, "download-the-data"]], "Downsampling and coordinates": [[12, "downsampling-and-coordinates"]], "Example: creating an N5 hierarchy for Neuroglancer": [[0, "example-creating-an-n5-hierarchy-for-neuroglancer"], [14, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[0, "example-validating-a-container-with-the-cli"], [14, "example-validating-a-container-with-the-cli"]], "Getting started": [[7, "getting-started"]], "Image layout": [[12, "image-layout"]], "Installation": [[0, "installation"], [14, "installation"]], "Links": [[7, "links"]], "Module contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-cellmap_segmentation_challenge.models"], [6, "module-cellmap_segmentation_challenge.utils"]], "Multiple image alignments": [[12, "multiple-image-alignments"]], "Multiresolution image layout": [[12, "multiresolution-image-layout"]], "Multiscale image metadata": [[12, "multiscale-image-metadata"]], "Outline": [[12, null]], "Post-process model predictions": [[7, "post-process-model-predictions"]], "Predict on test data": [[7, "predict-on-test-data"]], "Repository structure": [[7, "repository-structure"]], "S3 layout": [[12, "s3-layout"]], "Set up your environment": [[7, "set-up-your-environment"]], "Submit your final predictions": [[7, "submit-your-final-predictions"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [6, "submodules"]], "Subpackages": [[1, "subpackages"]], "Train a model": [[7, "train-a-model"]], "What is a dataset": [[12, "what-is-a-dataset"]], "cellmap-schemas check": [[0, "cellmap-schemas-check"], [14, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[0, "cellmap-schemas-inspect"], [14, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge package": [[1, null]], "cellmap_segmentation_challenge.cli package": [[2, null]], "cellmap_segmentation_challenge.cli.datasplit module": [[2, "cellmap-segmentation-challenge-cli-datasplit-module"]], "cellmap_segmentation_challenge.cli.evaluate module": [[2, "cellmap-segmentation-challenge-cli-evaluate-module"]], "cellmap_segmentation_challenge.cli.fetch_data module": [[2, "cellmap-segmentation-challenge-cli-fetch-data-module"]], "cellmap_segmentation_challenge.cli.predict module": [[2, "cellmap-segmentation-challenge-cli-predict-module"]], "cellmap_segmentation_challenge.cli.train module": [[2, "cellmap-segmentation-challenge-cli-train-module"]], "cellmap_segmentation_challenge.evaluate module": [[1, "module-cellmap_segmentation_challenge.evaluate"]], "cellmap_segmentation_challenge.models package": [[3, null]], "cellmap_segmentation_challenge.models.model_load module": [[3, "module-cellmap_segmentation_challenge.models.model_load"]], "cellmap_segmentation_challenge.models.resnet module": [[3, "module-cellmap_segmentation_challenge.models.resnet"]], "cellmap_segmentation_challenge.models.unet_model_2D module": [[3, "module-cellmap_segmentation_challenge.models.unet_model_2D"]], "cellmap_segmentation_challenge.models.unet_model_3D module": [[3, "module-cellmap_segmentation_challenge.models.unet_model_3D"]], "cellmap_segmentation_challenge.models.vitnet module": [[3, "module-cellmap_segmentation_challenge.models.vitnet"]], "cellmap_segmentation_challenge.postprocess module": [[1, "cellmap-segmentation-challenge-postprocess-module"]], "cellmap_segmentation_challenge.predict": [[4, null]], "cellmap_segmentation_challenge.predict module": [[1, "module-cellmap_segmentation_challenge.predict"]], "cellmap_segmentation_challenge.train": [[5, null]], "cellmap_segmentation_challenge.train module": [[1, "module-cellmap_segmentation_challenge.train"]], "cellmap_segmentation_challenge.utils package": [[6, null]], "cellmap_segmentation_challenge.utils.crops module": [[6, "module-cellmap_segmentation_challenge.utils.crops"]], "cellmap_segmentation_challenge.utils.dataloader module": [[6, "module-cellmap_segmentation_challenge.utils.dataloader"]], "cellmap_segmentation_challenge.utils.datasplit module": [[6, "module-cellmap_segmentation_challenge.utils.datasplit"]], "cellmap_segmentation_challenge.utils.fetch_data module": [[6, "module-cellmap_segmentation_challenge.utils.fetch_data"]], "cellmap_segmentation_challenge.utils.loss module": [[6, "module-cellmap_segmentation_challenge.utils.loss"]], "cellmap_segmentation_challenge.utils.visualize module": [[6, "module-cellmap_segmentation_challenge.utils.visualize"]], "src": [[8, null]]}, "docnames": ["cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "index", "modules", "scheme_docs/api/annotation", "scheme_docs/api/multiscale/cosem", "scheme_docs/api/multiscale/neuroglancer_n5", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "index.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/api/multiscale/cosem.md", "scheme_docs/api/multiscale/neuroglancer_n5.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md"], "indexentries": {"alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge.evaluate": [[1, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[3, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[3, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[3, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[3, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[3, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[3, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.predict": [[1, "module-cellmap_segmentation_challenge.predict", false], [4, "module-cellmap_segmentation_challenge.predict", false]], "cellmap_segmentation_challenge.train": [[1, "module-cellmap_segmentation_challenge.train", false], [5, "module-cellmap_segmentation_challenge.train", false]], "cellmap_segmentation_challenge.utils": [[6, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[6, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[6, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[6, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[6, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[6, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.visualize": [[6, "module-cellmap_segmentation_challenge.utils.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[6, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[3, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[3, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[3, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[3, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[3, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[3, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[3, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[6, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_array_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_array_objects", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[6, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_fibsem_path() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_fibsem_path", false]], "get_group_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_group_objects", false]], "get_output_shape() (in module cellmap_segmentation_challenge.predict)": [[1, "cellmap_segmentation_challenge.predict.get_output_shape", false], [4, "cellmap_segmentation_challenge.predict.get_output_shape", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_url", false]], "gt_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_url", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[3, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[3, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[1, "module-cellmap_segmentation_challenge.evaluate", false], [1, "module-cellmap_segmentation_challenge.predict", false], [1, "module-cellmap_segmentation_challenge.train", false], [3, "module-cellmap_segmentation_challenge.models", false], [3, "module-cellmap_segmentation_challenge.models.model_load", false], [3, "module-cellmap_segmentation_challenge.models.resnet", false], [3, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [3, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [3, "module-cellmap_segmentation_challenge.models.vitnet", false], [4, "module-cellmap_segmentation_challenge.predict", false], [5, "module-cellmap_segmentation_challenge.train", false], [6, "module-cellmap_segmentation_challenge.utils", false], [6, "module-cellmap_segmentation_challenge.utils.crops", false], [6, "module-cellmap_segmentation_challenge.utils.dataloader", false], [6, "module-cellmap_segmentation_challenge.utils.datasplit", false], [6, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [6, "module-cellmap_segmentation_challenge.utils.loss", false], [6, "module-cellmap_segmentation_challenge.utils.visualize", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge.predict)": [[1, "cellmap_segmentation_challenge.predict.predict", false], [4, "cellmap_segmentation_challenge.predict.predict", false]], "predict_ortho_planes() (in module cellmap_segmentation_challenge.predict)": [[1, "cellmap_segmentation_challenge.predict.predict_ortho_planes", false], [4, "cellmap_segmentation_challenge.predict.predict_ortho_planes", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[3, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[3, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[3, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[3, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "save_result_figs() (in module cellmap_segmentation_challenge.utils.visualize)": [[6, "cellmap_segmentation_challenge.utils.visualize.save_result_figs", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "train() (in module cellmap_segmentation_challenge.train)": [[1, "cellmap_segmentation_challenge.train.train", false], [5, "cellmap_segmentation_challenge.train.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[3, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[1, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[3, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[3, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[3, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]]}, "objects": {"cellmap_segmentation_challenge": [[1, 0, 0, "-", "evaluate"], [3, 0, 0, "-", "models"], [4, 0, 0, "-", "predict"], [5, 0, 0, "-", "train"], [6, 0, 0, "-", "utils"]], "cellmap_segmentation_challenge.evaluate": [[1, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [1, 1, 1, "", "save_numpy_class_labels_to_zarr"], [1, 1, 1, "", "score_instance"], [1, 1, 1, "", "score_label"], [1, 1, 1, "", "score_semantic"], [1, 1, 1, "", "score_submission"], [1, 1, 1, "", "score_volume"], [1, 1, 1, "", "unzip_file"]], "cellmap_segmentation_challenge.models": [[3, 0, 0, "-", "model_load"], [3, 0, 0, "-", "resnet"], [3, 0, 0, "-", "unet_model_2D"], [3, 0, 0, "-", "unet_model_3D"], [3, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[3, 1, 1, "", "load_best_val"], [3, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[3, 2, 1, "", "ResNet"], [3, 2, 1, "", "Resnet2D"], [3, 2, 1, "", "Resnet3D"], [3, 2, 1, "", "ResnetBlock2D"], [3, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[3, 3, 1, "", "build_conv_block"], [3, 3, 1, "", "crop"], [3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[3, 3, 1, "", "build_conv_block"], [3, 3, 1, "", "crop"], [3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[3, 2, 1, "", "DoubleConv"], [3, 2, 1, "", "Down"], [3, 2, 1, "", "OutConv"], [3, 2, 1, "", "UNet_2D"], [3, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[3, 2, 1, "", "DoubleConv"], [3, 2, 1, "", "Down"], [3, 2, 1, "", "OutConv"], [3, 2, 1, "", "UNet_3D"], [3, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[3, 2, 1, "", "Attention"], [3, 2, 1, "", "Block"], [3, 2, 1, "", "CNNEncoder"], [3, 2, 1, "", "Conv3dReLU"], [3, 2, 1, "", "DecoderBlock"], [3, 2, 1, "", "DecoderCup"], [3, 2, 1, "", "DoubleConv"], [3, 2, 1, "", "Down"], [3, 2, 1, "", "Embeddings"], [3, 2, 1, "", "Encoder"], [3, 2, 1, "", "Mlp"], [3, 2, 1, "", "RegistrationHead"], [3, 2, 1, "", "Transformer"], [3, 2, 1, "", "ViTVNet"], [3, 1, 1, "", "get_3DReg_config"], [3, 1, 1, "", "np2th"], [3, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[3, 3, 1, "", "forward"], [3, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[3, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.predict": [[4, 1, 1, "", "get_output_shape"], [4, 1, 1, "", "predict"], [4, 1, 1, "", "predict_ortho_planes"]], "cellmap_segmentation_challenge.train": [[5, 1, 1, "", "train"]], "cellmap_segmentation_challenge.utils": [[6, 0, 0, "-", "crops"], [6, 0, 0, "-", "dataloader"], [6, 0, 0, "-", "datasplit"], [6, 0, 0, "-", "fetch_data"], [6, 0, 0, "-", "loss"], [6, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.utils.crops": [[6, 2, 1, "", "CropRow"], [6, 1, 1, "", "fetch_manifest"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[6, 4, 1, "", "alignment"], [6, 4, 1, "", "dataset"], [6, 4, 1, "", "em_url"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "gt_url"], [6, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.dataloader": [[6, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[6, 1, 1, "", "get_csv_string"], [6, 1, 1, "", "get_dataset_counts"], [6, 1, 1, "", "make_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[6, 1, 1, "", "copy_store"], [6, 1, 1, "", "get_array_objects"], [6, 1, 1, "", "get_chunk_keys"], [6, 1, 1, "", "get_fibsem_path"], [6, 1, 1, "", "get_group_objects"], [6, 1, 1, "", "get_store_url"], [6, 1, 1, "", "get_url"], [6, 1, 1, "", "partition_copy_store"], [6, 1, 1, "", "read_group"], [6, 1, 1, "", "resolve_em_url"], [6, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[6, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.visualize": [[6, 1, 1, "", "save_result_figs"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [7, 12], "0": [0, 1, 3, 4, 5, 6, 7, 12, 14], "0001": [1, 5], "03385": 3, "1": [0, 1, 3, 5, 6, 7, 14], "10": [0, 14], "1000": [1, 5, 6], "11": [7, 12], "12": 6, "128": [1, 3, 5], "1512": 3, "16": [0, 12, 14], "180": [1, 5, 6], "2": [0, 1, 3, 4, 7, 12, 14], "2019": 12, "255": [1, 4], "2d": [1, 4, 6, 7, 12], "2d_resnet": [1, 5], "2d_unet": [1, 5], "2x2": 12, "3": [1, 3, 5, 6, 7], "3d": [1, 4, 6, 7], "3d_resnet": [1, 5], "3d_unet": [1, 5], "4": [0, 1, 14], "42": [1, 5], "5": [0, 1, 5, 6, 12, 14], "6": 3, "64": 3, "7": 6, "8": [0, 1, 5, 12, 14], "8x8x8": 7, "8x8x8nm": 7, "A": [1, 3, 6, 7, 12], "And": [0, 14], "As": 12, "At": 12, "But": [0, 12, 14], "By": [6, 12], "For": [0, 1, 4, 6, 7, 12, 14], "If": [1, 4, 5, 6, 12], "In": [0, 12, 14], "It": 7, "OR": 1, "The": [0, 1, 3, 4, 5, 6, 7, 12, 14], "These": 6, "To": [0, 7, 12, 14], "With": 12, "_": [1, 5, 12], "_loss": 6, "_weightedloss": 6, "abbrevi": 12, "abl": 12, "about": 12, "abov": [0, 12, 14], "access": 12, "accord": 12, "account": 7, "accuraci": 1, "acquir": 12, "acronym": 12, "across": 1, "activ": [3, 7], "add": 7, "addit": 12, "addition": 12, "address": [0, 12, 14], "adjac": 12, "adopt": 12, "advent": 12, "affin": [1, 4], "after": [1, 5, 7, 13], "afterward": [3, 6], "against": [0, 1, 14], "aic_desmosom": 12, "aim": 12, "align": [1, 6], "all": [1, 3, 6, 7, 12], "along": [7, 12], "alreadi": [1, 5, 7, 12], "also": [0, 7, 12, 14], "altern": 12, "although": [3, 6], "alwai": [6, 7], "amazon": 12, "amount": 12, "an": [1, 3, 4, 5, 7, 12], "analysi": 12, "angl": 6, "ani": [0, 1, 5, 6, 12, 14], "annot": [7, 9], "anoth": 12, "anyon": 12, "anyth": [1, 5], "apart": 12, "appli": [1, 3, 5, 6, 12], "applic": [0, 12, 14], "ar": [0, 1, 5, 6, 7, 12, 14], "arang": [0, 14], "architectur": [1, 5], "argument": [1, 5, 7], "around": 12, "arrai": [0, 1, 6, 7, 14], "array_info": 6, "art": 12, "arxiv": 3, "assum": [7, 12], "attempt": [0, 14], "attent": [1, 3], "attr": [0, 14], "attract": 12, "attribut": [0, 12, 14], "avail": [7, 12], "averag": [1, 4, 12], "ax": [0, 1, 5, 6, 14], "axi": [6, 12], "b": 7, "backend": 12, "background": [1, 7, 12], "base": [0, 3, 6, 12, 14], "basestor": 6, "batch": [1, 5, 6], "batch_siz": [1, 5, 6], "becam": 12, "becaus": [0, 12, 14], "been": 12, "befor": [3, 12], "being": 6, "belong": [1, 4], "below": 7, "best": [1, 3, 5], "better": [3, 12], "beyond": 12, "bilinear": 3, "binari": [1, 7], "bit": 12, "block": [1, 3, 4, 12], "bool": [3, 6], "boolean": 7, "both": [3, 6, 7], "boundlogg": 6, "branch": 13, "brows": 12, "bucket": 12, "build": 12, "build_conv_block": [1, 3], "built": 7, "bulk": 12, "c": [0, 12, 14], "call": [1, 3, 5, 6, 12], "came": 12, "campu": [0, 12, 14], "can": [0, 1, 4, 5, 7, 12, 14], "cannot": 12, "care": [3, 6], "cd": 7, "cell": [1, 12], "cellmap": [6, 12, 13], "cellmap_schema": [0, 9, 10, 11, 14], "cellmap_segmentation_challeng": [7, 8], "cellmapdataload": 6, "cellmaplosswrapp": [1, 6], "cellular": 12, "center": 3, "certain": 12, "chanel": [1, 4], "chang": [12, 13], "channel": [1, 3, 4], "checkpoint": [1, 3, 5, 7], "choos": 7, "chosen": [6, 12], "chunk": [0, 6, 14], "clariti": 7, "class": [0, 1, 3, 4, 5, 6, 7, 12, 14], "classmethod": 6, "cli": [1, 7, 8], "client": 12, "clone": 13, "cloud": [0, 12, 14], "cnnencod": [1, 3], "coarsen": 12, "coarser": 12, "code": [12, 13], "coicind": 12, "coin": 12, "collabor": 12, "collect": 12, "com": [7, 13], "combin": [1, 4], "combined_scor": 1, "come": [0, 12, 14], "command": [0, 7, 14], "common": 12, "commun": 12, "compactli": 12, "complet": 12, "compli": [0, 12, 14], "complic": 12, "compress": 12, "compressor": [0, 14], "compris": 12, "comput": [1, 3, 4, 6], "config": [1, 3, 5], "config_path": [1, 5], "configur": [1, 5], "confirm": [0, 14], "connect": 3, "consist": 12, "constraint": 12, "construct": [1, 3, 5], "constructor": [1, 5], "consum": [0, 12, 14], "contain": [1, 5, 6, 7, 12], "content": 8, "contigu": 12, "continu": 12, "contribut": 7, "conv": 3, "conv3drelu": [1, 3], "conveni": [7, 12], "convent": [0, 12, 14], "convention": 12, "convert": [3, 7, 12], "convolut": 3, "copi": [6, 12], "copy_stor": [1, 6], "core": 6, "corner": 12, "corpuscl": 12, "correct": [7, 12], "correctli": [0, 12, 14], "correspond": [1, 7], "cosem": [0, 10, 14], "cost": 12, "could": [6, 12], "count": 6, "cover": 12, "creat": [6, 7, 12], "crop": [1, 3, 7, 8], "crop_path": 6, "croprow": [1, 6], "csc": 7, "csv": [1, 5, 6], "csv_path": 6, "cuda": 6, "curl": 7, "current": 12, "data": [0, 1, 3, 4, 5, 6, 12, 14], "data_d": [0, 14], "dataclass": 6, "dataload": [1, 5, 8], "datapath": 6, "datapath_prefix": 6, "dataset": [0, 1, 4, 5, 6, 14], "datasplit": [1, 5, 8], "datasplit_path": [1, 5, 6], "date": 12, "de": [1, 5], "decid": 12, "decis": 12, "declar": 12, "decoderblock": [1, 3], "decodercup": [1, 3], "deem": 12, "default": [1, 3, 4, 5, 6, 7], "defin": [0, 1, 3, 5, 6, 12, 14], "denot": 12, "depend": [7, 12, 13], "depict": 12, "deriv": 12, "describ": 12, "design": [7, 12], "dest": [6, 7], "dest_stor": 6, "detail": 12, "develop": [0, 12, 14], "devic": 6, "dice": 1, "dice_scor": 1, "dict": [1, 4, 6], "dictionari": [1, 4, 5, 6], "did": [0, 12, 14], "differ": 12, "dim": 3, "dimens": [0, 3, 12, 14], "dimension_ord": [0, 14], "dimension_separ": [0, 14], "directli": 12, "directori": [1, 3, 7, 12, 13], "disk": [0, 14], "displai": 12, "disrupt": 12, "distanc": [1, 12], "distinct": 12, "distinguish": 12, "distribut": 12, "divid": 12, "do": [0, 6, 7, 12, 14], "document": [1, 5, 7, 12, 13], "doe": [1, 5, 12], "doubleconv": [1, 3], "down": [1, 3], "downsampl": 3, "downscal": 12, "dry_run": 6, "dtype": [0, 14], "dure": 12, "e": [7, 12], "each": [1, 4, 5, 6, 7, 12], "earli": 12, "earlier": [0, 14], "easi": 7, "edit": 7, "effort": 12, "egment": 12, "either": [6, 7], "electron": 12, "ellular": 12, "em": [0, 6, 7, 12, 14], "em_source_path": 6, "em_source_root": 6, "em_url": [1, 6], "embed": [1, 3], "emit": 12, "encod": [1, 3], "end": [1, 7, 12], "end1": [1, 4], "end2": [1, 4], "endo": 1, "enorm": 12, "ensur": 12, "entail": 12, "entir": [1, 4], "epoch": [1, 5, 6], "equal": 12, "er": [1, 5], "er_palm": 12, "era": 12, "error": [0, 14], "especi": 12, "essenti": 12, "estim": 12, "etc": 12, "evalu": [7, 8], "everi": [3, 6, 12], "exampl": [1, 4, 6, 7, 12], "except": 7, "exclud": [0, 14], "exist": [1, 3, 5, 6, 7, 12], "explain": 12, "express": 12, "extend": 12, "extens": 7, "f": [0, 14], "face": 12, "factor": 12, "fail": [0, 14], "fals": [1, 3, 6], "far": 12, "fastest": 7, "featur": [3, 12], "feel": 12, "fetch": [6, 7], "fetch_data": [1, 8], "fetch_manifest": [1, 6], "few": 12, "fib": [6, 12], "fibsem": [0, 6, 12, 14], "figur": 6, "figures_save_path": 6, "file": [0, 1, 5, 6, 7, 12, 14], "filenam": [1, 7], "filesystem": 7, "fill_valu": [0, 14], "filter": [0, 14], "find": [6, 12], "fine": 12, "first": [7, 12], "flag": 7, "flexibl": 7, "flip": [0, 14], "float": [1, 4, 6], "fluent": 12, "fluoresc": 12, "folder": 7, "follow": [0, 1, 7, 12, 14], "foo": [0, 14], "footprint": 12, "forc": [6, 12], "force_all_class": 6, "form": [1, 4, 12], "formal": [0, 14], "format": [0, 1, 4, 7, 14], "former": [3, 6], "forward": [1, 3, 6], "found": [6, 12], "freedom": [0, 14], "from": [0, 1, 3, 4, 5, 6, 7, 12, 14], "from_arrai": [0, 14], "from_csv_row": [1, 6], "front": 12, "function": [3, 4, 5, 6, 7, 12], "further": 12, "futur": 12, "g": 12, "gener": [1, 5, 6, 7, 12], "generos": 12, "geometr": 1, "get": 6, "get_3dreg_config": [1, 3], "get_array_object": [1, 6], "get_chunk_kei": [1, 6], "get_csv_str": [1, 6], "get_dataload": [1, 6], "get_dataset_count": [1, 6], "get_fibsem_path": [1, 6], "get_group_object": [1, 6], "get_output_shap": [1, 4, 8], "get_store_url": [1, 6], "get_url": [1, 6], "git": [7, 13], "github": [7, 12, 13], "give": [0, 12, 14], "given": [1, 3, 4, 6], "goal": 12, "googl": 12, "grid": 12, "ground": 1, "ground_truth": 1, "groundtruth": [6, 7], "group": [0, 6, 12, 14], "group_model": [0, 14], "groupmetadata": [0, 14], "grown": 12, "gt": [0, 12, 14], "gt_url": [1, 6], "guid": [0, 14], "ha": 12, "hand": 12, "happen": 12, "hausdorff_distance_max": 1, "haussdorf": 1, "haussdorf_dist": 1, "have": [7, 12], "hela": 12, "help": 7, "here": [0, 7, 12, 14], "hidden_st": 3, "hierachi": 12, "hierarchi": [7, 12], "highest": 12, "histor": 12, "histori": 12, "home": 12, "hook": [3, 6], "host": 12, "hostedtoolcach": 6, "how": [0, 7, 14], "howev": 12, "http": [3, 13], "human": 12, "hwio": 3, "hyperparamet": [1, 5], "i": [0, 1, 3, 4, 5, 6, 7, 14], "i8": [0, 14], "icroscopi": 12, "id": [1, 6, 7], "identifi": 12, "ignor": [1, 3, 5, 6], "imag": [0, 3, 6, 14], "imageri": 12, "img_siz": 3, "immut": 12, "impair": 12, "implement": [3, 12], "import": [0, 14], "improv": 7, "in_channel": 3, "in_dataset": [1, 4], "includ": [1, 4, 5, 6, 12], "independ": [1, 5], "index": 7, "indic": [0, 1, 4, 12, 14], "individu": 12, "induc": 12, "inf": 1, "info": 6, "inform": [1, 5, 7, 12], "initi": [1, 3, 5, 6], "inner_arrai": 6, "input": [0, 1, 3, 4, 5, 6, 14], "input_array_info": [1, 5, 6], "input_block_shap": [1, 4], "input_id": 3, "input_nc": 3, "input_shap": [1, 4], "insid": 12, "instal": [7, 13], "instanc": [1, 3, 6, 7, 12], "instance_class": 1, "instancenorm": 3, "instancenorm2d": 3, "instancenorm3d": 3, "instead": [3, 6, 12], "institut": 12, "instruct": 7, "int": [1, 3, 4, 6], "intend": 12, "inter": 12, "interact": [7, 12], "interest": [1, 4, 12], "intern": [3, 6, 12], "intersect": 1, "introduc": 12, "invent": 12, "involv": 12, "invovl": 6, "iou": 1, "issu": [0, 14], "iter": [1, 5, 6], "iterations_per_epoch": [1, 5, 6], "its": 12, "janelia": [0, 6, 7, 12, 13, 14], "jpeg": 12, "jpg": 12, "jrc": 12, "jrc_cos7": 12, "jrc_dauer": 12, "jrc_hela": [0, 12, 14], "jrc_macrophag": 12, "jrc_mu": 12, "json": [1, 12], "just": 6, "keep": 12, "kei": [6, 12], "kept": 12, "kernel_s": 3, "keyword": [1, 5], "known": 12, "kwarg": [3, 6], "l": 7, "label": [1, 4, 6, 7, 12], "label1": 1, "label2": 1, "label3": 1, "label_nam": [1, 7], "label_scor": 1, "larg": [0, 1, 4, 12, 14], "larger": 12, "largest": 12, "larva": 12, "latest": [1, 3, 5], "latter": [3, 6], "layer": 3, "ld": 1, "learn": [1, 5, 12], "learning_r": [1, 5], "least": [6, 12], "lection": 12, "led": 12, "len": 1, "less": 12, "level": 12, "lib": 6, "librari": [0, 14], "light": 12, "like": [0, 6, 12, 14], "limit": 12, "line": [0, 7, 14], "linear": 3, "link": 12, "list": [1, 4, 5, 6, 7, 12], "lm": 12, "lm_488": 12, "load": [1, 3, 5, 6, 12], "load_best_v": [1, 3], "load_latest": [1, 3], "load_model": [1, 5], "local": [0, 7, 12, 13, 14], "locat": [0, 12, 14], "log": [1, 3, 5, 6, 7], "logdir": [1, 5, 7], "logs_save_path": [1, 3, 5], "long": 6, "longer": 12, "look": 12, "loss": [1, 7, 8], "loss_fn": 6, "lossi": 12, "lot": 12, "low_is_best": 3, "lower": 3, "lt": [0, 12, 14], "lyso": 1, "m": 12, "machin": 12, "mai": [1, 5, 6, 7, 12], "main": [12, 13], "maintain": 12, "make": [6, 7, 12, 13], "make_datasplit_csv": [1, 6], "mamba": 7, "manag": 13, "mani": 12, "manifest": 6, "map": [6, 12], "massiv": 12, "match": [1, 3, 4, 7], "matter": 12, "max_raw": [1, 4], "maximum": [1, 4], "md": [1, 5, 7], "mean": [1, 12], "member": [0, 14], "mere": 12, "mesh": 12, "messag": [0, 14], "metadata": [0, 14], "metamorphos": 12, "method": [0, 12, 14], "metric": 7, "micro": 7, "micromamba": 7, "microscopi": 12, "mid_channel": 3, "might": 12, "migrat": 12, "min_raw": [1, 4], "minimum": [1, 4], "mirror": [1, 5, 6], "mito": [1, 6], "mito_pr": 12, "mito_seg": 12, "mitochondria": 12, "mkdoc": 13, "mlp": [1, 3], "modal": 12, "mode": 7, "model": [0, 1, 4, 5, 8, 12, 14], "model_dump": [0, 14], "model_kwarg": [1, 5], "model_load": [1, 7, 8], "model_nam": [1, 5], "model_save_path": [1, 3, 5], "model_to_load": [1, 5], "modif": 6, "modul": [4, 5, 7, 8], "monitor": [1, 5, 7], "more": [1, 5, 7], "motiv": 12, "mous": 12, "move": 12, "mt": 1, "much": [0, 14], "mulitscal": [0, 14], "multi": [0, 12, 14], "multipl": [1, 4], "multiscal": [0, 10, 11, 14], "multscal": 12, "must": [6, 12], "n": 7, "n5": [7, 12], "n_block": 3, "n_channel": 3, "n_class": 3, "n_downsampl": 3, "name": [0, 1, 4, 5, 6, 7, 14], "navig": 13, "ndarrai": 1, "ndim": 3, "nearest": 12, "need": [0, 1, 3, 5, 6, 7, 12, 14], "needlessli": 12, "nesteddirectorystor": [0, 14], "net": 3, "neuroglanc": [7, 12], "neuroglancer_n5": [0, 11, 14], "never": 12, "new": [7, 12], "newer": 12, "ngf": 3, "ngff": 12, "nm": [0, 7, 14], "nn": [1, 3, 4, 6], "node": 6, "non": [3, 12], "none": [0, 1, 3, 4, 5, 6, 14], "norm_lay": 3, "normal": [1, 3], "normalized_haussdorf_dist": 1, "note": [0, 7, 12, 14], "novo": [1, 5], "np": [0, 1, 14], "np2th": [1, 3], "nuc": [1, 4, 5, 6], "num_voxel": 1, "number": [1, 3, 5, 6, 7, 12], "numpi": [0, 1, 7, 12, 14], "o": [0, 1, 4, 12, 14], "object": [3, 6, 7, 12], "obviou": 12, "often": 12, "oihw": 3, "old": 12, "older": 12, "om": 12, "onc": [7, 12], "one": [3, 6, 7, 12], "onli": [6, 12], "onlin": 7, "open": [0, 12, 14], "openorganel": 12, "oper": [0, 12, 14], "opt": 6, "optim": [1, 5], "option": [1, 4, 5, 6, 7], "order": [0, 14], "org": 3, "organ": [0, 12, 14], "organel": 12, "origin": [3, 12], "orthogon": [1, 4], "other": [1, 5, 12], "otherwis": [6, 7], "our": [0, 12, 14], "out": [0, 12, 14], "out_channel": 3, "out_dataset": [1, 4], "outconv": [1, 3], "outer_arrai": 6, "output": [1, 3, 4, 6], "output_nc": 3, "over": [1, 6], "overall_scor": 1, "overhaul": 12, "overlap": 12, "overridden": [3, 6], "overwrit": [1, 7], "own": 12, "pacinian": 12, "pacininan": 12, "packag": [0, 7, 8, 13, 14], "pad": 3, "padding_typ": 3, "page": 7, "paper": [3, 12], "parallel": 12, "param": 3, "paramet": [0, 1, 3, 4, 5, 6, 12, 14], "paramt": [0, 14], "parlanc": 12, "pars": 12, "part": [3, 12], "parti": 12, "partit": 12, "partition_copy_stor": [1, 6], "pass": [0, 1, 3, 5, 6, 14], "path": [0, 1, 3, 4, 5, 6, 7, 12, 13, 14], "pathlik": [1, 4], "pdf": 3, "per": [1, 4, 5, 6, 7], "perform": [0, 3, 6, 14], "perox": 1, "physic": 12, "piec": 12, "pip": [0, 7, 14], "pixelresolut": [0, 12, 14], "place": 3, "plan": 12, "plane": [1, 4], "platform": 12, "pm": 7, "poetri": 13, "pool": 6, "portal": [7, 12], "possibli": 3, "postprocess": [7, 8], "potenti": 12, "pre": [1, 5], "precomput": 12, "pred": 1, "pred_label": 1, "pred_label_path": 1, "pred_volume_path": 1, "predict": [5, 8, 12], "predict_2d": 7, "predict_3d": 7, "predict_ortho_plan": [1, 4, 8], "prefix": [6, 12], "present": [0, 6, 14], "pressur": 12, "preview": 13, "previou": 12, "primari": 12, "principl": 12, "print": [0, 14], "probabl": 6, "problem": [0, 12, 14], "produc": [0, 12, 14], "product": 12, "program": 12, "progress": [1, 5, 7], "projct": 12, "project": [0, 12, 14], "proport": [1, 5], "provid": [0, 1, 5, 6, 7, 12, 14], "pth": [1, 5, 7], "public": 12, "publish": 12, "pull": 13, "purpos": 12, "put": [0, 14], "py": 7, "pydant": [0, 14], "pyramid": 12, "pytest": 13, "python": [0, 1, 5, 6, 7, 12, 14], "python3": 6, "pytorch": [1, 5], "r": 7, "rais": [0, 14], "ran": 12, "randint": 1, "random": [1, 5, 12], "random_se": [1, 5], "randomli": 6, "rang": [0, 1, 6, 14], "rarer": 12, "rate": [1, 5], "raw": [1, 4, 6, 12], "raw_nam": 6, "read": 12, "read_group": [1, 6], "readabl": 12, "readm": [1, 5, 7], "reason": 12, "recip": [3, 6], "recommend": 7, "recon": 6, "reconstruct": 6, "redirect": 12, "reflect": [1, 3, 5], "region": [1, 4, 6, 12], "regist": [3, 6], "registrationhead": [1, 3], "rel": [0, 6, 12, 14], "relu": 3, "remov": 12, "renam": 12, "render": 13, "replic": 3, "repo": 7, "repositori": [12, 13], "repres": [6, 12], "reproduc": [1, 5], "request": [6, 13], "requir": [1, 7, 12], "resblock": 3, "research": [0, 12, 14], "reshap": [0, 14], "resnet": [1, 8], "resnet2d": [1, 3], "resnet3d": [1, 3], "resnetblock2d": [1, 3], "resnetblock3d": [1, 3], "resolv": 6, "resolve_em_url": [1, 6], "resourc": 12, "respect": [6, 7, 12], "respresent": 12, "result": [0, 1, 6, 7, 12, 14], "result_fil": 1, "retriev": 7, "return": [1, 3, 4, 5, 6], "rganel": 12, "roi": [1, 4], "root": 12, "rotat": [1, 5, 6], "row": 6, "run": [1, 3, 5, 6, 7, 13], "s0": [0, 12, 14], "s1": [0, 12, 14], "s2": 12, "s3": [0, 14], "saalfeldlab": 12, "safe": 12, "same": [1, 4, 5, 7, 12], "sampl": [7, 12], "satisfi": 12, "save": [1, 4, 5, 6, 7, 12], "save_numpy_binary_to_zarr": [1, 7], "save_numpy_class_arrays_to_zarr": [1, 8], "save_numpy_class_labels_to_zarr": [1, 8], "save_numpy_labels_to_zarr": [1, 7], "save_path": 1, "save_result_fig": [1, 6], "scalar": 12, "scale": [0, 1, 5, 6, 7, 12, 14], "scene": 12, "schema": [7, 13], "scheme": 12, "score": [1, 3], "score_inst": [1, 8], "score_label": [1, 8], "score_semant": [1, 8], "score_submiss": [1, 8], "score_volum": [1, 8], "screenshot": 12, "script": [1, 5, 7], "scriptmodul": [3, 6], "search": [3, 6, 7], "search_path": [3, 6], "second": 12, "section": 12, "see": [0, 1, 5, 7, 12, 14], "seed": [1, 5], "segment": [1, 6, 12], "select": 12, "self": 6, "sem": [6, 12], "semant": [1, 12], "separ": [1, 4, 12], "sequenc": [1, 4, 6, 12], "sequenti": 3, "serv": 13, "servic": 12, "set": [1, 5, 6, 12], "sever": 12, "sh": 7, "shape": [0, 1, 3, 4, 5, 6, 7, 12, 14], "share": [3, 6, 12], "shell": 7, "ship": [0, 14], "short": 12, "should": [1, 3, 5, 6, 7, 12], "sign": 7, "silent": [1, 3, 5, 6], "similar": 12, "simpl": 12, "simpli": [7, 12], "sinc": [3, 6], "singl": [1, 4, 7, 12], "site": 6, "size": [1, 5, 6, 12], "skip": 3, "skip_channel": 3, "slice": [1, 4, 6], "small": [0, 14], "smaller": 12, "smooth": 12, "so": [0, 12, 14], "softwar": 12, "solv": 12, "some": 12, "sourc": [1, 3, 4, 5, 6, 12], "source_stor": 6, "space": 12, "spatial": [1, 3, 5, 6, 12], "spatial_transform": [1, 5, 6], "special": 12, "specif": [0, 12, 14], "specifi": [1, 4, 5, 6, 7, 12], "specimen": 12, "split": [1, 4, 5, 6], "src": 7, "stai": 12, "standard": [3, 12], "start": 12, "start1": [1, 4], "start2": [1, 4], "state": [3, 6], "still": 12, "storag": [0, 6, 12, 14], "store": [0, 6, 12, 14], "str": [1, 3, 4, 5, 6], "strategi": 12, "strict": 12, "stride": 3, "string": [1, 4, 5, 6], "structur": [0, 1, 12, 14], "style": 12, "subclass": [3, 6], "submiss": [1, 7], "submission_path": [1, 7], "submit": 13, "submodul": 8, "subpackag": 8, "subsampl": 12, "subsequ": 12, "subset_to_slic": [1, 6], "succe": [0, 14], "success": 12, "suffix": 12, "summari": [0, 14], "support": [0, 6, 12, 14], "sure": 7, "swish": [1, 3], "system": 12, "t": 12, "take": [3, 6, 12], "taken": 12, "target": [1, 5, 6, 12], "target_array_info": [1, 5, 6], "tb": [0, 12, 14], "team": [0, 12, 14], "techniqu": 12, "technologi": 12, "tem": 12, "tensor": 6, "tensorboard": [1, 3, 5, 7], "terabyt": [0, 14], "termin": [1, 5, 7], "test": [0, 1, 13, 14], "test_volum": 1, "test_volume_nam": [1, 7], "text": [0, 14], "than": [0, 12, 14], "thei": [0, 1, 4, 7, 12, 14], "them": [3, 6, 7, 12], "thi": [0, 1, 3, 5, 6, 7, 12, 14], "third": 12, "thoroughli": 7, "those": [0, 14], "threadpoolexecutor": 6, "threshold": 12, "through": 7, "thu": 12, "thumbnail": 12, "time": [3, 12], "tissu": 12, "tmp": [0, 14], "to_zarr": [0, 14], "todo": 7, "togeth": 12, "toi": [0, 14], "too": [0, 14], "tool": [0, 6, 12, 14], "top": [7, 12], "torch": [1, 3, 4, 6], "track": 12, "tracker": [0, 14], "train": [6, 8], "train_2d": 7, "train_3d": 7, "transform": [1, 3, 5, 6, 12], "transit": 12, "translat": 12, "transpos": [1, 5, 6], "transpose_for_scor": [1, 3], "trasposit": 6, "trilinear": 3, "true": [3, 6, 12], "truth": 1, "truth_label": 1, "truth_path": 1, "try": 12, "tupl": [1, 4, 6], "twice": 12, "two": 12, "type": [1, 3, 4, 5, 6, 12], "typic": 12, "u": [0, 3, 12, 14], "uint16": [0, 12, 14], "uint8": [6, 12], "ultim": 12, "unchang": 12, "under": 12, "underscor": 12, "understand": 12, "unet_2d": [1, 3], "unet_3d": [1, 3], "unet_model_2d": [1, 7, 8], "unet_model_3d": [1, 8], "union": 1, "uniqu": [7, 12], "unit": [0, 12, 14], "until": 12, "unzip": 1, "unzip_fil": [1, 8], "up": [1, 3], "upsampl": 3, "uri": 6, "url": [0, 6, 12, 14], "us": [0, 1, 4, 5, 6, 7, 12, 13, 14], "usag": [1, 6], "use_batchnorm": 3, "use_bia": 3, "use_dropout": 3, "user": 12, "util": [1, 7, 8], "v": 3, "val": [1, 5, 6], "valid": [1, 3, 5, 6, 7, 12], "validation_prob": [1, 5, 6], "valu": [1, 4, 6, 12], "varieti": 12, "ve": 1, "veri": 12, "version": 12, "vi": 3, "via": 12, "view": [7, 12], "viewabl": 7, "vim": 1, "visual": [1, 8, 12], "visul": 12, "vit": 3, "vitnet": [1, 5, 8], "vitvnet": [1, 3], "volum": [1, 7, 12], "voxel": [1, 7], "wa": 12, "wai": [7, 12], "want": [7, 12], "wasn": 12, "we": [0, 3, 7, 12, 14], "web": 12, "weight": [3, 7], "welcom": 7, "well": [1, 5, 7, 12], "were": 12, "what": [0, 14], "when": [0, 6, 12, 14], "where": [0, 12, 14], "whereev": 12, "whether": [0, 3, 14], "which": [0, 1, 5, 6, 7, 12, 14], "while": [3, 6, 12], "wide": [0, 12, 14], "window": 12, "within": [3, 6, 12], "word": 12, "work": [0, 12, 14], "worker": 6, "workflow": 12, "would": [0, 12, 14], "write": [0, 6, 12, 14], "written": 6, "x": [0, 1, 3, 4, 5, 6, 14], "x1": 3, "x2": 3, "x64": 6, "y": [0, 1, 4, 5, 6, 7, 14], "yarl": 6, "year": 12, "yet": 12, "you": [0, 7, 12, 14], "your": 13, "z": [1, 4, 6], "zarr": [0, 1, 6, 7, 12, 14], "zarr_vers": [0, 14], "zero": 3, "zip": [1, 7], "zip_path": 1, "zoom": 12}, "titles": ["CellMap Schemas", "cellmap_segmentation_challenge package", "cellmap_segmentation_challenge.cli package", "cellmap_segmentation_challenge.models package", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils package", "CellMap Segmentation Challenge", "src", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas"], "titleterms": {"ad": 13, "align": 12, "an": [0, 14], "api": 7, "arrai": 12, "cellmap": [0, 7, 14], "cellmap_segmentation_challeng": [1, 2, 3, 4, 5, 6], "challeng": 7, "check": [0, 14], "chunk": 12, "cli": [0, 2, 14], "clone": 7, "contain": [0, 14], "content": [1, 2, 3, 6, 7], "contribut": [0, 14], "coordin": 12, "cosem": 12, "creat": [0, 14], "crop": 6, "data": 7, "dataload": 6, "dataset": 12, "datasplit": [2, 6], "download": 7, "downsampl": 12, "environ": 7, "evalu": [1, 2], "exampl": [0, 14], "fetch_data": [2, 6], "final": 7, "format": 12, "get": 7, "hierarchi": [0, 14], "i": 12, "imag": 12, "inspect": [0, 14], "instal": [0, 14], "layout": 12, "link": 7, "loss": 6, "metadata": 12, "model": [3, 7], "model_load": 3, "modul": [1, 2, 3, 6], "multipl": 12, "multiresolut": 12, "multiscal": 12, "n5": [0, 14], "name": 12, "neuroglanc": [0, 14], "outlin": 12, "packag": [1, 2, 3, 6], "post": 7, "postprocess": 1, "predict": [1, 2, 4, 7], "process": 7, "project": 13, "repositori": 7, "resnet": 3, "s3": 12, "schema": [0, 14], "segment": 7, "set": 7, "src": 8, "start": 7, "structur": 7, "submit": 7, "submodul": [1, 2, 3, 6], "subpackag": 1, "test": 7, "thi": 13, "train": [1, 2, 5, 7], "unet_model_2d": 3, "unet_model_3d": 3, "up": 7, "util": 6, "valid": [0, 14], "visual": 6, "vitnet": 3, "what": 12, "your": 7}})