Search.setIndex({"alltitles": {"Acknowledgements": [[10, "acknowledgements"]], "Adding to this project": [[15, null]], "Aliases": [[0, "aliases"]], "Annotation Classes": [[0, null]], "Automatic Submission Packaging": [[17, "automatic-submission-packaging"]], "Available Data": [[1, null]], "COSEM": [[14, "cosem"]], "CellMap Schemas": [[2, null], [16, null]], "CellMap Segmentation Challenge": [[10, null]], "Chunked array format": [[14, "chunked-array-format"]], "Class Categories": [[0, "class-categories"]], "Clone the repository": [[10, "clone-the-repository"]], "Conclusion": [[7, "conclusion"], [11, "conclusion"]], "Connected Components for Instance Segmentation": [[17, "connected-components-for-instance-segmentation"]], "Contributing": [[2, "contributing"], [16, "contributing"]], "Convenience functions for manual conversion and packaging": [[17, "convenience-functions-for-manual-conversion-and-packaging"]], "Creating a CellMap Data PyTorch Dataloader": [[7, null]], "Data:": [[10, null]], "Dataset names": [[14, "dataset-names"]], "Datasets on S3": [[14, "datasets-on-s3"]], "Datasplit Generation": [[18, "datasplit-generation"]], "Detailed Class Descriptions": [[0, "detailed-class-descriptions"]], "Download the data": [[10, "download-the-data"]], "Downsampling and coordinates": [[14, "downsampling-and-coordinates"]], "Evaluation": [[8, null]], "Evaluation Resampling": [[9, null]], "Evaluation:": [[10, null]], "Example Usage": [[7, "example-usage"]], "Example: creating an N5 hierarchy for Neuroglancer": [[2, "example-creating-an-n5-hierarchy-for-neuroglancer"], [16, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[2, "example-validating-a-container-with-the-cli"], [16, "example-validating-a-container-with-the-cli"]], "Examples": [[0, "examples"], [19, "examples"]], "Examples and Usage Instructions": [[18, "examples-and-usage-instructions"]], "Function": [[9, "function"]], "Function Definitions": [[11, "function-definitions"]], "Getting started": [[10, "getting-started"]], "Image layout": [[14, "image-layout"]], "Installation": [[2, "installation"], [16, "installation"]], "Instance Segmentations": [[8, "instance-segmentations"]], "Issues": [[10, "issues"]], "Links": [[10, "links"]], "Loading a Pretrained Model Checkpoint": [[11, null]], "Model Loading": [[18, "model-loading"]], "Module contents": [[3, "module-cellmap_segmentation_challenge"], [4, "module-cellmap_segmentation_challenge.cli"], [5, "module-cellmap_segmentation_challenge.models"], [6, "module-cellmap_segmentation_challenge.utils"]], "Multiple image alignments": [[14, "multiple-image-alignments"]], "Multiresolution image layout": [[14, "multiresolution-image-layout"]], "Multiscale Structure": [[0, "multiscale-structure"]], "Multiscale image metadata": [[14, "multiscale-image-metadata"]], "Notes": [[7, "notes"], [11, "notes"]], "Outline": [[14, null]], "Overview": [[7, "overview"], [11, "overview"]], "Post-process model predictions": [[10, "post-process-model-predictions"]], "Predict on test data": [[10, "predict-on-test-data"]], "Prerequisites": [[7, "prerequisites"], [11, "prerequisites"]], "Purpose": [[9, "purpose"]], "Repository structure": [[10, "repository-structure"]], "Resampling": [[8, "resampling"]], "Resampling Process": [[9, "resampling-process"]], "S3 layout": [[14, "s3-layout"]], "Semantic Segmentations": [[8, "semantic-segmentations"]], "Set up your environment": [[10, "set-up-your-environment"]], "Structure of the Submission File": [[17, "structure-of-the-submission-file"]], "Submission Data Format": [[17, null]], "Submit your final predictions": [[10, "submit-your-final-predictions"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "Subpackages": [[3, "subpackages"]], "Table of Contents": [[0, "table-of-contents"], [10, "table-of-contents"]], "Train a model": [[10, "train-a-model"]], "Train:": [[10, null]], "Training": [[18, null]], "Training configuration": [[18, "training-configuration"]], "Training from S3 Data": [[18, "training-from-s3-data"]], "Troubleshooting": [[7, "troubleshooting"], [11, "troubleshooting"]], "Tutorial: Step-by-Step": [[11, "tutorial-step-by-step"]], "Usage": [[19, "usage"]], "Validation Time/Batch Limit Setting": [[18, "validation-time-batch-limit-setting"]], "Visualization": [[19, null]], "Visualization:": [[10, null]], "Visualize data and predictions": [[10, "visualize-data-and-predictions"]], "What is a dataset": [[14, "what-is-a-dataset"]], "cellmap-schemas check": [[2, "cellmap-schemas-check"], [16, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[2, "cellmap-schemas-inspect"], [16, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge package": [[3, null]], "cellmap_segmentation_challenge.cli package": [[4, null]], "cellmap_segmentation_challenge.cli.datasplit module": [[4, "module-cellmap_segmentation_challenge.cli.datasplit"]], "cellmap_segmentation_challenge.cli.evaluate module": [[4, "module-cellmap_segmentation_challenge.cli.evaluate"]], "cellmap_segmentation_challenge.cli.fetch_data module": [[4, "module-cellmap_segmentation_challenge.cli.fetch_data"]], "cellmap_segmentation_challenge.cli.predict module": [[4, "module-cellmap_segmentation_challenge.cli.predict"]], "cellmap_segmentation_challenge.cli.process module": [[4, "module-cellmap_segmentation_challenge.cli.process"]], "cellmap_segmentation_challenge.cli.speedtest module": [[4, "module-cellmap_segmentation_challenge.cli.speedtest"]], "cellmap_segmentation_challenge.cli.train module": [[4, "module-cellmap_segmentation_challenge.cli.train"]], "cellmap_segmentation_challenge.cli.visualize module": [[4, "module-cellmap_segmentation_challenge.cli.visualize"]], "cellmap_segmentation_challenge.config module": [[3, "module-cellmap_segmentation_challenge.config"]], "cellmap_segmentation_challenge.evaluate module": [[3, "module-cellmap_segmentation_challenge.evaluate"]], "cellmap_segmentation_challenge.models package": [[5, null]], "cellmap_segmentation_challenge.models.model_load module": [[5, "module-cellmap_segmentation_challenge.models.model_load"]], "cellmap_segmentation_challenge.models.resnet module": [[5, "module-cellmap_segmentation_challenge.models.resnet"]], "cellmap_segmentation_challenge.models.unet_model_2D module": [[5, "module-cellmap_segmentation_challenge.models.unet_model_2D"]], "cellmap_segmentation_challenge.models.unet_model_3D module": [[5, "module-cellmap_segmentation_challenge.models.unet_model_3D"]], "cellmap_segmentation_challenge.models.vitnet module": [[5, "module-cellmap_segmentation_challenge.models.vitnet"]], "cellmap_segmentation_challenge.predict module": [[3, "module-cellmap_segmentation_challenge.predict"]], "cellmap_segmentation_challenge.process module": [[3, "module-cellmap_segmentation_challenge.process"]], "cellmap_segmentation_challenge.train module": [[3, "module-cellmap_segmentation_challenge.train"]], "cellmap_segmentation_challenge.utils package": [[6, null]], "cellmap_segmentation_challenge.utils.crops module": [[6, "module-cellmap_segmentation_challenge.utils.crops"]], "cellmap_segmentation_challenge.utils.dataloader module": [[6, "module-cellmap_segmentation_challenge.utils.dataloader"]], "cellmap_segmentation_challenge.utils.datasplit module": [[6, "module-cellmap_segmentation_challenge.utils.datasplit"]], "cellmap_segmentation_challenge.utils.fetch_data module": [[6, "module-cellmap_segmentation_challenge.utils.fetch_data"]], "cellmap_segmentation_challenge.utils.loss module": [[6, "module-cellmap_segmentation_challenge.utils.loss"]], "cellmap_segmentation_challenge.utils.security module": [[6, "module-cellmap_segmentation_challenge.utils.security"]], "cellmap_segmentation_challenge.visualize module": [[3, "module-cellmap_segmentation_challenge.visualize"]], "src": [[12, null]]}, "docnames": ["annotation_classes", "available_data", "cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.utils", "dataloader", "evaluation", "evaluation_resampling", "index", "load_model_weights", "modules", "scheme_docs/api/annotation", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index", "submission_data_format", "training", "visualization"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["annotation_classes.rst", "available_data.rst", "cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.utils.rst", "dataloader.rst", "evaluation.rst", "evaluation_resampling.rst", "index.rst", "load_model_weights.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md", "submission_data_format.rst", "training.rst", "visualization.rst"], "indexentries": {"add_layers() (in module cellmap_segmentation_challenge.visualize)": [[3, "cellmap_segmentation_challenge.visualize.add_layers", false]], "alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "all_res (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.all_res", false]], "analyze_script() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.analyze_script", false]], "analyze_script() (in module cellmap_segmentation_challenge.utils.security)": [[6, "cellmap_segmentation_challenge.utils.security.analyze_script", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[3, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.cli": [[4, "module-cellmap_segmentation_challenge.cli", false]], "cellmap_segmentation_challenge.cli.datasplit": [[4, "module-cellmap_segmentation_challenge.cli.datasplit", false]], "cellmap_segmentation_challenge.cli.evaluate": [[4, "module-cellmap_segmentation_challenge.cli.evaluate", false]], "cellmap_segmentation_challenge.cli.fetch_data": [[4, "module-cellmap_segmentation_challenge.cli.fetch_data", false]], "cellmap_segmentation_challenge.cli.predict": [[4, "module-cellmap_segmentation_challenge.cli.predict", false]], "cellmap_segmentation_challenge.cli.process": [[4, "module-cellmap_segmentation_challenge.cli.process", false]], "cellmap_segmentation_challenge.cli.speedtest": [[4, "module-cellmap_segmentation_challenge.cli.speedtest", false]], "cellmap_segmentation_challenge.cli.train": [[4, "module-cellmap_segmentation_challenge.cli.train", false]], "cellmap_segmentation_challenge.cli.visualize": [[4, "module-cellmap_segmentation_challenge.cli.visualize", false]], "cellmap_segmentation_challenge.config": [[3, "module-cellmap_segmentation_challenge.config", false]], "cellmap_segmentation_challenge.evaluate": [[3, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[5, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[5, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[5, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[5, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[5, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[5, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.predict": [[3, "module-cellmap_segmentation_challenge.predict", false]], "cellmap_segmentation_challenge.process": [[3, "module-cellmap_segmentation_challenge.process", false]], "cellmap_segmentation_challenge.train": [[3, "module-cellmap_segmentation_challenge.train", false]], "cellmap_segmentation_challenge.utils": [[6, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[6, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[6, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[6, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[6, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[6, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.security": [[6, "module-cellmap_segmentation_challenge.utils.security", false]], "cellmap_segmentation_challenge.visualize": [[3, "module-cellmap_segmentation_challenge.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.CellMapLossWrapper", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[6, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "class_label (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.class_label", false]], "class_label (cellmap_segmentation_challenge.utils.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow.class_label", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "combine_scores() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.combine_scores", false]], "config (class in cellmap_segmentation_challenge.utils.security)": [[6, "cellmap_segmentation_challenge.utils.security.Config", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "dataset (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.dataset", false]], "dataset (cellmap_segmentation_challenge.utils.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "download_file_with_progress() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.download_file_with_progress", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "fetch_crop_manifest() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.fetch_crop_manifest", false]], "fetch_crop_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_crop_manifest", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "fetch_test_crop_manifest() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.fetch_test_crop_manifest", false]], "fetch_test_crop_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_test_crop_manifest", false]], "fetch_zip_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.fetch_zip_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[5, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[5, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[5, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[5, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.cellmaplosswrapper method)": [[6, "cellmap_segmentation_challenge.utils.CellMapLossWrapper.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[6, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.testcroprow class method)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.from_csv_row", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.zipdatasetrow class method)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.from_csv_row", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.testcroprow class method)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_class_incl_ids() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_class_incl_ids", false]], "get_class_relations() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.get_class_relations", false]], "get_class_relations() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_class_relations", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.get_dataloader", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[6, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_dataset_name() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_name", false]], "get_formatted_fields() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_formatted_fields", false]], "get_layer() (in module cellmap_segmentation_challenge.visualize)": [[3, "cellmap_segmentation_challenge.visualize.get_layer", false]], "get_raw_path() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_raw_path", false]], "get_s3_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_s3_csv_string", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_test_crops() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.get_test_crops", false]], "get_test_crops() (in module cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.get_test_crops", false]], "get_tested_classes() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.get_tested_classes", false]], "get_tested_classes() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.get_tested_classes", false]], "get_zip_if_available() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.get_zip_if_available", false]], "gt_source (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_source", false]], "hausdorff_distance() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.hausdorff_distance", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "id (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.id", false]], "id (cellmap_segmentation_challenge.utils.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow.id", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "load_safe_config() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.load_safe_config", false]], "load_safe_config() (in module cellmap_segmentation_challenge.utils.security)": [[6, "cellmap_segmentation_challenge.utils.security.load_safe_config", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.make_datasplit_csv", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "make_s3_datasplit_csv() (in module cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.make_s3_datasplit_csv", false]], "make_s3_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[6, "cellmap_segmentation_challenge.utils.datasplit.make_s3_datasplit_csv", false]], "match_crop_space() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.match_crop_space", false]], "missing_volume_score() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.missing_volume_score", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[3, "module-cellmap_segmentation_challenge", false], [3, "module-cellmap_segmentation_challenge.config", false], [3, "module-cellmap_segmentation_challenge.evaluate", false], [3, "module-cellmap_segmentation_challenge.predict", false], [3, "module-cellmap_segmentation_challenge.process", false], [3, "module-cellmap_segmentation_challenge.train", false], [3, "module-cellmap_segmentation_challenge.visualize", false], [4, "module-cellmap_segmentation_challenge.cli", false], [4, "module-cellmap_segmentation_challenge.cli.datasplit", false], [4, "module-cellmap_segmentation_challenge.cli.evaluate", false], [4, "module-cellmap_segmentation_challenge.cli.fetch_data", false], [4, "module-cellmap_segmentation_challenge.cli.predict", false], [4, "module-cellmap_segmentation_challenge.cli.process", false], [4, "module-cellmap_segmentation_challenge.cli.speedtest", false], [4, "module-cellmap_segmentation_challenge.cli.train", false], [4, "module-cellmap_segmentation_challenge.cli.visualize", false], [5, "module-cellmap_segmentation_challenge.models", false], [5, "module-cellmap_segmentation_challenge.models.model_load", false], [5, "module-cellmap_segmentation_challenge.models.resnet", false], [5, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [5, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [5, "module-cellmap_segmentation_challenge.models.vitnet", false], [6, "module-cellmap_segmentation_challenge.utils", false], [6, "module-cellmap_segmentation_challenge.utils.crops", false], [6, "module-cellmap_segmentation_challenge.utils.dataloader", false], [6, "module-cellmap_segmentation_challenge.utils.datasplit", false], [6, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [6, "module-cellmap_segmentation_challenge.utils.loss", false], [6, "module-cellmap_segmentation_challenge.utils.security", false]], "name (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.name", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "package_submission() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.package_submission", false]], "package_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.package_submission", false]], "padding (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.padding", false]], "parse_s3_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.parse_s3_url", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.predict", false]], "predict() (in module cellmap_segmentation_challenge.predict)": [[3, "cellmap_segmentation_challenge.predict.predict", false]], "predict_orthoplanes() (in module cellmap_segmentation_challenge.predict)": [[3, "cellmap_segmentation_challenge.predict.predict_orthoplanes", false]], "process() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.process", false]], "process() (in module cellmap_segmentation_challenge.process)": [[3, "cellmap_segmentation_challenge.process.process", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "resize_array() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.resize_array", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[5, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.save_numpy_class_labels_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.score_submission", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "shape (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.shape", false]], "shape (cellmap_segmentation_challenge.utils.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow.shape", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[6, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "testcroprow (class in cellmap_segmentation_challenge.utils)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow", false]], "testcroprow (class in cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow", false]], "train() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.train", false]], "train() (in module cellmap_segmentation_challenge.train)": [[3, "cellmap_segmentation_challenge.train.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "translation (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.translation", false]], "translation (cellmap_segmentation_challenge.utils.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow.translation", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[5, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[5, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[5, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "url (cellmap_segmentation_challenge.utils.crops.zipdatasetrow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow.url", false]], "visualize() (in module cellmap_segmentation_challenge)": [[3, "cellmap_segmentation_challenge.visualize", false]], "visualize() (in module cellmap_segmentation_challenge.visualize)": [[3, "cellmap_segmentation_challenge.visualize.visualize", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[5, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]], "voxel_size (cellmap_segmentation_challenge.utils.crops.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.crops.TestCropRow.voxel_size", false]], "voxel_size (cellmap_segmentation_challenge.utils.testcroprow attribute)": [[6, "cellmap_segmentation_challenge.utils.TestCropRow.voxel_size", false]], "zip_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.zip_submission", false]], "zipdatasetrow (class in cellmap_segmentation_challenge.utils.crops)": [[6, "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow", false]]}, "objects": {"": [[3, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[4, 0, 0, "-", "cli"], [3, 0, 0, "-", "config"], [3, 0, 0, "-", "evaluate"], [5, 0, 0, "-", "models"], [3, 1, 1, "", "package_submission"], [3, 1, 1, "", "predict"], [3, 0, 0, "-", "predict"], [3, 1, 1, "", "process"], [3, 0, 0, "-", "process"], [3, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [3, 1, 1, "", "save_numpy_class_labels_to_zarr"], [3, 1, 1, "", "score_submission"], [3, 1, 1, "", "train"], [3, 0, 0, "-", "train"], [6, 0, 0, "-", "utils"], [3, 1, 1, "", "visualize"], [3, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.cli": [[4, 0, 0, "-", "datasplit"], [4, 0, 0, "-", "evaluate"], [4, 0, 0, "-", "fetch_data"], [4, 0, 0, "-", "predict"], [4, 0, 0, "-", "process"], [4, 0, 0, "-", "speedtest"], [4, 0, 0, "-", "train"], [4, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.evaluate": [[3, 1, 1, "", "combine_scores"], [3, 1, 1, "", "hausdorff_distance"], [3, 1, 1, "", "match_crop_space"], [3, 1, 1, "", "missing_volume_score"], [3, 1, 1, "", "package_submission"], [3, 1, 1, "", "resize_array"], [3, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [3, 1, 1, "", "save_numpy_class_labels_to_zarr"], [3, 1, 1, "", "score_instance"], [3, 1, 1, "", "score_label"], [3, 1, 1, "", "score_semantic"], [3, 1, 1, "", "score_submission"], [3, 1, 1, "", "score_volume"], [3, 1, 1, "", "unzip_file"], [3, 1, 1, "", "zip_submission"]], "cellmap_segmentation_challenge.models": [[5, 0, 0, "-", "model_load"], [5, 0, 0, "-", "resnet"], [5, 0, 0, "-", "unet_model_2D"], [5, 0, 0, "-", "unet_model_3D"], [5, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[5, 1, 1, "", "load_best_val"], [5, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[5, 2, 1, "", "ResNet"], [5, 2, 1, "", "Resnet2D"], [5, 2, 1, "", "Resnet3D"], [5, 2, 1, "", "ResnetBlock2D"], [5, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[5, 3, 1, "", "build_conv_block"], [5, 3, 1, "", "crop"], [5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[5, 3, 1, "", "build_conv_block"], [5, 3, 1, "", "crop"], [5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[5, 2, 1, "", "DoubleConv"], [5, 2, 1, "", "Down"], [5, 2, 1, "", "OutConv"], [5, 2, 1, "", "UNet_2D"], [5, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[5, 2, 1, "", "DoubleConv"], [5, 2, 1, "", "Down"], [5, 2, 1, "", "OutConv"], [5, 2, 1, "", "UNet_3D"], [5, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[5, 2, 1, "", "Attention"], [5, 2, 1, "", "Block"], [5, 2, 1, "", "CNNEncoder"], [5, 2, 1, "", "Conv3dReLU"], [5, 2, 1, "", "DecoderBlock"], [5, 2, 1, "", "DecoderCup"], [5, 2, 1, "", "DoubleConv"], [5, 2, 1, "", "Down"], [5, 2, 1, "", "Embeddings"], [5, 2, 1, "", "Encoder"], [5, 2, 1, "", "Mlp"], [5, 2, 1, "", "RegistrationHead"], [5, 2, 1, "", "Transformer"], [5, 2, 1, "", "ViTVNet"], [5, 1, 1, "", "get_3DReg_config"], [5, 1, 1, "", "np2th"], [5, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[5, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.predict": [[3, 1, 1, "", "predict"], [3, 1, 1, "", "predict_orthoplanes"]], "cellmap_segmentation_challenge.process": [[3, 1, 1, "", "process"]], "cellmap_segmentation_challenge.train": [[3, 1, 1, "", "train"]], "cellmap_segmentation_challenge.utils": [[6, 2, 1, "", "CellMapLossWrapper"], [6, 2, 1, "", "TestCropRow"], [6, 1, 1, "", "analyze_script"], [6, 0, 0, "-", "crops"], [6, 0, 0, "-", "dataloader"], [6, 0, 0, "-", "datasplit"], [6, 1, 1, "", "fetch_crop_manifest"], [6, 0, 0, "-", "fetch_data"], [6, 1, 1, "", "fetch_test_crop_manifest"], [6, 1, 1, "", "get_class_relations"], [6, 1, 1, "", "get_dataloader"], [6, 1, 1, "", "get_test_crops"], [6, 1, 1, "", "get_tested_classes"], [6, 1, 1, "", "load_safe_config"], [6, 0, 0, "-", "loss"], [6, 1, 1, "", "make_datasplit_csv"], [6, 1, 1, "", "make_s3_datasplit_csv"], [6, 0, 0, "-", "security"]], "cellmap_segmentation_challenge.utils.CellMapLossWrapper": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.TestCropRow": [[6, 4, 1, "", "class_label"], [6, 4, 1, "", "dataset"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "id"], [6, 4, 1, "", "shape"], [6, 4, 1, "", "translation"], [6, 4, 1, "", "voxel_size"]], "cellmap_segmentation_challenge.utils.crops": [[6, 2, 1, "", "CropRow"], [6, 2, 1, "", "TestCropRow"], [6, 2, 1, "", "ZipDatasetRow"], [6, 1, 1, "", "fetch_crop_manifest"], [6, 1, 1, "", "fetch_manifest"], [6, 1, 1, "", "fetch_test_crop_manifest"], [6, 1, 1, "", "fetch_zip_manifest"], [6, 1, 1, "", "get_test_crops"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[6, 4, 1, "", "alignment"], [6, 4, 1, "", "dataset"], [6, 4, 1, "", "em_url"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "gt_source"], [6, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.crops.TestCropRow": [[6, 4, 1, "", "class_label"], [6, 4, 1, "", "dataset"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "id"], [6, 4, 1, "", "shape"], [6, 4, 1, "", "translation"], [6, 4, 1, "", "voxel_size"]], "cellmap_segmentation_challenge.utils.crops.ZipDatasetRow": [[6, 4, 1, "", "all_res"], [6, 3, 1, "", "from_csv_row"], [6, 4, 1, "", "name"], [6, 4, 1, "", "padding"], [6, 4, 1, "", "url"]], "cellmap_segmentation_challenge.utils.dataloader": [[6, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[6, 1, 1, "", "get_class_incl_ids"], [6, 1, 1, "", "get_class_relations"], [6, 1, 1, "", "get_csv_string"], [6, 1, 1, "", "get_dataset_counts"], [6, 1, 1, "", "get_dataset_name"], [6, 1, 1, "", "get_formatted_fields"], [6, 1, 1, "", "get_raw_path"], [6, 1, 1, "", "get_s3_csv_string"], [6, 1, 1, "", "get_tested_classes"], [6, 1, 1, "", "make_datasplit_csv"], [6, 1, 1, "", "make_s3_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[6, 1, 1, "", "copy_store"], [6, 1, 1, "", "download_file_with_progress"], [6, 1, 1, "", "get_chunk_keys"], [6, 1, 1, "", "get_store_url"], [6, 1, 1, "", "get_zip_if_available"], [6, 1, 1, "", "parse_s3_url"], [6, 1, 1, "", "partition_copy_store"], [6, 1, 1, "", "read_group"], [6, 1, 1, "", "resolve_em_url"], [6, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[6, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.security": [[6, 2, 1, "", "Config"], [6, 1, 1, "", "analyze_script"], [6, 1, 1, "", "load_safe_config"]], "cellmap_segmentation_challenge.visualize": [[3, 1, 1, "", "add_layers"], [3, 1, 1, "", "get_layer"], [3, 1, 1, "", "visualize"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [3, 6, 9, 10, 11, 14, 17, 19], "0": [2, 3, 5, 6, 7, 8, 14, 16, 17, 18], "0001": [3, 7, 18], "01": 8, "03385": 5, "1": [1, 2, 3, 5, 6, 7, 8, 10, 16, 17, 18], "10": [1, 2, 3, 16], "1000": [3, 6, 7, 18], "10670": 17, "11": [10, 14], "1109": 3, "113": 19, "12": [3, 6], "128": [3, 5, 7, 10, 18], "14": 1, "15": 3, "1512": 5, "16": [2, 7, 14, 16], "180": [3, 6, 7, 18], "18tb": 10, "1994": 3, "1a": [10, 19], "2": [1, 2, 3, 5, 7, 14, 16, 17, 18], "2019": 14, "2024": 3, "23": 1, "234": [10, 19], "236": [10, 19], "2760": 17, "2d": [3, 6, 7, 10, 14, 18], "2d_resnet": [3, 18], "2d_unet": [3, 18], "2x2": 14, "3": [3, 5, 6, 7, 10, 18], "36": 10, "3d": [3, 6, 7, 10, 17, 18], "3d_resnet": [3, 18], "3d_unet": [3, 18], "4": [2, 3, 16, 17, 18], "42": [3, 18], "4f": 7, "5": [2, 3, 6, 7, 14, 16, 18], "5160": 17, "566": 3, "568": 3, "576361": 3, "5d": 3, "6": [5, 10], "6006": [10, 18], "64": 5, "7": 10, "8": [2, 3, 6, 7, 14, 16, 18], "8155": 3, "820mbp": 10, "9": 1, "A": [0, 3, 5, 6, 11, 14, 17, 18, 19], "And": [2, 16], "As": [10, 14], "At": 14, "But": [2, 14, 16], "By": [6, 11, 14], "For": [0, 2, 3, 6, 8, 10, 11, 14, 16, 17, 18, 19], "If": [3, 6, 7, 10, 11, 14, 18, 19], "In": [0, 2, 3, 14, 16], "It": [3, 7, 9], "No": 11, "OR": 3, "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19], "There": 10, "These": [0, 1, 7, 11, 17, 18], "To": [2, 10, 14, 16, 17, 18, 19], "With": [11, 14], "_": [3, 14, 18], "_loss": 6, "_size": 8, "_transform": 6, "_weightedloss": 6, "abbrevi": 14, "abl": [10, 14], "about": [14, 18], "abov": [0, 2, 10, 14, 16, 17], "access": [10, 14], "accord": [11, 14], "account": 10, "accur": 9, "accuraci": [3, 8], "acquir": 14, "acronym": 14, "across": [3, 8], "activ": [5, 10], "ad": 10, "adam": 7, "add": [3, 19], "add_lay": [3, 12, 19], "add_scalar": 11, "addit": [6, 10, 14], "addition": [0, 10, 11, 14, 17], "address": [2, 10, 14, 16], "adjac": 14, "adjust": [3, 7, 9, 17], "adopt": 14, "advanc": 10, "advent": 14, "aemmav": 10, "after": [3, 6, 10, 11, 15, 17, 18, 19], "afterward": [5, 6], "again": 19, "against": [2, 3, 16], "aggreg": 0, "aic_desmosom": 14, "aim": 14, "al": 3, "alia": 0, "alias": 10, "align": [3, 6, 7, 11], "all": [0, 3, 5, 6, 8, 10, 11, 14, 17, 18, 19], "all_r": [3, 6], "allow": [10, 11, 17, 18, 19], "along": [10, 14, 18], "alongsid": 17, "alreadi": [3, 10, 14, 17, 18], "also": [2, 9, 10, 11, 14, 16, 17, 18, 19], "altern": [0, 10, 14, 18], "although": [5, 6], "alwai": [6, 17, 19], "amazon": 14, "amount": 14, "an": [0, 3, 5, 6, 9, 10, 14, 17, 18, 19], "analysi": [0, 14], "analyz": [6, 11], "analyze_script": [3, 6], "angl": 6, "ani": [2, 3, 6, 8, 10, 11, 14, 16, 18, 19], "annot": [10, 13, 18], "anoth": 14, "anyon": 14, "anyth": [3, 18], "apart": 14, "api": 10, "append": [3, 17], "appl": 10, "appli": [3, 5, 6, 10, 14, 18], "applic": [2, 14, 16], "approxim": 10, "ar": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19], "arang": [2, 16], "arbitrari": 3, "architectur": [3, 11, 18], "arg": 17, "argument": [3, 6, 10, 17, 18], "around": 14, "arr": 3, "arrai": [2, 3, 6, 7, 9, 16, 17], "array_info": [6, 7], "art": 14, "arxiv": 5, "ask": 10, "assign": 10, "associ": 11, "assum": [3, 7, 10, 14, 17, 18], "ast": 6, "atom": 0, "attempt": [2, 16], "attent": [3, 5], "attr": [2, 3, 16], "attract": 14, "attribut": [2, 3, 14, 16], "augment": 7, "automat": 10, "avail": [3, 6, 7, 10, 14, 17, 18, 19], "averag": [3, 8, 14], "avg_val_loss": 7, "avweigel": 10, "ax": [2, 3, 6, 7, 16, 17, 18], "axi": [6, 14], "b": 10, "back": 7, "backend": 14, "background": [3, 14, 17], "backward": [3, 7], "base": [0, 2, 3, 5, 6, 10, 11, 14, 16, 17, 18], "base_data_path": 10, "base_path": 6, "basestor": 6, "bash": 10, "batch": [3, 6, 7, 10], "batch_loss": 7, "batch_siz": [3, 6, 7, 18], "bcewithlogitsloss": [3, 7], "becam": 14, "becaus": [2, 14, 16], "been": [3, 6, 14], "befor": [5, 8, 10, 14], "beginn": 10, "behavior": 11, "being": [6, 18], "below": [0, 1, 7, 10], "best": [3, 5, 11, 17, 18], "better": [3, 5, 11, 14], "between": [3, 8], "beyond": [10, 14], "bilinear": 5, "binar": 6, "binari": [3, 6, 17], "biolog": 1, "bit": 14, "block": [3, 5, 14], "bool": [3, 5, 6, 11, 17, 19], "boolean": [6, 17, 18], "border": 10, "both": [3, 5, 6, 17], "brain": 1, "branch": 15, "broad": [0, 1], "broader": 0, "brows": 14, "browser": [10, 18, 19], "bucket": [3, 14, 18], "build": 14, "build_conv_block": [3, 5], "built": [10, 18], "bulk": 14, "c": [2, 10, 14, 16, 17, 19], "calcul": [3, 8], "call": [3, 5, 6, 10, 14, 18], "came": 14, "campu": [2, 14, 16], "can": [1, 2, 3, 7, 9, 10, 11, 14, 16, 17, 18, 19], "cannot": 14, "care": [5, 6], "categor": 0, "categori": 10, "cd": [10, 18], "cell": [1, 3, 8, 10, 14, 19], "cellmap": [1, 3, 6, 8, 14, 15, 17, 18], "cellmap_data": 7, "cellmap_schema": [2, 13, 16], "cellmap_segmentation_challeng": [7, 9, 10, 12, 17, 18], "cellmapdataload": [6, 7], "cellmapdatasplit": 7, "cellmaplosswrapp": [3, 6], "cellular": [0, 14], "center": 5, "certain": 14, "challeng": [1, 3, 6, 8, 17, 18, 19], "chang": [10, 14, 15], "channel": 5, "check": 7, "checkpoint": [3, 5, 10, 18], "chosen": [6, 14], "chunk": [2, 3, 6, 16], "citeseerx": 3, "clariti": [10, 18], "class": [2, 3, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19], "class_label": [3, 6, 9], "classmethod": 6, "cli": [3, 10, 12], "click": 1, "client": 14, "clone": 15, "cloud": [2, 14, 16], "cnnencod": [3, 5], "coarsen": 14, "coarser": 14, "code": [7, 10, 11, 14, 15], "coicind": 14, "coin": 14, "collabor": 14, "collect": [0, 1, 14], "column": [0, 1], "com": [6, 10, 15], "combin": [3, 8, 17], "combine_scor": [3, 12], "combined_scor": 3, "come": [1, 2, 14, 16], "comma": [3, 19], "command": [2, 10, 16, 17, 18, 19], "common": [0, 14], "commun": 14, "compactli": 14, "compar": [8, 9, 10], "compat": [0, 6, 7], "competit": 19, "complet": 14, "compli": [2, 14, 16], "complic": 14, "compon": [0, 8, 10], "compos": 6, "comprehens": 0, "compress": [10, 14], "compressor": [2, 16], "compris": [0, 14], "comput": [3, 5, 6, 7, 10, 11], "conclus": 10, "conda": 10, "config": [5, 6, 10, 12, 17, 18], "config_path": [3, 6], "configur": [3, 6, 7, 10, 17], "confirm": [2, 7, 16], "congruent": 3, "connect": [5, 10], "consid": [3, 11], "consist": [14, 17], "constitu": 0, "constraint": 14, "construct": [3, 5, 11, 18], "constructor": [3, 18], "consum": [2, 14, 16], "contain": [0, 3, 6, 10, 11, 14, 17, 18], "content": [12, 17], "context": 1, "contigu": 14, "continu": [11, 14], "contribut": 10, "control": 18, "conv": 5, "conv2d": 7, "conv3drelu": [3, 5], "conveni": [10, 14], "convent": [0, 2, 14, 16], "convention": 14, "convers": 10, "convert": [5, 6, 14, 17], "convolut": 5, "coordin": 3, "coordinatetransform": 17, "copi": [6, 14], "copy_stor": [3, 6], "core": 6, "corner": 14, "corpuscl": 14, "correct": [7, 10, 11, 14, 17], "correctli": [2, 7, 8, 14, 16], "correspond": [3, 8, 10, 11, 17], "cosem": [2, 16], "cost": 14, "could": [6, 14], "count": 6, "cover": [14, 18], "cpu": [3, 6, 7, 18], "crawl": 18, "creat": [3, 6, 10, 14, 17, 18, 19], "criterion": [3, 7], "crop": [0, 1, 3, 5, 10, 12, 17, 18, 19], "crop_nam": [3, 6, 18], "crop_path": 6, "croprow": [3, 6], "cross": 6, "crucial": 9, "csc": [10, 17, 18, 19], "csv": [3, 6, 7, 18], "csv_path": [6, 18], "cuda": [3, 6, 7, 18], "cultur": 1, "curl": 10, "current": 14, "custom": 10, "d": [10, 19], "data": [0, 2, 3, 5, 6, 8, 11, 14, 16, 19], "data_d": [2, 16], "data_path": [3, 19], "dataclass": 6, "dataload": [3, 10, 12, 18], "datapath": 6, "dataset": [0, 1, 2, 3, 6, 7, 9, 10, 16, 17, 18, 19], "dataset_nam": [3, 19], "dataset_writer_kwarg": 3, "datasplit": [3, 7, 12], "datasplit_path": [3, 6, 7, 18], "date": 14, "de": [3, 18], "decid": 14, "decis": 14, "declar": 14, "decoderblock": [3, 5], "decodercup": [3, 5], "deem": [6, 14], "default": [3, 5, 6, 10, 17, 18, 19], "defin": [0, 2, 3, 5, 6, 7, 10, 11, 14, 16, 17, 18], "definit": 10, "demonstr": [7, 11], "denot": 14, "depend": [3, 7, 9, 10, 14, 15], "depict": 14, "deploy": 11, "deriv": [1, 14], "descend": 11, "describ": [8, 10, 14, 17], "descript": 10, "design": [10, 14], "desir": 3, "dest": 6, "dest_stor": 6, "detail": [7, 8, 10, 14, 17, 18, 19], "detect": 6, "determin": [11, 18], "develop": [2, 10, 14, 16], "devic": [3, 6, 7, 18], "dice": [3, 8], "dice_scor": 3, "dict": [3, 6], "dictionari": [3, 6, 7, 11, 18], "did": [2, 14, 16], "differ": [0, 9, 11, 14], "dim": 5, "dimens": [2, 3, 5, 7, 14, 16], "dimension_ord": [2, 16], "dimension_separ": [2, 16], "direct": 3, "directli": 14, "directori": [3, 5, 10, 11, 14, 15, 17, 18], "discuss": 10, "disk": [2, 16], "displai": 14, "disrupt": 14, "distanc": [3, 8, 14], "distinct": [1, 14], "distinguish": 14, "distribut": 14, "divid": [8, 14], "do": [2, 6, 9, 10, 11, 14, 16, 17], "do_orthoplan": 3, "doc": 19, "document": [0, 3, 7, 8, 10, 14, 15, 17, 18, 19], "doe": [3, 14, 18], "doi": 3, "don": 11, "done": [9, 18], "doubleconv": [3, 5], "down": [3, 5], "download": 18, "download_file_with_progress": [3, 6], "downsampl": 5, "downscal": 14, "draw": 6, "driver": 7, "droplet": 8, "drosophila": 1, "dry": 18, "dry_run": [6, 18], "dtype": [2, 16], "dubuisson": 3, "dure": [10, 11, 14, 17, 18], "e": [3, 7, 9, 10, 11, 14, 17, 19], "each": [0, 1, 3, 6, 8, 9, 10, 11, 14, 17, 18, 19], "earli": 14, "earlier": [2, 16], "easi": 10, "easier": 11, "easili": 7, "echrom": 0, "edit": 10, "edu": 3, "effici": 0, "effort": 14, "effortlessli": 11, "efib": 1, "egment": 14, "either": [0, 6, 17], "electron": 14, "element": 3, "ellular": 14, "els": 7, "em": [2, 3, 6, 10, 14, 16, 17, 19], "em_source_path": 6, "em_source_root": 6, "em_url": [3, 6], "embed": [3, 5], "emit": 14, "en": 3, "encod": [3, 5], "encompass": 0, "encount": [7, 10], "end": [3, 11, 14, 17], "endo": [3, 8], "endoplasm": 0, "endosom": 8, "enorm": 14, "ensur": [7, 8, 9, 10, 11, 14, 17, 18], "entail": 14, "entir": [3, 6], "entropi": 6, "envelop": 0, "epoch": [3, 6, 7, 11, 18], "equal": 14, "er": [0, 3, 7, 10, 18, 19], "er_lum": 0, "er_mem": 0, "er_palm": 14, "era": 14, "eres_lum": 0, "eres_mem": 0, "error": [2, 6, 10, 16, 17], "especi": 14, "essenti": 14, "estim": 14, "et": 3, "etc": [3, 7, 10, 14], "euchromatin": 0, "euclidean": 3, "eval": [7, 11], "evalu": [6, 11, 12, 17], "evaluation_resampl": 8, "event": 11, "everi": [5, 6, 14], "everytim": 6, "exact": 11, "exampl": [3, 6, 10, 11, 14, 17], "exclud": [2, 16], "execut": 10, "exist": [3, 5, 14, 17, 18], "exit": 0, "expand": 1, "expect": [3, 10, 11, 17], "experi": 11, "explain": [7, 14], "explicitli": 17, "express": [10, 14], "extend": 14, "extens": 10, "extra": 10, "extract": 11, "f": [2, 7, 11, 16], "face": 14, "facilit": 0, "factor": 14, "fail": [2, 11, 16], "fall": 7, "fals": [3, 5, 6, 7, 11, 18], "far": 14, "faster": 10, "fastest": 10, "featur": [5, 10, 14], "feel": [10, 14], "fetch": [6, 10], "fetch_all_em_resolut": 6, "fetch_crop_manifest": [3, 6], "fetch_data": [3, 12], "fetch_manifest": [3, 6], "fetch_test_crop_manifest": [3, 6], "fetch_zip_manifest": [3, 6], "few": 14, "fib": 14, "fibsem": [2, 3, 6, 14, 16], "field": 6, "file": [2, 3, 6, 7, 9, 10, 11, 14, 16, 18], "file_nam": 6, "filenam": [3, 11, 17], "filepath": 6, "filesystem": 10, "fill_valu": [2, 16], "filter": [2, 10, 16, 19], "final": 8, "find": [6, 11, 14, 18], "fine": [11, 14], "first": 14, "flag": [10, 17, 18], "flexibl": 10, "flip": [2, 16], "float": [3, 6], "float32": 6, "fluent": 14, "fluoresc": 14, "folder": [10, 17, 18], "follow": [2, 3, 8, 9, 10, 14, 16, 17, 18, 19], "foo": [2, 16], "footprint": 14, "forc": [6, 14, 18], "force_all_class": [6, 18], "force_saf": 6, "forg": 10, "form": [14, 17], "formal": [2, 16], "format": [2, 3, 6, 9, 10, 11, 16], "former": [5, 6], "forward": [3, 5, 6], "found": [6, 10, 11, 14], "frac": 8, "free": 10, "freedom": [2, 16], "from": [1, 2, 3, 5, 6, 7, 10, 11, 14, 16, 17, 19], "from_arrai": [2, 16], "from_csv_row": [3, 6], "front": 14, "full": [3, 10], "function": [3, 5, 6, 7, 10, 14, 18], "fundament": 0, "further": [11, 14], "futur": 14, "g": [7, 11, 14, 17, 19], "gb": 10, "gener": [3, 6, 14], "generos": 14, "geometr": [3, 8], "get": [3, 6, 7, 11, 19], "get_3dreg_config": [3, 5], "get_chunk_kei": [3, 6], "get_class_incl_id": [3, 6], "get_class_rel": [3, 6], "get_csv_str": [3, 6], "get_dataload": [3, 6, 7], "get_dataset_count": [3, 6], "get_dataset_nam": [3, 6], "get_formatted_field": [3, 6], "get_lay": [3, 12, 19], "get_raw_path": [3, 6], "get_s3_csv_str": [3, 6], "get_store_url": [3, 6], "get_test_crop": [3, 6], "get_tested_class": [3, 6], "get_zip_if_avail": [3, 6], "git": [10, 15], "github": [10, 14, 15], "githubusercont": 6, "give": [2, 14, 16], "given": [3, 5, 6, 10, 11, 18], "glob": [11, 18], "global": [10, 17], "goal": 14, "googl": 14, "gpu": 7, "grid": 14, "ground": [3, 8, 9, 17], "ground_truth": 3, "groundtruth": [3, 6, 10, 18, 19], "group": [0, 1, 2, 6, 14, 16], "group_id": 0, "group_model": [2, 16], "groupmetadata": [2, 16], "grown": 14, "gt": [3, 10, 19], "gt_sourc": [3, 6], "guid": [2, 7, 11, 16], "ha": [0, 3, 11, 14], "hand": 14, "handl": [3, 7, 9, 18], "happen": 14, "happi": 10, "hausdorff": [3, 8], "hausdorff_dist": [3, 12], "hausdorff_distance_max": 3, "haussdorf": 3, "haussdorf_dist": 3, "have": [0, 3, 6, 7, 10, 11, 14, 17], "hchrom": 0, "hd": 3, "head": 6, "heart": 1, "hela": 14, "help": [10, 11, 18], "here": [2, 9, 10, 11, 14, 16], "heterochromatin": 0, "hidden_st": 5, "hierachi": 14, "hierarch": 0, "hierarchi": [10, 14], "high": 0, "higher": 17, "highest": [11, 14], "highli": 10, "histor": 14, "histori": 14, "home": 14, "hook": [5, 6], "host": 14, "hostedtoolcach": [3, 6], "hour": 10, "how": [2, 7, 8, 10, 11, 16, 18, 19], "howev": 14, "http": [3, 5, 6, 10, 15, 18], "human": [1, 14], "hwio": 5, "hyperparamet": 3, "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 19], "i8": [2, 16], "icpr": 3, "icpr94": 3, "icroscopi": 14, "id": [3, 6, 9, 10, 17], "idea": 10, "ideal": 11, "identifi": [0, 14], "ignor": [3, 5, 6, 18], "imag": [2, 3, 5, 8, 16, 17, 19], "image0": 3, "image1": 3, "imageri": 14, "img_siz": 5, "immut": 14, "impair": 14, "implement": [5, 9, 14], "import": [2, 6, 7, 11, 16], "improv": 10, "in_channel": 5, "incl_ids_str": 6, "includ": [0, 1, 3, 6, 7, 8, 10, 14, 18, 19], "include_miss": 3, "inclus": 0, "independ": [3, 18], "index": 10, "indic": [2, 6, 10, 14, 16, 18], "individu": [0, 14], "induc": 14, "inf": 3, "infer": 11, "infin": 3, "info": [6, 7], "inform": [0, 3, 10, 14, 17, 18, 19], "initi": [3, 5, 6, 11, 17, 18], "inner_arrai": 6, "input": [2, 3, 5, 6, 7, 16, 18], "input_array_info": [3, 6, 7, 18], "input_id": 5, "input_nc": 5, "input_path": 3, "input_search_path": [3, 17], "insid": 14, "instal": [7, 10, 11, 15], "instanc": [3, 5, 6, 9, 10, 11, 14], "instance_class": 3, "instancenorm": 5, "instancenorm2d": 5, "instancenorm3d": 5, "instead": [5, 6, 14, 18], "institut": 14, "instruct": [10, 19], "int": [3, 5, 6, 19], "integ": [3, 19], "integr": [7, 11], "intend": 14, "inter": 14, "interact": [10, 14], "interest": [8, 9, 14, 17], "intern": [5, 6, 14], "internet": 10, "interpol": [3, 9], "intersect": [3, 8], "introduc": 14, "invent": 14, "invok": 10, "involv": [9, 14, 18], "invovl": 6, "iou": [3, 8], "is_avail": 7, "isotrop": 3, "israel": 3, "issu": [2, 6, 7, 16], "ist": 3, "item": 7, "iter": [3, 6, 7, 9, 18], "iterations_per_epoch": [3, 6, 7, 18], "its": [0, 3, 6, 8, 14, 19], "jain": 3, "janelia": [2, 6, 10, 14, 15, 16], "jeff": 3, "jerusalem": 3, "jonesa3": 10, "jpeg": 14, "jpg": 14, "jrc": 14, "jrc_cos7": [10, 14, 19], "jrc_dauer": 14, "jrc_hela": [2, 14, 16], "jrc_macrophag": 14, "jrc_mu": 14, "json": [3, 14], "just": [6, 10], "k": [3, 10, 17, 19], "keep": [11, 14], "kei": [1, 6, 7, 11, 14], "kept": [6, 14], "kernel_s": [5, 7], "keyword": [3, 6, 18], "kidnei": 1, "kind": [3, 19], "known": 14, "kwarg": [5, 6], "l": 10, "label": [3, 6, 8, 9, 10, 14, 17, 18, 19], "label1": 3, "label2": 3, "label3": 3, "label_nam": [3, 17], "label_scor": 3, "larg": [2, 3, 14, 16], "larger": 14, "largest": [3, 14], "larva": 14, "latest": [3, 5, 11, 18], "latter": [5, 6], "layer": [3, 5, 19], "layer_typ": [3, 19], "ld": [3, 8], "lead": [10, 17], "learn": [3, 10, 14, 18], "learning_r": [3, 18], "least": [6, 14], "lection": 14, "led": 14, "len": [3, 7], "less": 14, "level": [0, 14, 17], "leverag": 7, "lib": [3, 6], "librari": [2, 11, 16], "light": 14, "like": [2, 6, 10, 14, 16, 17], "limit": [3, 14], "line": [2, 10, 16, 18], "linear": [3, 5, 9], "link": [1, 14, 18], "linux": 10, "lipid": 8, "list": [0, 1, 3, 6, 7, 10, 14, 17, 18, 19], "liver": 1, "lm": 14, "lm_488": 14, "load": [3, 5, 6, 7, 10, 14, 19], "load_best_v": [3, 5, 11, 18], "load_latest": [3, 5, 11, 18], "load_model": [3, 18], "load_model_weight": 18, "load_pretrain": 11, "load_safe_config": [3, 6], "loader": 7, "local": [2, 10, 14, 15, 16, 18, 19], "local_filenam": 6, "localhost": [10, 18], "localvolum": [3, 19], "locat": [2, 10, 14, 16], "log": [3, 5, 10, 11, 18], "logdir": [3, 10, 18], "logs_save_path": [3, 5, 11, 18], "long": [6, 10, 11, 18], "longer": 14, "look": 14, "loop": 7, "loss": [3, 7, 10, 11, 12, 18], "loss_fn": 6, "lossi": 14, "lot": 14, "low_is_best": [5, 11, 18], "lower": [5, 11], "lowest": 11, "lr": [3, 7], "lumen": 0, "lyso": [3, 8], "lysosom": 8, "m": [3, 14], "m3": 10, "macbook": 10, "machin": 14, "maco": 10, "mai": [0, 3, 10, 14, 18], "main": [6, 14, 15], "maintain": 14, "make": [6, 10, 11, 14, 15], "make_datasplit_csv": [3, 6, 18], "make_s3_datasplit_csv": [3, 6, 18], "mamba": 10, "manag": [11, 15], "mani": 14, "manifest": 6, "manual": 10, "map": [6, 14], "mask": [6, 10, 17], "massiv": 14, "match": [3, 5, 7, 9, 10, 11, 17, 19], "match_crop_spac": [3, 9, 12], "matter": 14, "max": 10, "max_dist": 3, "maximum": [3, 8, 18], "md": [3, 10, 18], "mean": [3, 8, 14, 17], "measur": 8, "member": [2, 16], "membran": 0, "memori": 10, "mere": 14, "merg": 10, "mesh": 14, "messag": [2, 10, 16], "metadata": [2, 3, 16, 17, 19], "metamorphos": 14, "method": [2, 3, 9, 14, 16], "metric": [8, 10, 11, 18], "mhd": 3, "micro": 10, "micromamba": 10, "microscopi": 14, "microtubul": 8, "mid_channel": 5, "might": [11, 14], "migrat": 14, "mirror": [3, 6, 7, 18], "mismatch": 11, "miss": [3, 7], "missing_volume_scor": [3, 12], "mito": [0, 3, 6, 8, 10, 19], "mito_lum": 0, "mito_mem": 0, "mito_pr": 14, "mito_ribo": 0, "mito_seg": 14, "mitochondri": 0, "mitochondria": [0, 8, 14], "mkdoc": 15, "mlp": [3, 5], "modal": 14, "mode": [3, 10], "model": [2, 3, 7, 9, 12, 14, 16], "model_": 11, "model_dump": [2, 16], "model_kwarg": [3, 18], "model_load": [3, 10, 12, 18], "model_nam": [3, 18], "model_save_path": [3, 5, 11, 18], "model_to_load": [3, 18], "modif": [6, 11], "modifi": [3, 11], "modul": [10, 11, 12, 18, 19], "monitor": [3, 10, 18], "more": [3, 8, 9, 10, 17, 18, 19], "most": 11, "motiv": 14, "mous": [1, 14], "move": 14, "mp": [3, 6, 7, 18], "mt": [3, 8], "much": [2, 10, 16], "mulitscal": [2, 16], "multi": [2, 14, 16], "multipl": [0, 19], "multiscal": [2, 3, 9, 10, 16, 17, 19], "multscal": 14, "must": [3, 6, 11, 14], "my_model": 11, "mymodel": 11, "mzouink": 10, "n": 10, "n5": [10, 14], "n5fsstore": [2, 16], "n_block": 5, "n_channel": 5, "n_class": 5, "n_downsampl": 5, "name": [0, 2, 3, 6, 7, 10, 16, 17, 18, 19], "named_class": 6, "nanomet": [8, 17], "navig": [0, 10, 15], "ndarrai": 3, "ndim": 5, "ne_mem": 0, "nearest": [3, 8, 9, 14], "necessari": [3, 7, 17], "necessarili": 17, "need": [0, 2, 3, 5, 6, 7, 10, 11, 14, 16, 17, 18], "needlessli": 14, "neighbor": [3, 9], "nesteddirectorystor": [2, 16], "net": 5, "neuroglanc": [1, 3, 10, 14, 19], "neuroglancer_n5": [2, 16], "never": 14, "new": [10, 14], "newer": 14, "next": 10, "ngf": 5, "ngff": [3, 9, 14, 17, 19], "nm": [2, 16], "nn": [3, 5, 6, 7, 11], "no_grad": 7, "non": [3, 5, 8, 14], "none": [2, 3, 5, 6, 16, 18, 19], "nonzero": 3, "norm_lay": 5, "normal": [3, 5, 7, 8], "normalized_haussdorf_dist": 3, "note": [2, 3, 9, 10, 14, 16, 17], "novo": [3, 18], "now": 11, "np": [2, 3, 8, 16], "np2th": [3, 5], "np_in": 0, "np_out": 0, "nuc": [0, 3, 6, 7, 8, 10, 18, 19], "nuclear": [0, 8], "nucleo": 0, "nucleolu": 0, "nucleoplasm": 0, "nucleu": [0, 8], "nucpl": 0, "num_voxel": 3, "number": [3, 5, 6, 7, 8, 14, 17, 18, 19], "numpi": [2, 3, 11, 14, 16, 17], "o": [2, 14, 16], "object": [3, 5, 6, 7, 10, 14, 17, 18], "obtain": 8, "obviou": 14, "occupi": 8, "offer": 10, "offset": [3, 9, 17], "often": [10, 14, 18], "oihw": 5, "old": 14, "older": 14, "om": [3, 9, 14, 17, 19], "onc": [10, 14], "one": [5, 6, 7, 10, 14, 18], "onli": [6, 14, 19], "onlin": 10, "open": [2, 10, 14, 16, 19], "openorganel": 14, "oper": [2, 14, 16], "opt": [3, 6], "optim": [3, 7, 11, 18], "option": [3, 6, 10, 17, 18, 19], "order": [2, 16], "org": [3, 5], "organ": [0, 1, 2, 10, 14, 16], "organel": [0, 14], "origin": [5, 14], "orthogon": 3, "other": [3, 10, 14, 19], "otherwis": [3, 6, 18], "our": [0, 2, 14, 16], "out": [2, 14, 16], "out_channel": 5, "outconv": [3, 5], "outer_arrai": 6, "output": [3, 5, 6, 7, 17], "output_nc": 5, "output_path": [3, 17], "over": [3, 6, 8], "overall_scor": 3, "overhaul": 14, "overlap": [8, 14], "overridden": [5, 6], "overview": [0, 10], "overwrit": [3, 17], "own": [0, 14, 19], "p": 3, "pacinian": 14, "pacininan": 14, "pack": [10, 17], "packag": [2, 7, 10, 12, 15, 16, 19], "package_result": 17, "package_submiss": [3, 12], "pad": [3, 5, 6, 7, 10], "pad_valu": 3, "padding_typ": 5, "page": [3, 10], "pancrea": 1, "paper": [5, 14], "parallel": 14, "param": 5, "paramet": [2, 3, 5, 6, 7, 9, 11, 14, 16, 18, 19], "paramt": [2, 16], "parlanc": 14, "pars": 14, "parse_s3_url": [3, 6], "part": [5, 14], "parti": 14, "partial": 11, "particip": [1, 17], "particular": 10, "partit": 14, "partition_copy_stor": [3, 6], "pass": [2, 3, 5, 6, 16, 18], "path": [2, 3, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19], "pattern": 11, "pdf": 5, "per": [3, 6, 7, 17, 18], "perform": [2, 3, 5, 6, 9, 11, 16, 18], "perox": [3, 8], "peroxisom": 8, "phase": 7, "physic": 14, "piec": 14, "pip": [2, 10, 11, 16], "pixel": 3, "pixelresolut": [2, 14, 16], "place": 5, "placehold": [3, 11, 17], "placement": 7, "plan": 14, "plane": 3, "platform": 14, "pleas": 10, "pm": 10, "poetri": 15, "point": [3, 7, 8], "pool": 6, "pore": [0, 8], "portal": [10, 14], "possibl": [10, 11], "possibli": 5, "post": [17, 19], "potenti": [6, 14], "powershel": 10, "pre": [3, 18], "precomput": 14, "pred": 3, "pred_label": 3, "pred_label_path": 3, "pred_volume_path": 3, "predict": [8, 9, 12, 14, 17, 18, 19], "predict_2d": 10, "predict_3d": 10, "predict_orthoplan": [3, 12], "predictions_path": 3, "prefer": 10, "prefix": 14, "prepar": 7, "preprocess": 7, "prerequisit": 10, "present": [2, 3, 6, 16, 17, 18], "preserv": 9, "pressur": 14, "pretrain": 10, "preview": [15, 17], "previou": 14, "previous": 11, "primari": 14, "principl": 14, "print": [2, 7, 16], "prior": 17, "pro": 10, "probabl": [6, 18], "problem": [2, 14, 16], "process": [8, 11, 12, 17, 18, 19], "process_2d": 10, "process_3d": 10, "process_func": [3, 10], "processed_path": [3, 17], "produc": [2, 8, 14, 16], "product": 14, "program": 14, "progress": [3, 10, 18], "projct": 14, "project": [2, 10, 14, 16], "properli": 7, "properti": 0, "proport": [3, 8, 18], "provid": [0, 1, 2, 3, 6, 7, 10, 11, 14, 16, 18, 19], "ps1": 10, "psu": 3, "pth": [3, 10, 11, 18], "public": 14, "publish": 14, "pull": 15, "purpos": [10, 14, 19], "put": [2, 16], "py": [3, 9, 10, 17, 18, 19], "pydant": [2, 16], "pyramid": 14, "pytest": 15, "python": [2, 3, 6, 10, 14, 16, 18], "python3": [3, 6], "pytorch": [3, 10, 11, 18], "question": 10, "r": 17, "radam": 3, "rais": [2, 6, 16], "ran": [10, 14], "randint": 3, "random": [3, 6, 14, 18], "random_se": [3, 18], "random_valid": [6, 7], "randomli": [6, 7], "rang": [2, 3, 6, 7, 8, 16], "rarer": 14, "rate": [3, 18], "raw": [3, 6, 10, 14, 17, 18, 19], "raw_nam": [3, 6, 18], "raw_pad": 6, "raw_path": 6, "re": [3, 10], "read": [11, 14, 18], "read_group": [3, 6], "readabl": 14, "readm": [3, 10, 18], "reason": 14, "receiv": 10, "recent": 11, "recip": [5, 6], "recommend": 10, "recon": [3, 6], "record": 18, "redirect": 14, "ref": 6, "refer": [0, 3, 8, 10, 18, 19], "reflect": [3, 5, 18], "refresh": 7, "region": [1, 6, 8, 9, 14, 17], "regist": [5, 6], "registrationhead": [3, 5], "regularli": 11, "rel": [2, 6, 10, 14, 16], "relat": 10, "relationship": 0, "relev": 10, "relu": [5, 7], "remot": 18, "remov": 14, "renam": 14, "render": 15, "replac": [3, 10, 17, 18], "replic": 5, "repo": 10, "repositori": [14, 15], "repres": [0, 3, 6, 8, 14], "reproduc": [3, 18], "request": [6, 10, 15], "requir": [3, 7, 9, 10, 14, 17], "resampl": [3, 10, 17, 19], "resblock": 5, "rescal": 3, "research": [2, 14, 16], "reshap": [2, 16], "resiz": 3, "resize_arrai": [3, 12], "resnet": [3, 12], "resnet2d": [3, 5], "resnet3d": [3, 5], "resnetblock2d": [3, 5], "resnetblock3d": [3, 5], "resolut": [3, 8, 9, 10, 17], "resolv": 10, "resolve_em_url": [3, 6], "resourc": 14, "respect": [3, 6, 10, 14, 18], "respresent": 14, "restor": 11, "result": [2, 3, 6, 10, 14, 16, 17], "result_fil": 3, "resum": 11, "reticulum": 0, "retriev": [0, 10], "return": [3, 5, 6, 7, 10], "rganel": 14, "rhoad": 3, "rhoadesscholar": 10, "ribosom": 0, "rinva": 10, "roi": [8, 9], "root": 14, "rotat": [3, 6, 7, 18], "row": 6, "rst": [8, 10, 18, 19], "run": [3, 5, 6, 10, 11, 15, 17, 18], "s0": [2, 14, 16, 17], "s1": [2, 14, 16], "s2": 14, "s3": [2, 3, 16], "s3_url": 6, "saalfeldlab": 14, "safe": [6, 14], "safeti": 6, "same": [3, 8, 9, 10, 14, 17, 18], "sampl": [1, 7, 10, 14, 18], "satisfi": [10, 14], "save": [3, 10, 11, 14, 17, 18], "save_numpy_binary_to_zarr": [3, 17], "save_numpy_class_arrays_to_zarr": [3, 12], "save_numpy_class_labels_to_zarr": [3, 12], "save_numpy_labels_to_zarr": [3, 17], "save_path": 3, "scalar": [11, 14], "scale": [0, 2, 3, 6, 7, 9, 14, 16, 17, 18], "scene": 14, "schema": [10, 15], "scheme": 14, "scipi": 3, "score": [3, 5, 8, 11, 18], "score_inst": [3, 12], "score_label": [3, 12], "score_semant": [3, 12], "score_submiss": [3, 12], "score_volum": [3, 12], "screenshot": 14, "script": [3, 6, 10, 11, 17, 18], "scriptmodul": [5, 6], "seamlessli": [7, 11], "search": [3, 5, 6, 10, 11, 18], "search_path": [3, 5, 6, 11, 18], "second": [3, 14, 18], "section": [10, 14], "secur": [3, 12], "see": [2, 3, 10, 14, 16, 17, 18], "seed": [3, 18], "segment": [1, 3, 6, 7, 9, 14, 18, 19], "select": [11, 14, 19], "self": 6, "sem": [1, 14], "semant": [3, 9, 10, 14, 17], "separ": [1, 3, 14, 19], "sequenc": [3, 6, 14, 19], "sequenti": [5, 7], "serv": [10, 15, 19], "server": [10, 18, 19], "servic": 14, "session": 19, "set": [3, 6, 7, 14], "sever": 14, "sh": 10, "shape": [2, 3, 5, 6, 7, 9, 14, 16, 17, 18], "share": [5, 6, 10, 14], "shell": 10, "ship": [2, 16], "short": 14, "should": [3, 5, 6, 10, 11, 14, 17, 18, 19], "show": 10, "shown": [3, 19], "side": [10, 19], "sign": 10, "silent": [3, 5, 6, 18], "similar": [8, 14, 18], "similarli": [3, 17, 19], "simpl": [10, 14], "simpli": [10, 14], "simplifi": 7, "sinc": [5, 6], "singl": [3, 9, 14, 17], "site": [0, 6], "size": [3, 6, 7, 9, 10, 14, 18], "skip": 5, "skip_channel": 5, "slice": 6, "small": [2, 16], "smaller": [3, 14], "smooth": 14, "so": [2, 9, 10, 11, 14, 16], "softwar": 14, "solv": 14, "some": [0, 10, 14], "sometim": 3, "soon": 10, "sort": 11, "sourc": [3, 5, 6, 14, 19], "source_stor": 6, "space": [14, 17], "span": 1, "spatial": [3, 5, 6, 7, 8, 14, 17, 18], "spatial_transform": [3, 6, 7, 18], "special": [0, 14], "specif": [0, 2, 8, 14, 16, 17, 19], "specifi": [3, 6, 7, 10, 11, 14, 17, 18, 19], "specimen": 14, "spectrum": 1, "speed": 10, "speedtest": [3, 12], "spend": [3, 18], "split": [3, 6, 7, 18], "src": [6, 9, 10, 18], "stai": 14, "standard": [3, 5, 14], "start": [14, 17, 18], "state": [5, 6, 11], "state_dict": 11, "step": [7, 10, 17, 18], "still": 14, "storag": [2, 10, 14, 16], "store": [2, 6, 14, 16, 18], "str": [3, 5, 6, 9, 11, 17, 19], "strategi": 14, "stream": 18, "streamlin": 11, "strict": [11, 14], "stride": 5, "string": [3, 6, 11, 18, 19], "structur": [2, 3, 7, 14, 16], "style": 14, "subclass": [5, 6], "submiss": [3, 10, 19], "submission_data_format": 10, "submission_path": [3, 17], "submit": [8, 15, 17], "submodul": 12, "subpackag": 12, "subsampl": 14, "subsequ": 14, "subset_to_slic": [3, 6], "succe": [2, 16], "success": 14, "suffix": 14, "sum": 8, "summari": [2, 3, 16], "summarywrit": 11, "suppli": 10, "support": [2, 7, 10, 14, 16, 18], "suppos": 11, "sure": 11, "swish": [3, 5], "system": 14, "t": [6, 11, 14, 17], "tabl": 1, "tag": 11, "take": [3, 5, 6, 8, 9, 10, 14, 18], "taken": 14, "target": [3, 6, 7, 9, 14, 18], "target_array_info": [3, 6, 7, 18], "target_shap": 3, "target_value_transform": 6, "task": 7, "tb": [2, 14, 16], "team": [2, 10, 14, 16], "techniqu": 14, "technologi": 14, "tem": 14, "tensor": 6, "tensorboard": [3, 5, 10, 11, 18], "tensorboardx": [7, 11], "terabyt": [2, 16], "termin": [3, 10, 18], "test": [2, 3, 6, 11, 15, 16, 17, 19], "test_crop_manifest": [6, 17], "test_crop_nam": 17, "test_volum": 3, "test_volume_nam": [3, 17], "testcroprow": [3, 6], "tested_class": 6, "text": [2, 8, 16], "than": [2, 3, 9, 14, 16], "thei": [0, 2, 8, 10, 14, 16, 17], "them": [5, 6, 7, 10, 11, 14, 17, 18], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19], "third": 14, "thoroughli": [10, 18], "those": [2, 9, 10, 16], "thought": 10, "threadpoolexecutor": 6, "threshold": [3, 6, 9, 10, 14], "through": [0, 10], "thu": [10, 14, 17], "thumbnail": 14, "time": [3, 5, 10, 11, 14], "tissu": [1, 14], "tmp": [2, 16], "to_zarr": [2, 16], "todtyp": 6, "togeth": 14, "toi": [2, 16], "too": [2, 16, 18], "took": 10, "tool": [2, 6, 10, 14, 16], "toolbox": 10, "top": [10, 14], "torch": [3, 5, 6, 7, 11], "torchvis": [6, 7], "total": 8, "track": 14, "tracker": [2, 16], "tradit": [3, 9], "train": [1, 6, 7, 11, 12], "train_2d": [10, 18], "train_3d": [10, 18], "train_load": 7, "training_config": 18, "transform": [3, 5, 6, 14, 18], "transit": 14, "translat": [3, 6, 9, 14, 17], "transpos": [3, 6, 7, 18], "transpose_for_scor": [3, 5], "trasposit": 6, "trilinear": 5, "troubleshoot": 10, "true": [3, 5, 6, 7, 11, 14, 18, 19], "truth": [3, 8, 9, 17], "truth_label": 3, "truth_path": 3, "truth_volume_path": 3, "try": 14, "tune": 11, "tupl": [3, 6, 9], "turn": 6, "tutori": 10, "twice": [8, 14], "two": [3, 7, 11, 14, 17], "type": [1, 3, 5, 6, 9, 14, 17, 19], "typic": 14, "u": [2, 5, 10, 14, 16], "uint16": [2, 14, 16], "uint8": [3, 6, 14], "ultim": 14, "unchang": 14, "under": [0, 14], "underscor": 14, "understand": 14, "unet_2d": [3, 5], "unet_3d": [3, 5], "unet_model_2d": [3, 10, 12], "unet_model_3d": [3, 12], "unformat": 6, "union": [3, 8], "uniqu": [0, 9, 10, 14, 17], "unit": [2, 3, 9, 14, 16, 17], "unsaf": 6, "until": 14, "unus": 6, "unzip": [3, 10], "unzip_fil": [3, 12], "up": [3, 5, 7], "upath": [3, 7, 9, 11, 17], "updat": 11, "upload": 10, "upsampl": 5, "uri": 10, "url": [1, 2, 3, 6, 14, 16], "us": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19], "usag": [3, 6, 10], "use_batchnorm": 5, "use_bia": 5, "use_dropout": 5, "use_s3": [3, 18], "user": [10, 14, 19], "util": [3, 7, 11, 12, 17, 18], "v": [5, 10], "v2": 6, "val": [3, 6, 18], "val_count": 7, "val_load": 7, "val_loss": 7, "valid": [3, 5, 6, 7, 10, 11, 14, 19], "validation_batch_limit": [3, 18], "validation_loss": 11, "validation_prob": [3, 6, 18], "validation_time_limit": [3, 18], "valu": [3, 6, 14], "varieti": [1, 14], "variou": 0, "ve": [3, 8], "veri": 14, "verifi": [6, 7, 11], "versa": [3, 8], "version": [14, 17], "vesicl": 8, "vi": 5, "via": 14, "vice": [3, 8], "view": [10, 14, 18, 19], "viewabl": [10, 18], "viewdoc": 3, "viewer": [3, 10, 19], "vim": [3, 8], "vimentin": 8, "visual": [0, 1, 12, 14, 17], "visul": 14, "vit": 5, "vitnet": [3, 12, 18], "vitvnet": [3, 5], "volum": [3, 8, 9, 14, 17], "voxel": [3, 8, 9, 10, 17], "voxel_s": [3, 6, 9, 17], "wa": [10, 14], "wai": [10, 14], "want": [10, 11, 14], "wasn": 14, "watersh": 10, "we": [2, 5, 9, 10, 14, 16, 17], "web": 14, "webrequest": 10, "weight": [5, 10, 11, 18], "welcom": 10, "well": [3, 10, 14, 18], "were": 14, "what": [2, 16, 19], "when": [2, 3, 6, 11, 14, 16, 17], "where": [2, 3, 11, 14, 16], "whereev": 14, "whether": [2, 3, 5, 6, 10, 16, 17, 18, 19], "which": [2, 3, 6, 8, 10, 11, 14, 16, 17, 18, 19], "while": [3, 5, 6, 10, 14], "wide": [2, 14, 16], "wifi": 10, "wiki": 3, "wikipedia": 3, "window": [10, 14, 19], "wish": 10, "within": [5, 6, 14, 17], "without": 18, "won": [11, 17], "word": 14, "work": [1, 2, 3, 10, 14, 16, 18], "worker": 6, "workflow": [7, 11, 14], "world": [3, 9], "would": [2, 14, 16], "write": [2, 6, 14, 16, 18], "writer": 11, "written": 6, "x": [2, 3, 5, 6, 7, 16, 17, 18], "x1": 5, "x2": 5, "x64": [3, 6], "y": [2, 3, 6, 7, 10, 16, 17, 18], "yarl": 6, "year": 14, "yet": 14, "yield": 3, "you": [1, 2, 7, 10, 11, 14, 16, 17, 18, 19], "your": [7, 11, 15, 17, 18], "yuriyzubov": 10, "z": [3, 6, 17], "zarr": [0, 2, 3, 6, 9, 10, 14, 16, 17, 19], "zarr_path": 3, "zarr_vers": [2, 16], "zarrai": 17, "zattr": 17, "zebrafish": 1, "zero": 5, "zero_grad": 7, "zgroup": 17, "zip": [3, 6, 10, 17], "zip_manifest": 6, "zip_path": 3, "zip_submiss": [3, 12], "zipdatasetrow": [3, 6], "zips_from_manifest": 6, "zoom": 14}, "titles": ["Annotation Classes", "Available Data", "CellMap Schemas", "cellmap_segmentation_challenge package", "cellmap_segmentation_challenge.cli package", "cellmap_segmentation_challenge.models package", "cellmap_segmentation_challenge.utils package", "Creating a CellMap Data PyTorch Dataloader", "Evaluation", "Evaluation Resampling", "CellMap Segmentation Challenge", "Loading a Pretrained Model Checkpoint", "src", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas", "Submission Data Format", "Training", "Visualization"], "titleterms": {"acknowledg": 10, "ad": 15, "alias": 0, "align": 14, "an": [2, 16], "annot": 0, "arrai": 14, "automat": 17, "avail": 1, "batch": 18, "categori": 0, "cellmap": [2, 7, 10, 16], "cellmap_segmentation_challeng": [3, 4, 5, 6], "challeng": 10, "check": [2, 16], "checkpoint": 11, "chunk": 14, "class": 0, "cli": [2, 4, 16], "clone": 10, "compon": 17, "conclus": [7, 11], "config": 3, "configur": 18, "connect": 17, "contain": [2, 16], "content": [0, 3, 4, 5, 6, 10], "contribut": [2, 16], "conveni": 17, "convers": 17, "coordin": 14, "cosem": 14, "creat": [2, 7, 16], "crop": 6, "data": [1, 7, 10, 17, 18], "dataload": [6, 7], "dataset": 14, "datasplit": [4, 6, 18], "definit": 11, "descript": 0, "detail": 0, "download": 10, "downsampl": 14, "environ": 10, "evalu": [3, 4, 8, 9, 10], "exampl": [0, 2, 7, 16, 18, 19], "fetch_data": [4, 6], "file": 17, "final": 10, "format": [14, 17], "from": 18, "function": [9, 11, 17], "gener": 18, "get": 10, "hierarchi": [2, 16], "i": 14, "imag": 14, "inspect": [2, 16], "instal": [2, 16], "instanc": [8, 17], "instruct": 18, "issu": 10, "layout": 14, "limit": 18, "link": 10, "load": [11, 18], "loss": 6, "manual": 17, "metadata": 14, "model": [5, 10, 11, 18], "model_load": 5, "modul": [3, 4, 5, 6], "multipl": 14, "multiresolut": 14, "multiscal": [0, 14], "n5": [2, 16], "name": 14, "neuroglanc": [2, 16], "note": [7, 11], "outlin": 14, "overview": [7, 11], "packag": [3, 4, 5, 6, 17], "post": 10, "predict": [3, 4, 10], "prerequisit": [7, 11], "pretrain": 11, "process": [3, 4, 9, 10], "project": 15, "purpos": 9, "pytorch": 7, "repositori": 10, "resampl": [8, 9], "resnet": 5, "s3": [14, 18], "schema": [2, 16], "secur": 6, "segment": [8, 10, 17], "semant": 8, "set": [10, 18], "speedtest": 4, "src": 12, "start": 10, "step": 11, "structur": [0, 10, 17], "submiss": 17, "submit": 10, "submodul": [3, 4, 5, 6], "subpackag": 3, "tabl": [0, 10], "test": 10, "thi": 15, "time": 18, "train": [3, 4, 10, 18], "troubleshoot": [7, 11], "tutori": 11, "unet_model_2d": 5, "unet_model_3d": 5, "up": 10, "usag": [7, 18, 19], "util": 6, "valid": [2, 16, 18], "visual": [3, 4, 10, 19], "vitnet": 5, "what": 14, "your": 10}})