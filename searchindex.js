Search.setIndex({"alltitles": {"API": [[29, "api"]], "Adding to this project": [[35, null]], "COSEM": [[34, "cosem"]], "CellMap Schemas": [[0, null], [36, null]], "CellMap Segmentation Challenge": [[29, null]], "Chunked array format": [[34, "chunked-array-format"]], "Clone the repository": [[29, "clone-the-repository"]], "Contents:": [[29, null]], "Contributing": [[0, "contributing"], [36, "contributing"]], "Data format": [[29, "data-format"]], "Dataset names": [[34, "dataset-names"]], "Datasets on S3": [[34, "datasets-on-s3"]], "Download the data": [[29, "download-the-data"]], "Downsampling and coordinates": [[34, "downsampling-and-coordinates"]], "Example: creating an N5 hierarchy for Neuroglancer": [[0, "example-creating-an-n5-hierarchy-for-neuroglancer"], [36, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[0, "example-validating-a-container-with-the-cli"], [36, "example-validating-a-container-with-the-cli"]], "Getting started": [[29, "getting-started"]], "Image layout": [[34, "image-layout"]], "Installation": [[0, "installation"], [36, "installation"]], "Links": [[29, "links"]], "Multiple image alignments": [[34, "multiple-image-alignments"]], "Multiresolution image layout": [[34, "multiresolution-image-layout"]], "Multiscale image metadata": [[34, "multiscale-image-metadata"]], "Outline": [[34, null]], "Post-process model predictions": [[29, "post-process-model-predictions"]], "Predict on test data": [[29, "predict-on-test-data"]], "Repository structure": [[29, "repository-structure"]], "S3 layout": [[34, "s3-layout"]], "Set up your environment": [[29, "set-up-your-environment"]], "Submit your final predictions": [[29, "submit-your-final-predictions"]], "Train a model": [[29, "train-a-model"]], "Visualize data and predictions": [[29, "visualize-data-and-predictions"]], "What is a dataset": [[34, "what-is-a-dataset"]], "cellmap-schemas check": [[0, "cellmap-schemas-check"], [36, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[0, "cellmap-schemas-inspect"], [36, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge": [[1, null]], "cellmap_segmentation_challenge.cli": [[2, null]], "cellmap_segmentation_challenge.cli.datasplit": [[3, null]], "cellmap_segmentation_challenge.cli.evaluate": [[4, null]], "cellmap_segmentation_challenge.cli.fetch_data": [[5, null]], "cellmap_segmentation_challenge.cli.predict": [[6, null]], "cellmap_segmentation_challenge.cli.process": [[7, null]], "cellmap_segmentation_challenge.cli.train": [[8, null]], "cellmap_segmentation_challenge.cli.visualize": [[9, null]], "cellmap_segmentation_challenge.config": [[10, null]], "cellmap_segmentation_challenge.evaluate": [[11, null]], "cellmap_segmentation_challenge.models": [[12, null]], "cellmap_segmentation_challenge.models.model_load": [[13, null]], "cellmap_segmentation_challenge.models.resnet": [[14, null]], "cellmap_segmentation_challenge.models.unet_model_2D": [[15, null]], "cellmap_segmentation_challenge.models.unet_model_3D": [[16, null]], "cellmap_segmentation_challenge.models.vitnet": [[17, null]], "cellmap_segmentation_challenge.predict": [[18, null]], "cellmap_segmentation_challenge.process": [[19, null]], "cellmap_segmentation_challenge.train": [[20, null]], "cellmap_segmentation_challenge.utils": [[21, null]], "cellmap_segmentation_challenge.utils.crops": [[22, null]], "cellmap_segmentation_challenge.utils.dataloader": [[23, null]], "cellmap_segmentation_challenge.utils.datasplit": [[24, null]], "cellmap_segmentation_challenge.utils.fetch_data": [[25, null]], "cellmap_segmentation_challenge.utils.loss": [[26, null]], "cellmap_segmentation_challenge.utils.security": [[27, null]], "cellmap_segmentation_challenge.visualize": [[28, null]], "src": [[30, null]]}, "docnames": ["cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.cli.datasplit", "cellmap_segmentation_challenge.cli.evaluate", "cellmap_segmentation_challenge.cli.fetch_data", "cellmap_segmentation_challenge.cli.predict", "cellmap_segmentation_challenge.cli.process", "cellmap_segmentation_challenge.cli.train", "cellmap_segmentation_challenge.cli.visualize", "cellmap_segmentation_challenge.config", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.process", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.security", "cellmap_segmentation_challenge.visualize", "index", "modules", "scheme_docs/api/annotation", "scheme_docs/api/multiscale/cosem", "scheme_docs/api/multiscale/neuroglancer_n5", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.cli.datasplit.rst", "cellmap_segmentation_challenge.cli.evaluate.rst", "cellmap_segmentation_challenge.cli.fetch_data.rst", "cellmap_segmentation_challenge.cli.predict.rst", "cellmap_segmentation_challenge.cli.process.rst", "cellmap_segmentation_challenge.cli.train.rst", "cellmap_segmentation_challenge.cli.visualize.rst", "cellmap_segmentation_challenge.config.rst", "cellmap_segmentation_challenge.evaluate.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.models.model_load.rst", "cellmap_segmentation_challenge.models.resnet.rst", "cellmap_segmentation_challenge.models.unet_model_2D.rst", "cellmap_segmentation_challenge.models.unet_model_3D.rst", "cellmap_segmentation_challenge.models.vitnet.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.process.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "cellmap_segmentation_challenge.utils.crops.rst", "cellmap_segmentation_challenge.utils.dataloader.rst", "cellmap_segmentation_challenge.utils.datasplit.rst", "cellmap_segmentation_challenge.utils.fetch_data.rst", "cellmap_segmentation_challenge.utils.loss.rst", "cellmap_segmentation_challenge.utils.security.rst", "cellmap_segmentation_challenge.visualize.rst", "index.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/api/multiscale/cosem.md", "scheme_docs/api/multiscale/neuroglancer_n5.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md"], "indexentries": {"add_layers() (in module cellmap_segmentation_challenge.visualize)": [[28, "cellmap_segmentation_challenge.visualize.add_layers", false]], "alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[22, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "analyze_script() (in module cellmap_segmentation_challenge.utils.security)": [[27, "cellmap_segmentation_challenge.utils.security.analyze_script", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[1, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.cli": [[2, "module-cellmap_segmentation_challenge.cli", false]], "cellmap_segmentation_challenge.cli.datasplit": [[3, "module-cellmap_segmentation_challenge.cli.datasplit", false]], "cellmap_segmentation_challenge.cli.evaluate": [[4, "module-cellmap_segmentation_challenge.cli.evaluate", false]], "cellmap_segmentation_challenge.cli.fetch_data": [[5, "module-cellmap_segmentation_challenge.cli.fetch_data", false]], "cellmap_segmentation_challenge.cli.predict": [[6, "module-cellmap_segmentation_challenge.cli.predict", false]], "cellmap_segmentation_challenge.cli.process": [[7, "module-cellmap_segmentation_challenge.cli.process", false]], "cellmap_segmentation_challenge.cli.train": [[8, "module-cellmap_segmentation_challenge.cli.train", false]], "cellmap_segmentation_challenge.cli.visualize": [[9, "module-cellmap_segmentation_challenge.cli.visualize", false]], "cellmap_segmentation_challenge.config": [[10, "module-cellmap_segmentation_challenge.config", false]], "cellmap_segmentation_challenge.evaluate": [[11, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[12, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[13, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[14, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[15, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[16, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[17, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.predict": [[18, "module-cellmap_segmentation_challenge.predict", false]], "cellmap_segmentation_challenge.process": [[19, "module-cellmap_segmentation_challenge.process", false]], "cellmap_segmentation_challenge.train": [[20, "module-cellmap_segmentation_challenge.train", false]], "cellmap_segmentation_challenge.utils": [[21, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[22, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[23, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[24, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[25, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[26, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.security": [[27, "module-cellmap_segmentation_challenge.utils.security", false]], "cellmap_segmentation_challenge.visualize": [[28, "module-cellmap_segmentation_challenge.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[26, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[22, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[22, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[22, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[22, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[14, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[14, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[17, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[17, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[17, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[17, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[17, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[26, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[22, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_array_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.get_array_objects", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[24, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[23, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[24, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_dataset_name() (in module cellmap_segmentation_challenge.utils.datasplit)": [[24, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_name", false]], "get_fibsem_path() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.get_fibsem_path", false]], "get_formatted_fields() (in module cellmap_segmentation_challenge.utils.datasplit)": [[24, "cellmap_segmentation_challenge.utils.datasplit.get_formatted_fields", false]], "get_group_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.get_group_objects", false]], "get_layer() (in module cellmap_segmentation_challenge.visualize)": [[28, "cellmap_segmentation_challenge.visualize.get_layer", false]], "get_raw_path() (in module cellmap_segmentation_challenge.utils.datasplit)": [[24, "cellmap_segmentation_challenge.utils.datasplit.get_raw_path", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.get_url", false]], "gt_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[22, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_url", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[22, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[13, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[13, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "load_safe_config() (in module cellmap_segmentation_challenge.utils.security)": [[27, "cellmap_segmentation_challenge.utils.security.load_safe_config", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[24, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[1, "module-cellmap_segmentation_challenge", false], [2, "module-cellmap_segmentation_challenge.cli", false], [3, "module-cellmap_segmentation_challenge.cli.datasplit", false], [4, "module-cellmap_segmentation_challenge.cli.evaluate", false], [5, "module-cellmap_segmentation_challenge.cli.fetch_data", false], [6, "module-cellmap_segmentation_challenge.cli.predict", false], [7, "module-cellmap_segmentation_challenge.cli.process", false], [8, "module-cellmap_segmentation_challenge.cli.train", false], [9, "module-cellmap_segmentation_challenge.cli.visualize", false], [10, "module-cellmap_segmentation_challenge.config", false], [11, "module-cellmap_segmentation_challenge.evaluate", false], [12, "module-cellmap_segmentation_challenge.models", false], [13, "module-cellmap_segmentation_challenge.models.model_load", false], [14, "module-cellmap_segmentation_challenge.models.resnet", false], [15, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [16, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [17, "module-cellmap_segmentation_challenge.models.vitnet", false], [18, "module-cellmap_segmentation_challenge.predict", false], [19, "module-cellmap_segmentation_challenge.process", false], [20, "module-cellmap_segmentation_challenge.train", false], [21, "module-cellmap_segmentation_challenge.utils", false], [22, "module-cellmap_segmentation_challenge.utils.crops", false], [23, "module-cellmap_segmentation_challenge.utils.dataloader", false], [24, "module-cellmap_segmentation_challenge.utils.datasplit", false], [25, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [26, "module-cellmap_segmentation_challenge.utils.loss", false], [27, "module-cellmap_segmentation_challenge.utils.security", false], [28, "module-cellmap_segmentation_challenge.visualize", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "package_submission() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.package_submission", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge.predict)": [[18, "cellmap_segmentation_challenge.predict.predict", false]], "predict_orthoplanes() (in module cellmap_segmentation_challenge.predict)": [[18, "cellmap_segmentation_challenge.predict.predict_orthoplanes", false]], "process() (in module cellmap_segmentation_challenge.process)": [[19, "cellmap_segmentation_challenge.process.process", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "resize_array() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.resize_array", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[14, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[14, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[14, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[14, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[25, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "train() (in module cellmap_segmentation_challenge.train)": [[20, "cellmap_segmentation_challenge.train.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[17, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[15, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[16, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "visualize() (in module cellmap_segmentation_challenge.visualize)": [[28, "cellmap_segmentation_challenge.visualize.visualize", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[17, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]], "zip_submission() (in module cellmap_segmentation_challenge.evaluate)": [[11, "cellmap_segmentation_challenge.evaluate.zip_submission", false]]}, "objects": {"": [[1, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[2, 0, 0, "-", "cli"], [10, 0, 0, "-", "config"], [11, 0, 0, "-", "evaluate"], [12, 0, 0, "-", "models"], [18, 0, 0, "-", "predict"], [19, 0, 0, "-", "process"], [20, 0, 0, "-", "train"], [21, 0, 0, "-", "utils"], [28, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.cli": [[3, 0, 0, "-", "datasplit"], [4, 0, 0, "-", "evaluate"], [5, 0, 0, "-", "fetch_data"], [6, 0, 0, "-", "predict"], [7, 0, 0, "-", "process"], [8, 0, 0, "-", "train"], [9, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.evaluate": [[11, 1, 1, "", "package_submission"], [11, 1, 1, "", "resize_array"], [11, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [11, 1, 1, "", "save_numpy_class_labels_to_zarr"], [11, 1, 1, "", "score_instance"], [11, 1, 1, "", "score_label"], [11, 1, 1, "", "score_semantic"], [11, 1, 1, "", "score_submission"], [11, 1, 1, "", "score_volume"], [11, 1, 1, "", "unzip_file"], [11, 1, 1, "", "zip_submission"]], "cellmap_segmentation_challenge.models": [[13, 0, 0, "-", "model_load"], [14, 0, 0, "-", "resnet"], [15, 0, 0, "-", "unet_model_2D"], [16, 0, 0, "-", "unet_model_3D"], [17, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[13, 1, 1, "", "load_best_val"], [13, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[14, 2, 1, "", "ResNet"], [14, 2, 1, "", "Resnet2D"], [14, 2, 1, "", "Resnet3D"], [14, 2, 1, "", "ResnetBlock2D"], [14, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[14, 3, 1, "", "build_conv_block"], [14, 3, 1, "", "crop"], [14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[14, 3, 1, "", "build_conv_block"], [14, 3, 1, "", "crop"], [14, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[15, 2, 1, "", "DoubleConv"], [15, 2, 1, "", "Down"], [15, 2, 1, "", "OutConv"], [15, 2, 1, "", "UNet_2D"], [15, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[15, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[16, 2, 1, "", "DoubleConv"], [16, 2, 1, "", "Down"], [16, 2, 1, "", "OutConv"], [16, 2, 1, "", "UNet_3D"], [16, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[16, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[17, 2, 1, "", "Attention"], [17, 2, 1, "", "Block"], [17, 2, 1, "", "CNNEncoder"], [17, 2, 1, "", "Conv3dReLU"], [17, 2, 1, "", "DecoderBlock"], [17, 2, 1, "", "DecoderCup"], [17, 2, 1, "", "DoubleConv"], [17, 2, 1, "", "Down"], [17, 2, 1, "", "Embeddings"], [17, 2, 1, "", "Encoder"], [17, 2, 1, "", "Mlp"], [17, 2, 1, "", "RegistrationHead"], [17, 2, 1, "", "Transformer"], [17, 2, 1, "", "ViTVNet"], [17, 1, 1, "", "get_3DReg_config"], [17, 1, 1, "", "np2th"], [17, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[17, 3, 1, "", "forward"], [17, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[17, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.predict": [[18, 1, 1, "", "predict"], [18, 1, 1, "", "predict_orthoplanes"]], "cellmap_segmentation_challenge.process": [[19, 1, 1, "", "process"]], "cellmap_segmentation_challenge.train": [[20, 1, 1, "", "train"]], "cellmap_segmentation_challenge.utils": [[22, 0, 0, "-", "crops"], [23, 0, 0, "-", "dataloader"], [24, 0, 0, "-", "datasplit"], [25, 0, 0, "-", "fetch_data"], [26, 0, 0, "-", "loss"], [27, 0, 0, "-", "security"]], "cellmap_segmentation_challenge.utils.crops": [[22, 2, 1, "", "CropRow"], [22, 1, 1, "", "fetch_manifest"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[22, 4, 1, "", "alignment"], [22, 4, 1, "", "dataset"], [22, 4, 1, "", "em_url"], [22, 3, 1, "", "from_csv_row"], [22, 4, 1, "", "gt_url"], [22, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.dataloader": [[23, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[24, 1, 1, "", "get_csv_string"], [24, 1, 1, "", "get_dataset_counts"], [24, 1, 1, "", "get_dataset_name"], [24, 1, 1, "", "get_formatted_fields"], [24, 1, 1, "", "get_raw_path"], [24, 1, 1, "", "make_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[25, 1, 1, "", "copy_store"], [25, 1, 1, "", "get_array_objects"], [25, 1, 1, "", "get_chunk_keys"], [25, 1, 1, "", "get_fibsem_path"], [25, 1, 1, "", "get_group_objects"], [25, 1, 1, "", "get_store_url"], [25, 1, 1, "", "get_url"], [25, 1, 1, "", "partition_copy_store"], [25, 1, 1, "", "read_group"], [25, 1, 1, "", "resolve_em_url"], [25, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[26, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[26, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.security": [[27, 1, 1, "", "analyze_script"], [27, 1, 1, "", "load_safe_config"]], "cellmap_segmentation_challenge.visualize": [[28, 1, 1, "", "add_layers"], [28, 1, 1, "", "get_layer"], [28, 1, 1, "", "visualize"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [28, 34], "0": [0, 11, 17, 20, 23, 24, 29, 34, 36], "0001": 20, "03385": 14, "1": [0, 14, 17, 20, 23, 24, 29, 36], "10": [0, 36], "1000": [20, 23], "11": [29, 34], "12": [11, 18, 19, 24], "128": [11, 17, 20], "1512": 14, "16": [0, 34, 36], "180": [20, 23], "1a": 29, "2": [0, 11, 14, 17, 18, 29, 34, 36], "2019": 34, "234": 29, "236": 29, "2d": [18, 23, 29, 34], "2d_resnet": 20, "2d_unet": 20, "2x2": 34, "3": [11, 17, 18, 19, 20, 24, 29], "3d": [11, 18, 23, 29], "3d_resnet": 20, "3d_unet": 20, "4": [0, 11, 36], "42": 20, "5": [0, 20, 23, 34, 36], "5d": 18, "6": 14, "64": 14, "7": [11, 18, 19, 24], "8": [0, 20, 34, 36], "8x8x8": 29, "8x8x8nm": 29, "A": [11, 14, 18, 19, 22, 24, 29, 34], "And": [0, 36], "As": [29, 34], "At": 34, "But": [0, 34, 36], "By": [24, 34], "For": [0, 11, 23, 29, 34, 36], "If": [20, 24, 28, 29, 34], "In": [0, 34, 36], "It": 18, "OR": 11, "The": [0, 11, 13, 18, 19, 20, 22, 24, 25, 28, 29, 34, 36], "There": 29, "These": 25, "To": [0, 29, 34, 36], "With": 34, "_": [11, 20, 34], "_loss": 26, "_weightedloss": 26, "abbrevi": 34, "abl": 34, "about": 34, "abov": [0, 29, 34, 36], "access": [29, 34], "accord": 34, "account": 29, "accuraci": 11, "acquir": 34, "acronym": 34, "across": 11, "activ": [14, 29], "add": 28, "add_lay": [28, 30], "addit": 34, "addition": [29, 34], "address": [0, 34, 36], "adjac": 34, "adopt": 34, "advanc": 29, "advent": 34, "after": [20, 27, 29, 35], "afterward": [15, 16, 17, 26], "against": [0, 11, 36], "aic_desmosom": 34, "aim": 34, "align": 22, "all": [11, 15, 16, 17, 24, 25, 26, 28, 29, 34], "allow": 29, "along": [29, 34], "alreadi": [18, 19, 20, 29, 34], "also": [0, 29, 34, 36], "altern": 34, "although": [15, 16, 17, 26], "alwai": [23, 29], "amazon": 34, "amount": 34, "an": [11, 13, 19, 20, 28, 29, 34], "analysi": 34, "analyz": 27, "analyze_script": [27, 30], "angl": 23, "ani": [0, 18, 19, 20, 23, 29, 34, 36], "annot": [29, 31], "anoth": 34, "anyon": 34, "anyth": 20, "apart": 34, "append": 11, "appli": [14, 20, 23, 29, 34], "applic": [0, 34, 36], "ar": [0, 20, 24, 29, 34, 36], "arang": [0, 36], "arbitrari": 19, "architectur": 20, "argument": [20, 29], "around": 34, "arr": 11, "arrai": [0, 11, 19, 23, 25, 29, 36], "array_info": 23, "art": 34, "arxiv": 14, "assign": 29, "assum": [29, 34], "ast": 27, "attempt": [0, 36], "attent": [17, 30], "attr": [0, 36], "attract": 34, "attribut": [0, 34, 36], "avail": [29, 34], "averag": [18, 34], "ax": [0, 20, 23, 36], "axi": [23, 34], "b": 29, "backend": 34, "background": [11, 29, 34], "base": [0, 11, 29, 34, 36], "base_path": 24, "basestor": 25, "bash": 29, "batch": [20, 23, 29], "batch_siz": [18, 19, 20, 23, 25], "becam": 34, "becaus": [0, 34, 36], "been": 34, "befor": [14, 29, 34], "beginn": 29, "being": [24, 25], "below": 29, "best": [13, 20], "better": [13, 34], "beyond": [29, 34], "bilinear": 15, "binari": [11, 29], "bit": 34, "block": [14, 17, 18, 30, 34], "bool": [13, 14, 18, 19, 24], "boolean": [27, 29], "border": 29, "both": [15, 16, 17, 26, 29], "boundlogg": 25, "branch": 35, "brows": 34, "browser": 29, "bucket": 34, "build": 34, "build_conv_block": 14, "built": 29, "bulk": 34, "c": [0, 29, 34, 36], "call": [15, 16, 17, 18, 20, 26, 27, 29, 34], "came": 34, "campu": [0, 34, 36], "can": [0, 18, 20, 28, 29, 34, 36], "cannot": 34, "care": [15, 16, 17, 26], "cd": 29, "cell": [11, 29, 34], "cellmap": [11, 18, 19, 25, 34, 35], "cellmap_schema": [0, 31, 32, 33, 36], "cellmap_segmentation_challeng": [29, 30], "cellmapdataload": 23, "cellmaplosswrapp": [26, 30], "cellular": 34, "center": 14, "certain": 34, "challeng": 11, "chang": [34, 35], "channel": 14, "checkpoint": [13, 20, 29], "chosen": [23, 34], "chunk": [0, 19, 25, 36], "clariti": 29, "class": [0, 11, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 29, 34, 36], "classmethod": 22, "cli": [29, 30], "client": 34, "clone": 35, "cloud": [0, 34, 36], "cnnencod": [17, 30], "coarsen": 34, "coarser": 34, "code": [34, 35], "coicind": 34, "coin": 34, "collabor": 34, "collect": 34, "com": [29, 35], "combin": 11, "combined_scor": 11, "come": [0, 34, 36], "comma": [18, 19], "command": [0, 29, 36], "common": 34, "commun": 34, "compactli": 34, "compar": 29, "complet": 34, "compli": [0, 34, 36], "complic": 34, "compon": 29, "compress": 34, "compressor": [0, 36], "compris": 34, "comput": [15, 16, 17, 18, 26, 29], "config": [17, 18, 19, 20, 29, 30], "config_path": [18, 19, 20, 27], "configur": [18, 19, 20, 27, 29], "confirm": [0, 36], "connect": [14, 29], "consist": 34, "constraint": 34, "construct": [14, 20], "constructor": 20, "consum": [0, 34, 36], "contain": [19, 20, 23, 29, 34], "contigu": 34, "continu": 34, "contribut": 29, "conv": [14, 17], "conv3drelu": [17, 30], "conveni": [29, 34], "convent": [0, 34, 36], "convention": 34, "convert": [17, 29, 34], "convolut": 14, "copi": [25, 34], "copy_stor": [25, 30], "core": 25, "corner": 34, "corpuscl": 34, "correct": [29, 34], "correctli": [0, 34, 36], "correspond": [11, 19, 29], "cosem": [0, 32, 36], "cost": 34, "could": [23, 34], "count": 24, "cover": 34, "creat": [11, 22, 25, 29, 34], "crop": [11, 14, 18, 19, 24, 25, 28, 29, 30], "crop_nam": 24, "crop_path": [24, 25], "croprow": [22, 30], "csc": 29, "csv": [20, 22, 24], "csv_path": 24, "cuda": 23, "curl": 29, "current": 34, "custom": 29, "d": 29, "data": [0, 11, 14, 18, 19, 20, 23, 24, 25, 28, 34, 36], "data_d": [0, 36], "data_path": 28, "dataclass": 22, "dataload": [20, 30], "datapath": 24, "dataset": [0, 11, 18, 19, 20, 22, 24, 28, 29, 36], "dataset_nam": 28, "dataset_writer_kwarg": 18, "datasplit": [20, 23, 30], "datasplit_path": [20, 23], "date": 34, "de": 20, "decid": 34, "decis": 34, "declar": 34, "decoderblock": [17, 30], "decodercup": [17, 30], "deem": 34, "default": [14, 18, 19, 20, 24, 25, 28, 29], "defin": [0, 15, 16, 17, 19, 20, 23, 26, 29, 34, 36], "denot": 34, "depend": [29, 34, 35], "depict": 34, "deriv": 34, "describ": [29, 34], "design": [29, 34], "desir": 11, "dest": 25, "dest_stor": 25, "detail": 34, "detect": 27, "develop": [0, 34, 36], "devic": 23, "dice": 11, "dice_scor": 11, "dict": [11, 18, 24], "dictionari": [11, 20, 23, 24], "did": [0, 34, 36], "differ": 34, "dim": 14, "dimens": [0, 14, 34, 36], "dimension_ord": [0, 36], "dimension_separ": [0, 36], "directli": 34, "directori": [11, 13, 29, 34, 35], "disk": [0, 36], "displai": 34, "disrupt": 34, "distanc": [11, 34], "distinct": 34, "distinguish": 34, "distribut": 34, "divid": 34, "do": [0, 24, 29, 34, 36], "do_orthoplan": 18, "document": [20, 29, 34, 35], "doe": [20, 34], "doubleconv": [15, 16, 17, 30], "down": [15, 16, 17, 30], "downsampl": 14, "downscal": 34, "dry_run": 24, "dtype": [0, 36], "dure": [29, 34], "e": [28, 29, 34], "each": [11, 18, 20, 23, 24, 29, 34], "earli": 34, "earlier": [0, 36], "easi": 29, "edit": 29, "effort": 34, "egment": 34, "either": [23, 29], "electron": 34, "ellular": 34, "em": [0, 24, 29, 34, 36], "em_source_path": 25, "em_source_root": 25, "em_url": 22, "embed": [17, 30], "emit": 34, "encod": [17, 30], "end": [11, 29, 34], "endo": 11, "enorm": 34, "ensur": 34, "entail": 34, "entir": [18, 19], "epoch": [20, 23], "equal": 34, "er": [20, 29], "er_palm": 34, "era": 34, "error": [0, 36], "especi": 34, "essenti": 34, "estim": 34, "etc": [11, 29, 34], "evalu": [29, 30], "everi": [15, 16, 17, 26, 34], "exampl": [11, 23, 29, 34], "except": 29, "exclud": [0, 36], "execut": 29, "exist": [13, 18, 19, 20, 25, 29, 34], "expect": 18, "explain": 34, "express": 34, "extend": 34, "extens": 29, "extra": 29, "f": [0, 36], "face": 34, "factor": 34, "fail": [0, 36], "fals": [11, 14, 15, 16, 17, 18, 19, 24], "far": 34, "fastest": 29, "featur": [17, 34], "feel": 34, "fetch": [22, 29], "fetch_data": 30, "fetch_manifest": [22, 30], "few": 34, "fib": [25, 34], "fibsem": [0, 24, 25, 34, 36], "field": 24, "file": [0, 11, 18, 19, 20, 22, 23, 24, 29, 34, 36], "filenam": [11, 29], "filepath": 27, "filesystem": 29, "fill_valu": [0, 36], "filter": [0, 29, 36], "find": [24, 34], "fine": 34, "first": [29, 34], "flag": 29, "flexibl": 29, "flip": [0, 36], "float": [11, 23, 24], "fluent": 34, "fluoresc": 34, "folder": 29, "follow": [0, 11, 29, 34, 36], "foo": [0, 36], "footprint": 34, "forc": [24, 34], "force_all_class": 24, "form": 34, "formal": [0, 36], "format": [0, 18, 19, 24, 36], "former": [15, 16, 17, 26], "forward": [14, 15, 16, 17, 26], "found": [24, 29, 34], "freedom": [0, 36], "from": [0, 13, 18, 20, 22, 23, 24, 25, 28, 29, 34, 36], "from_arrai": [0, 36], "from_csv_row": 22, "front": 34, "full": 18, "function": [11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 34], "further": 34, "futur": 34, "g": 34, "gener": [11, 20, 25, 29, 34], "generos": 34, "geometr": 11, "get": [23, 24, 25, 28], "get_3dreg_config": [17, 30], "get_array_object": [25, 30], "get_chunk_kei": [25, 30], "get_csv_str": [24, 30], "get_dataload": [23, 30], "get_dataset_count": [24, 30], "get_dataset_nam": [24, 30], "get_fibsem_path": [25, 30], "get_formatted_field": [24, 30], "get_group_object": [25, 30], "get_lay": [28, 30], "get_raw_path": [24, 30], "get_store_url": [25, 30], "get_url": [25, 30], "git": [29, 35], "github": [29, 34, 35], "give": [0, 34, 36], "given": [14, 18, 23, 24, 29], "global": 29, "goal": 34, "googl": 34, "grid": 34, "ground": 11, "ground_truth": 11, "groundtruth": [24, 28, 29], "group": [0, 25, 34, 36], "group_model": [0, 36], "groupmetadata": [0, 36], "grown": 34, "gt": [0, 28, 29, 34, 36], "gt_url": 22, "guid": [0, 36], "ha": 34, "hand": 34, "happen": 34, "hausdorff_distance_max": 11, "haussdorf": 11, "haussdorf_dist": 11, "have": [29, 34], "hela": 34, "help": 29, "here": [0, 29, 34, 36], "hidden_st": 17, "hierachi": 34, "hierarchi": [29, 34], "highest": 34, "highli": 29, "histor": 34, "histori": 34, "home": 34, "hook": [15, 16, 17, 26], "host": 34, "hostedtoolcach": [11, 18, 19, 24], "how": [0, 29, 36], "howev": 34, "http": [14, 29, 35], "human": 34, "hwio": 17, "hyperparamet": 20, "i": [0, 11, 13, 14, 18, 19, 20, 23, 24, 27, 28, 29, 36], "i8": [0, 36], "icroscopi": 34, "id": [22, 29], "identifi": 34, "ignor": [15, 16, 17, 20, 26], "imag": [0, 14, 28, 36], "imageri": 34, "img_siz": 17, "immut": 34, "impair": 34, "implement": [14, 34], "import": [0, 27, 36], "improv": 29, "in_channel": [15, 16, 17], "includ": [20, 24, 34], "independ": 20, "index": 29, "indic": [0, 27, 34, 36], "individu": 34, "induc": 34, "inf": 11, "info": 23, "inform": [20, 29, 34], "initi": [14, 15, 16, 17, 20, 26], "inner_arrai": 25, "input": [0, 11, 14, 18, 19, 20, 23, 36], "input_array_info": [19, 20, 23], "input_id": 17, "input_nc": 14, "input_path": 19, "input_search_path": 11, "insid": 34, "instal": [29, 35], "instanc": [11, 15, 16, 17, 26, 29, 34], "instance_class": 11, "instancenorm": 14, "instancenorm2d": 14, "instancenorm3d": 14, "instead": [15, 16, 17, 26, 34], "institut": 34, "instruct": 29, "int": [11, 14, 18, 22, 23, 28], "integ": 28, "intend": 34, "inter": 34, "interact": [29, 34], "interest": 34, "intern": [15, 16, 17, 26, 34], "intersect": 11, "introduc": 34, "invent": 34, "involv": 34, "invovl": 23, "iou": 11, "issu": [0, 27, 36], "iter": [20, 23, 25], "iterations_per_epoch": [20, 23], "its": [27, 34], "janelia": [0, 25, 29, 34, 35, 36], "jpeg": 34, "jpg": 34, "jrc": 34, "jrc_cos7": [29, 34], "jrc_dauer": 34, "jrc_hela": [0, 34, 36], "jrc_macrophag": 34, "jrc_mu": 34, "json": [11, 34], "just": [24, 29], "k": 29, "keep": 34, "kei": [25, 34], "kept": 34, "kernel_s": 17, "keyword": 20, "kind": 28, "known": 34, "kwarg": [14, 25, 26], "l": 29, "label": [11, 18, 19, 24, 29, 34], "label1": 11, "label2": 11, "label3": 11, "label_nam": [11, 29], "label_scor": 11, "larg": [0, 18, 34, 36], "larger": 34, "largest": 34, "larva": 34, "latest": [13, 20], "latter": [15, 16, 17, 26], "layer": [14, 28], "layer_typ": 28, "ld": 11, "learn": [20, 29, 34], "learning_r": 20, "least": [24, 34], "lection": 34, "led": 34, "len": 11, "less": 34, "level": 34, "lib": [11, 18, 19, 24], "librari": [0, 36], "light": 34, "like": [0, 23, 29, 34, 36], "limit": 34, "line": [0, 29, 36], "linear": 14, "link": 34, "list": [11, 18, 19, 20, 23, 24, 25, 27, 28, 29, 34], "lm": 34, "lm_488": 34, "load": [13, 20, 23, 27, 34], "load_best_v": [13, 30], "load_latest": [13, 30], "load_model": 20, "load_safe_config": [27, 30], "local": [0, 29, 34, 35, 36], "localvolum": 28, "locat": [0, 29, 34, 36], "log": [13, 20, 25, 29], "logdir": [20, 29], "logs_save_path": [13, 20], "long": 24, "longer": 34, "look": 34, "loss": [29, 30], "loss_fn": 26, "lossi": 34, "lot": 34, "low_is_best": 13, "lower": 13, "lt": [0, 34, 36], "lyso": 11, "m": 34, "machin": 34, "mai": [20, 25, 29, 34], "main": [34, 35], "maintain": 34, "make": [24, 29, 34, 35], "make_datasplit_csv": [24, 30], "mamba": 29, "manag": 35, "mani": 34, "manifest": 22, "manual": 29, "map": [23, 34], "mask": 29, "massiv": 34, "match": [14, 29], "matter": 34, "md": [20, 29], "mean": [11, 34], "member": [0, 36], "mere": 34, "merg": 29, "mesh": 34, "messag": [0, 36], "metadata": [0, 36], "metamorphos": 34, "method": [0, 34, 36], "metric": 29, "micro": 29, "micromamba": 29, "microscopi": 34, "mid_channel": [15, 16, 17], "might": 34, "migrat": 34, "mirror": [20, 23], "mito": [11, 24, 29], "mito_pr": 34, "mito_seg": 34, "mitochondria": 34, "mkdoc": 35, "mlp": [17, 30], "modal": 34, "mode": 29, "model": [0, 18, 20, 30, 34, 36], "model_dump": [0, 36], "model_kwarg": 20, "model_load": [29, 30], "model_nam": 20, "model_save_path": [13, 20], "model_to_load": 20, "modif": 25, "modul": [1, 2, 12, 13, 14, 15, 16, 17, 18, 20, 21, 26, 29], "monitor": [20, 29], "more": [20, 29], "motiv": 34, "mous": 34, "move": 34, "mt": 11, "much": [0, 36], "mulitscal": [0, 36], "multi": [0, 34, 36], "multiscal": [0, 32, 33, 36], "multscal": 34, "must": [23, 34], "n": 29, "n5": [29, 34], "n_block": 14, "n_channel": [15, 16, 17], "n_class": [15, 16], "n_downsampl": 14, "name": [0, 11, 20, 24, 28, 29, 36], "navig": [29, 35], "ndarrai": 11, "ndim": 14, "nearest": 34, "need": [0, 11, 15, 16, 17, 20, 26, 29, 34, 36], "needlessli": 34, "nesteddirectorystor": [0, 36], "net": [15, 16, 17], "neuroglanc": [28, 29, 34], "neuroglancer_n5": [0, 33, 36], "never": 34, "new": [29, 34], "newer": 34, "ngf": 14, "ngff": 34, "nm": [0, 29, 36], "nn": [13, 14, 15, 16, 17, 26], "node": 25, "non": [14, 34], "none": [0, 11, 14, 15, 16, 17, 19, 20, 23, 25, 28, 36], "norm_lay": 14, "normal": [11, 14], "normalized_haussdorf_dist": 11, "note": [0, 29, 34, 36], "novo": 20, "np": [0, 11, 36], "np2th": [17, 30], "nuc": [11, 20, 24, 29], "num_voxel": 11, "number": [11, 14, 18, 19, 20, 23, 28, 29, 34], "numpi": [0, 11, 29, 34, 36], "o": [0, 34, 36], "object": [13, 22, 25, 29, 34], "obviou": 34, "offer": 29, "often": 34, "oihw": 17, "old": 34, "older": 34, "om": 34, "onc": [29, 34], "one": [15, 16, 17, 24, 26, 29, 34], "onli": [24, 34], "onlin": 29, "open": [0, 29, 34, 36], "openorganel": 34, "oper": [0, 34, 36], "opt": [11, 18, 19, 24], "optim": 20, "option": [18, 19, 20, 23, 24, 28, 29], "order": [0, 36], "org": 14, "organ": [0, 34, 36], "organel": 34, "origin": [14, 34], "orthogon": 18, "other": [19, 20, 34], "otherwis": [24, 29], "our": [0, 34, 36], "out": [0, 34, 36], "out_channel": [15, 16, 17], "outconv": [15, 16, 30], "outer_arrai": 25, "output": [11, 14, 18, 19, 26], "output_nc": 14, "output_path": [11, 18, 19], "over": [11, 25], "overall_scor": 11, "overhaul": 34, "overlap": 34, "overridden": [15, 16, 17, 26], "overwrit": [11, 18, 19, 29], "own": 34, "pacinian": 34, "pacininan": 34, "pack": 29, "packag": [0, 11, 29, 35, 36], "package_submiss": [11, 30], "pad": [11, 17, 29], "pad_valu": 11, "padding_typ": 14, "page": 29, "paper": [14, 34], "parallel": 34, "param": 14, "paramet": [0, 11, 13, 18, 19, 20, 22, 23, 24, 25, 26, 28, 34, 36], "paramt": [0, 36], "parlanc": 34, "pars": 34, "part": [15, 16, 34], "parti": 34, "particular": 29, "partit": 34, "partition_copy_stor": [25, 30], "pass": [0, 15, 16, 17, 20, 26, 36], "path": [0, 11, 13, 18, 19, 20, 23, 24, 25, 28, 29, 34, 35, 36], "pdf": 14, "per": [20, 23, 29], "perform": [0, 15, 16, 17, 26, 36], "perox": 11, "physic": 34, "piec": 34, "pip": [0, 29, 36], "pixelresolut": [0, 34, 36], "place": 13, "placehold": [11, 18, 19], "plan": 34, "plane": 18, "platform": 34, "pm": 29, "poetri": 35, "pool": 25, "portal": [29, 34], "possibli": 17, "potenti": [27, 34], "pre": 20, "precomput": 34, "pred": 11, "pred_label": 11, "pred_label_path": 11, "pred_volume_path": 11, "predict": [11, 19, 20, 28, 30, 34], "predict_2d": 29, "predict_3d": 29, "predict_orthoplan": [18, 30], "predictions_path": [18, 19], "prefix": 34, "present": [0, 11, 24, 36], "pressur": 34, "preview": 35, "previou": 34, "primari": 34, "principl": 34, "print": [0, 36], "probabl": [23, 24], "problem": [0, 34, 36], "process": [11, 28, 30], "process_2d": 29, "process_3d": 29, "process_func": [19, 29], "processed_path": 19, "produc": [0, 34, 36], "product": 34, "program": 34, "progress": [20, 29], "projct": 34, "project": [0, 34, 36], "proport": 20, "provid": [0, 20, 23, 29, 34, 36], "pth": [20, 29], "public": 34, "publish": 34, "pull": 35, "purpos": 34, "put": [0, 36], "py": [18, 19, 29], "pydant": [0, 36], "pyramid": 34, "pytest": 35, "python": [0, 11, 18, 19, 20, 24, 29, 34, 36], "python3": [11, 18, 19, 24], "pytorch": 20, "r": 29, "rais": [0, 36], "ran": 34, "randint": 11, "random": [11, 20, 34], "random_se": 20, "randomli": 23, "rang": [0, 11, 23, 36], "rarer": 34, "rate": 20, "raw": [24, 29, 34], "raw_nam": 24, "raw_path": 24, "re": [11, 29], "read": 34, "read_group": [25, 30], "readabl": 34, "readm": [20, 29], "reason": 34, "recip": [15, 16, 17, 26], "recommend": 29, "recon": 24, "reconstruct": 25, "redirect": 34, "reflect": [14, 20], "region": [25, 34], "regist": [15, 16, 17, 26], "registrationhead": [17, 30], "rel": [0, 25, 34, 36], "relu": 14, "remov": 34, "renam": 34, "render": 35, "replac": 11, "replic": 14, "repo": 29, "repositori": [34, 35], "repres": [22, 34], "reproduc": 20, "request": [24, 29, 35], "requir": [11, 19, 29, 34], "resblock": 14, "research": [0, 34, 36], "reshap": [0, 36], "resiz": 11, "resize_arrai": [11, 30], "resnet": 30, "resnet2d": [14, 30], "resnet3d": [14, 30], "resnetblock2d": [14, 30], "resnetblock3d": [14, 30], "resolut": 29, "resolv": 25, "resolve_em_url": [25, 30], "resourc": 34, "respect": [19, 24, 29, 34], "respresent": 34, "result": [0, 11, 25, 29, 34, 36], "result_fil": 11, "retriev": 29, "return": [11, 14, 19, 20, 22, 23, 24, 25, 27, 28, 29], "rganel": 34, "root": 34, "rotat": [20, 23], "row": 22, "run": [15, 16, 17, 20, 26, 29, 35], "s0": [0, 34, 36], "s1": [0, 34, 36], "s2": 34, "s3": [0, 36], "saalfeldlab": 34, "safe": [27, 34], "safeti": 27, "same": [18, 20, 29, 34], "sampl": [29, 34], "satisfi": 34, "save": [11, 18, 19, 20, 29, 34], "save_numpy_binary_to_zarr": [11, 29], "save_numpy_class_arrays_to_zarr": [11, 30], "save_numpy_class_labels_to_zarr": [11, 30], "save_numpy_labels_to_zarr": [11, 29], "save_path": 11, "scalar": 34, "scale": [0, 19, 20, 23, 29, 34, 36], "scene": 34, "schema": [29, 35], "scheme": 34, "score": [11, 13], "score_inst": [11, 30], "score_label": [11, 30], "score_semant": [11, 30], "score_submiss": [11, 30], "score_volum": [11, 30], "screenshot": 34, "script": [19, 20, 27, 29], "scriptmodul": [15, 16, 17, 26], "search": [13, 24, 29], "search_path": [13, 24], "second": 34, "section": 34, "secur": 30, "see": [0, 20, 29, 34, 36], "seed": 20, "segment": [11, 18, 19, 23, 28, 34], "select": 34, "self": 22, "sem": [25, 34], "semant": [11, 34], "separ": [18, 19, 34], "sequenc": [23, 28, 34], "serv": [29, 35], "server": 29, "servic": 34, "set": [18, 19, 20, 24, 34], "sever": 34, "sh": 29, "shape": [0, 11, 14, 18, 20, 23, 29, 34, 36], "share": [15, 16, 17, 26, 34], "shell": 29, "ship": [0, 36], "short": 34, "should": [15, 16, 17, 19, 20, 23, 26, 29, 34], "show": 29, "side": 29, "sign": 29, "silent": [15, 16, 17, 20, 26], "similar": 34, "similarli": 18, "simpl": [29, 34], "simpli": [29, 34], "sinc": [15, 16, 17, 26], "singl": [11, 29, 34], "size": [19, 20, 23, 29, 34], "skip": [14, 17], "skip_channel": 17, "slice": 25, "small": [0, 36], "smaller": [11, 34], "smooth": 34, "so": [0, 34, 36], "softwar": 34, "solv": 34, "some": 34, "sometim": 18, "sourc": [11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34], "source_stor": 25, "space": 34, "spatial": [14, 20, 23, 34], "spatial_transform": [20, 23], "special": 34, "specif": [0, 34, 36], "specifi": [11, 19, 20, 23, 29, 34], "specimen": 34, "split": [18, 20, 23], "src": 29, "stai": 34, "standard": [14, 34], "start": 34, "state": [15, 16, 17, 26], "step": 29, "still": 34, "storag": [0, 25, 34, 36], "store": [0, 25, 34, 36], "str": [11, 13, 14, 18, 19, 20, 22, 23, 24, 25, 28], "strategi": 34, "strict": 34, "stride": 17, "string": [18, 19, 20, 24, 25, 28], "structur": [0, 11, 34, 36], "style": 34, "subclass": [15, 16, 17, 26], "submiss": [11, 29], "submission_path": [11, 29], "submit": 35, "subsampl": 34, "subsequ": 34, "subset_to_slic": [25, 30], "succe": [0, 36], "success": 34, "suffix": 34, "summari": [0, 36], "suppli": 29, "support": [0, 25, 34, 36], "sure": 29, "swish": [17, 30], "system": 34, "t": 34, "take": [15, 16, 17, 19, 26, 29, 34], "taken": 34, "target": [11, 20, 23, 26, 34], "target_array_info": [19, 20, 23], "target_shap": 11, "tb": [0, 34, 36], "team": [0, 34, 36], "techniqu": 34, "technologi": 34, "tem": 34, "tensor": 26, "tensorboard": [13, 20, 29], "terabyt": [0, 36], "termin": [20, 29], "test": [0, 11, 18, 19, 35, 36], "test_volum": 11, "test_volume_nam": [11, 29], "text": [0, 36], "than": [0, 11, 34, 36], "thei": [0, 29, 34, 36], "them": [15, 16, 17, 25, 26, 29, 34], "thi": [0, 11, 15, 16, 17, 18, 20, 23, 25, 26, 29, 34, 36], "third": 34, "thoroughli": 29, "those": [0, 29, 36], "threadpoolexecutor": 25, "threshold": [29, 34], "through": 29, "thu": [29, 34], "thumbnail": 34, "time": [14, 34], "tissu": 34, "tmp": [0, 36], "to_zarr": [0, 36], "togeth": 34, "toi": [0, 36], "too": [0, 36], "tool": [0, 25, 29, 34, 36], "top": [29, 34], "torch": [13, 14, 23], "track": 34, "tracker": [0, 36], "train": [18, 23, 24, 30], "train_2d": 29, "train_3d": 29, "transform": [17, 20, 23, 30, 34], "transit": 34, "translat": 34, "transpos": [20, 23], "transpose_for_scor": 17, "trasposit": 23, "trilinear": [15, 16], "true": [13, 15, 16, 17, 18, 24, 34], "truth": 11, "truth_label": 11, "truth_path": 11, "try": 34, "tupl": [11, 22, 23, 25], "twice": 34, "two": 34, "type": [11, 14, 19, 20, 22, 23, 24, 25, 28, 34], "typic": 34, "u": [0, 15, 16, 34, 36], "uint16": [0, 34, 36], "uint8": [24, 34], "ultim": 34, "unchang": 34, "under": 34, "underscor": 34, "understand": 34, "unet_2d": [15, 30], "unet_3d": [16, 30], "unet_model_2d": [29, 30], "unet_model_3d": 30, "unformat": 24, "union": 11, "uniqu": [29, 34], "unit": [0, 34, 36], "unsaf": 27, "until": 34, "unzip": 11, "unzip_fil": [11, 30], "up": [15, 16, 30], "upath": [11, 19], "upsampl": 17, "uri": 25, "url": [0, 22, 25, 34, 36], "us": [0, 11, 18, 19, 20, 23, 24, 25, 27, 29, 34, 35, 36], "usag": [11, 24], "use_batchnorm": 17, "use_bia": 14, "use_dropout": 14, "user": [29, 34], "util": [29, 30], "v": 17, "val": [20, 23], "valid": [13, 14, 20, 23, 24, 29, 34], "validation_prob": [20, 24], "valu": [11, 23, 34], "varieti": 34, "ve": 11, "veri": 34, "verifi": 27, "version": 34, "vi": 17, "via": 34, "view": [29, 34], "viewabl": 29, "viewer": [28, 29], "visual": [30, 34], "visul": 34, "vit": 17, "vitnet": [20, 30], "vitvnet": [17, 30], "volum": [11, 18, 29, 34], "voxel": [11, 29], "wa": 34, "wai": [29, 34], "want": [29, 34], "wasn": 34, "watersh": 29, "we": [0, 14, 29, 34, 36], "web": 34, "weight": [13, 17, 29], "welcom": 29, "well": [20, 29, 34], "were": 34, "what": [0, 36], "when": [0, 11, 23, 34, 36], "where": [0, 34, 36], "whereev": 34, "whether": [0, 13, 18, 19, 27, 29, 36], "which": [0, 20, 24, 25, 29, 34, 36], "while": [15, 16, 17, 26, 34], "wide": [0, 34, 36], "window": [29, 34], "wish": 29, "within": [15, 16, 17, 23, 26, 34], "word": 34, "work": [0, 29, 34, 36], "worker": 23, "workflow": 34, "would": [0, 34, 36], "write": [0, 24, 34, 36], "written": 24, "x": [0, 14, 15, 16, 17, 18, 20, 23, 36], "x1": [15, 16], "x2": [15, 16], "x64": [11, 18, 19, 24], "y": [0, 18, 20, 23, 29, 36], "yarl": 22, "year": 34, "yet": 34, "yield": 18, "you": [0, 29, 34, 36], "your": 35, "z": [18, 23], "zarr": [0, 11, 18, 19, 24, 25, 28, 29, 34, 36], "zarr_path": 11, "zarr_vers": [0, 36], "zero": 14, "zip": [11, 29], "zip_path": 11, "zip_submiss": [11, 30], "zoom": 34}, "titles": ["CellMap Schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.cli.datasplit", "cellmap_segmentation_challenge.cli.evaluate", "cellmap_segmentation_challenge.cli.fetch_data", "cellmap_segmentation_challenge.cli.predict", "cellmap_segmentation_challenge.cli.process", "cellmap_segmentation_challenge.cli.train", "cellmap_segmentation_challenge.cli.visualize", "cellmap_segmentation_challenge.config", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.process", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.security", "cellmap_segmentation_challenge.visualize", "CellMap Segmentation Challenge", "src", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas"], "titleterms": {"ad": 35, "align": 34, "an": [0, 36], "api": 29, "arrai": 34, "cellmap": [0, 29, 36], "cellmap_segmentation_challeng": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "challeng": 29, "check": [0, 36], "chunk": 34, "cli": [0, 2, 3, 4, 5, 6, 7, 8, 9, 36], "clone": 29, "config": 10, "contain": [0, 36], "content": 29, "contribut": [0, 36], "coordin": 34, "cosem": 34, "creat": [0, 36], "crop": 22, "data": 29, "dataload": 23, "dataset": 34, "datasplit": [3, 24], "download": 29, "downsampl": 34, "environ": 29, "evalu": [4, 11], "exampl": [0, 36], "fetch_data": [5, 25], "final": 29, "format": [29, 34], "get": 29, "hierarchi": [0, 36], "i": 34, "imag": 34, "inspect": [0, 36], "instal": [0, 36], "layout": 34, "link": 29, "loss": 26, "metadata": 34, "model": [12, 13, 14, 15, 16, 17, 29], "model_load": 13, "multipl": 34, "multiresolut": 34, "multiscal": 34, "n5": [0, 36], "name": 34, "neuroglanc": [0, 36], "outlin": 34, "post": 29, "predict": [6, 18, 29], "process": [7, 19, 29], "project": 35, "repositori": 29, "resnet": 14, "s3": 34, "schema": [0, 36], "secur": 27, "segment": 29, "set": 29, "src": 30, "start": 29, "structur": 29, "submit": 29, "test": 29, "thi": 35, "train": [8, 20, 29], "unet_model_2d": 15, "unet_model_3d": 16, "up": 29, "util": [21, 22, 23, 24, 25, 26, 27], "valid": [0, 36], "visual": [9, 28, 29], "vitnet": 17, "what": 34, "your": 29}})