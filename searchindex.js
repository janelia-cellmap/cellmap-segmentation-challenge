Search.setIndex({"alltitles": {"API": [[20, "api"]], "Adding to this project": [[26, null]], "COSEM": [[25, "cosem"]], "CellMap Schemas": [[0, null], [27, null]], "CellMap Segmentation Challenge": [[20, null]], "Chunked array format": [[25, "chunked-array-format"]], "Clone the repository": [[20, "clone-the-repository"]], "Contents:": [[20, null]], "Contributing": [[0, "contributing"], [27, "contributing"]], "Dataset names": [[25, "dataset-names"]], "Datasets on S3": [[25, "datasets-on-s3"]], "Download the data": [[20, "download-the-data"]], "Downsampling and coordinates": [[25, "downsampling-and-coordinates"]], "Example: creating an N5 hierarchy for Neuroglancer": [[0, "example-creating-an-n5-hierarchy-for-neuroglancer"], [27, "example-creating-an-n5-hierarchy-for-neuroglancer"]], "Example: validating a container with the cli": [[0, "example-validating-a-container-with-the-cli"], [27, "example-validating-a-container-with-the-cli"]], "Getting started": [[20, "getting-started"]], "Image layout": [[25, "image-layout"]], "Installation": [[0, "installation"], [27, "installation"]], "Links": [[20, "links"]], "Module contents": [[2, "module-contents"]], "Multiple image alignments": [[25, "multiple-image-alignments"]], "Multiresolution image layout": [[25, "multiresolution-image-layout"]], "Multiscale image metadata": [[25, "multiscale-image-metadata"]], "Outline": [[25, null]], "Post-process model predictions": [[20, "post-process-model-predictions"]], "Predict on test data": [[20, "predict-on-test-data"]], "Repository structure": [[20, "repository-structure"]], "S3 layout": [[25, "s3-layout"]], "Set up your environment": [[20, "set-up-your-environment"]], "Submit your final predictions": [[20, "submit-your-final-predictions"]], "Submodules": [[2, "submodules"]], "Train a model": [[20, "train-a-model"]], "What is a dataset": [[25, "what-is-a-dataset"]], "cellmap-schemas check": [[0, "cellmap-schemas-check"], [27, "cellmap-schemas-check"]], "cellmap-schemas inspect": [[0, "cellmap-schemas-inspect"], [27, "cellmap-schemas-inspect"]], "cellmap_segmentation_challenge": [[1, null]], "cellmap_segmentation_challenge.cli package": [[2, null]], "cellmap_segmentation_challenge.cli.datasplit module": [[2, "cellmap-segmentation-challenge-cli-datasplit-module"]], "cellmap_segmentation_challenge.cli.evaluate module": [[2, "module-cellmap_segmentation_challenge.cli.evaluate"]], "cellmap_segmentation_challenge.cli.fetch_data module": [[2, "module-cellmap_segmentation_challenge.cli.fetch_data"]], "cellmap_segmentation_challenge.cli.predict module": [[2, "module-cellmap_segmentation_challenge.cli.predict"]], "cellmap_segmentation_challenge.cli.train module": [[2, "module-cellmap_segmentation_challenge.cli.train"]], "cellmap_segmentation_challenge.evaluate": [[3, null]], "cellmap_segmentation_challenge.models": [[4, null]], "cellmap_segmentation_challenge.models.model_load": [[5, null]], "cellmap_segmentation_challenge.models.resnet": [[6, null]], "cellmap_segmentation_challenge.models.unet_model_2D": [[7, null]], "cellmap_segmentation_challenge.models.unet_model_3D": [[8, null]], "cellmap_segmentation_challenge.models.vitnet": [[9, null]], "cellmap_segmentation_challenge.postprocess": [[10, null]], "cellmap_segmentation_challenge.predict": [[11, null]], "cellmap_segmentation_challenge.train": [[12, null]], "cellmap_segmentation_challenge.utils": [[13, null]], "cellmap_segmentation_challenge.utils.crops": [[14, null]], "cellmap_segmentation_challenge.utils.dataloader": [[15, null]], "cellmap_segmentation_challenge.utils.datasplit": [[16, null]], "cellmap_segmentation_challenge.utils.fetch_data": [[17, null]], "cellmap_segmentation_challenge.utils.loss": [[18, null]], "cellmap_segmentation_challenge.utils.visualize": [[19, null]], "src": [[21, null]]}, "docnames": ["cellmap-schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.postprocess", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.visualize", "index", "modules", "scheme_docs/api/annotation", "scheme_docs/api/multiscale/cosem", "scheme_docs/api/multiscale/neuroglancer_n5", "scheme_docs/cellmap-conventions/s3-overview", "scheme_docs/development", "scheme_docs/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["cellmap-schemas.rst", "cellmap_segmentation_challenge.rst", "cellmap_segmentation_challenge.cli.rst", "cellmap_segmentation_challenge.evaluate.rst", "cellmap_segmentation_challenge.models.rst", "cellmap_segmentation_challenge.models.model_load.rst", "cellmap_segmentation_challenge.models.resnet.rst", "cellmap_segmentation_challenge.models.unet_model_2D.rst", "cellmap_segmentation_challenge.models.unet_model_3D.rst", "cellmap_segmentation_challenge.models.vitnet.rst", "cellmap_segmentation_challenge.postprocess.rst", "cellmap_segmentation_challenge.predict.rst", "cellmap_segmentation_challenge.train.rst", "cellmap_segmentation_challenge.utils.rst", "cellmap_segmentation_challenge.utils.crops.rst", "cellmap_segmentation_challenge.utils.dataloader.rst", "cellmap_segmentation_challenge.utils.datasplit.rst", "cellmap_segmentation_challenge.utils.fetch_data.rst", "cellmap_segmentation_challenge.utils.loss.rst", "cellmap_segmentation_challenge.utils.visualize.rst", "index.rst", "modules.rst", "scheme_docs/api/annotation.md", "scheme_docs/api/multiscale/cosem.md", "scheme_docs/api/multiscale/neuroglancer_n5.md", "scheme_docs/cellmap-conventions/s3-overview.md", "scheme_docs/development.md", "scheme_docs/index.md"], "indexentries": {"alignment (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.alignment", false]], "attention (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Attention", false]], "block (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.build_conv_block", false]], "build_conv_block() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.build_conv_block", false]], "cellmap_segmentation_challenge": [[1, "module-cellmap_segmentation_challenge", false]], "cellmap_segmentation_challenge.cli.evaluate": [[2, "module-cellmap_segmentation_challenge.cli.evaluate", false]], "cellmap_segmentation_challenge.cli.fetch_data": [[2, "module-cellmap_segmentation_challenge.cli.fetch_data", false]], "cellmap_segmentation_challenge.cli.predict": [[2, "module-cellmap_segmentation_challenge.cli.predict", false]], "cellmap_segmentation_challenge.cli.train": [[2, "module-cellmap_segmentation_challenge.cli.train", false]], "cellmap_segmentation_challenge.evaluate": [[3, "module-cellmap_segmentation_challenge.evaluate", false]], "cellmap_segmentation_challenge.models": [[4, "module-cellmap_segmentation_challenge.models", false]], "cellmap_segmentation_challenge.models.model_load": [[5, "module-cellmap_segmentation_challenge.models.model_load", false]], "cellmap_segmentation_challenge.models.resnet": [[6, "module-cellmap_segmentation_challenge.models.resnet", false]], "cellmap_segmentation_challenge.models.unet_model_2d": [[7, "module-cellmap_segmentation_challenge.models.unet_model_2D", false]], "cellmap_segmentation_challenge.models.unet_model_3d": [[8, "module-cellmap_segmentation_challenge.models.unet_model_3D", false]], "cellmap_segmentation_challenge.models.vitnet": [[9, "module-cellmap_segmentation_challenge.models.vitnet", false]], "cellmap_segmentation_challenge.postprocess": [[10, "module-cellmap_segmentation_challenge.postprocess", false]], "cellmap_segmentation_challenge.utils": [[13, "module-cellmap_segmentation_challenge.utils", false]], "cellmap_segmentation_challenge.utils.crops": [[14, "module-cellmap_segmentation_challenge.utils.crops", false]], "cellmap_segmentation_challenge.utils.dataloader": [[15, "module-cellmap_segmentation_challenge.utils.dataloader", false]], "cellmap_segmentation_challenge.utils.datasplit": [[16, "module-cellmap_segmentation_challenge.utils.datasplit", false]], "cellmap_segmentation_challenge.utils.fetch_data": [[17, "module-cellmap_segmentation_challenge.utils.fetch_data", false]], "cellmap_segmentation_challenge.utils.loss": [[18, "module-cellmap_segmentation_challenge.utils.loss", false]], "cellmap_segmentation_challenge.utils.visualize": [[19, "module-cellmap_segmentation_challenge.utils.visualize", false]], "cellmaplosswrapper (class in cellmap_segmentation_challenge.utils.loss)": [[18, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper", false]], "cnnencoder (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder", false]], "conv3drelu (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Conv3dReLU", false]], "copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.copy_store", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.crop", false]], "crop() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.crop", false]], "croprow (class in cellmap_segmentation_challenge.utils.crops)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow", false]], "dataset (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.dataset", false]], "decoderblock (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock", false]], "decodercup (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderCup", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv", false]], "doubleconv (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.DoubleConv", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Down", false]], "down (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Down", false]], "down (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Down", false]], "em_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.em_url", false]], "embeddings (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Embeddings", false]], "encoder (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Encoder", false]], "fetch_manifest() (in module cellmap_segmentation_challenge.utils.crops)": [[14, "cellmap_segmentation_challenge.utils.crops.fetch_manifest", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnet3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock2d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.resnet.resnetblock3d method)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.doubleconv method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.down method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.outconv method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.unet_2d method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_2d.up method)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.doubleconv method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.down method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.outconv method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.unet_3d method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D.forward", false]], "forward() (cellmap_segmentation_challenge.models.unet_model_3d.up method)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Up.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Attention.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.block method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Block.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.cnnencoder method)": [[9, "cellmap_segmentation_challenge.models.vitnet.CNNEncoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decoderblock method)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderBlock.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.decodercup method)": [[9, "cellmap_segmentation_challenge.models.vitnet.DecoderCup.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.doubleconv method)": [[9, "cellmap_segmentation_challenge.models.vitnet.DoubleConv.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.down method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Down.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.embeddings method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Embeddings.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.encoder method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Encoder.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.mlp method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Mlp.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.transformer method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Transformer.forward", false]], "forward() (cellmap_segmentation_challenge.models.vitnet.vitvnet method)": [[9, "cellmap_segmentation_challenge.models.vitnet.ViTVNet.forward", false]], "forward() (cellmap_segmentation_challenge.utils.loss.cellmaplosswrapper method)": [[18, "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper.forward", false]], "from_csv_row() (cellmap_segmentation_challenge.utils.crops.croprow class method)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.from_csv_row", false]], "get_3dreg_config() (in module cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.get_3DReg_config", false]], "get_array_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_array_objects", false]], "get_chunk_keys() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_chunk_keys", false]], "get_csv_string() (in module cellmap_segmentation_challenge.utils.datasplit)": [[16, "cellmap_segmentation_challenge.utils.datasplit.get_csv_string", false]], "get_dataloader() (in module cellmap_segmentation_challenge.utils.dataloader)": [[15, "cellmap_segmentation_challenge.utils.dataloader.get_dataloader", false]], "get_dataset_counts() (in module cellmap_segmentation_challenge.utils.datasplit)": [[16, "cellmap_segmentation_challenge.utils.datasplit.get_dataset_counts", false]], "get_fibsem_path() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_fibsem_path", false]], "get_group_objects() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_group_objects", false]], "get_store_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_store_url", false]], "get_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.get_url", false]], "gt_url (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.gt_url", false]], "id (cellmap_segmentation_challenge.utils.crops.croprow attribute)": [[14, "cellmap_segmentation_challenge.utils.crops.CropRow.id", false]], "load_best_val() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_best_val", false]], "load_latest() (in module cellmap_segmentation_challenge.models.model_load)": [[5, "cellmap_segmentation_challenge.models.model_load.load_latest", false]], "make_datasplit_csv() (in module cellmap_segmentation_challenge.utils.datasplit)": [[16, "cellmap_segmentation_challenge.utils.datasplit.make_datasplit_csv", false]], "mlp (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Mlp", false]], "module": [[1, "module-cellmap_segmentation_challenge", false], [2, "module-cellmap_segmentation_challenge.cli.evaluate", false], [2, "module-cellmap_segmentation_challenge.cli.fetch_data", false], [2, "module-cellmap_segmentation_challenge.cli.predict", false], [2, "module-cellmap_segmentation_challenge.cli.train", false], [3, "module-cellmap_segmentation_challenge.evaluate", false], [4, "module-cellmap_segmentation_challenge.models", false], [5, "module-cellmap_segmentation_challenge.models.model_load", false], [6, "module-cellmap_segmentation_challenge.models.resnet", false], [7, "module-cellmap_segmentation_challenge.models.unet_model_2D", false], [8, "module-cellmap_segmentation_challenge.models.unet_model_3D", false], [9, "module-cellmap_segmentation_challenge.models.vitnet", false], [10, "module-cellmap_segmentation_challenge.postprocess", false], [13, "module-cellmap_segmentation_challenge.utils", false], [14, "module-cellmap_segmentation_challenge.utils.crops", false], [15, "module-cellmap_segmentation_challenge.utils.dataloader", false], [16, "module-cellmap_segmentation_challenge.utils.datasplit", false], [17, "module-cellmap_segmentation_challenge.utils.fetch_data", false], [18, "module-cellmap_segmentation_challenge.utils.loss", false], [19, "module-cellmap_segmentation_challenge.utils.visualize", false]], "np2th() (in module cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.np2th", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.OutConv", false]], "outconv (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.OutConv", false]], "partition_copy_store() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.partition_copy_store", false]], "predict() (in module cellmap_segmentation_challenge)": [[11, "cellmap_segmentation_challenge.predict", false]], "process_volume() (in module cellmap_segmentation_challenge.postprocess)": [[10, "cellmap_segmentation_challenge.postprocess.process_volume", false]], "read_group() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.read_group", false]], "registrationhead (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.RegistrationHead", false]], "rescale_volume() (in module cellmap_segmentation_challenge.postprocess)": [[10, "cellmap_segmentation_challenge.postprocess.rescale_volume", false]], "resize_volume() (in module cellmap_segmentation_challenge.postprocess)": [[10, "cellmap_segmentation_challenge.postprocess.resize_volume", false]], "resnet (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.ResNet", false]], "resnet2d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet2D", false]], "resnet3d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.Resnet3D", false]], "resnetblock2d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D", false]], "resnetblock3d (class in cellmap_segmentation_challenge.models.resnet)": [[6, "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D", false]], "resolve_em_url() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.resolve_em_url", false]], "save_numpy_class_arrays_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_arrays_to_zarr", false]], "save_numpy_class_labels_to_zarr() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.save_numpy_class_labels_to_zarr", false]], "save_result_figs() (in module cellmap_segmentation_challenge.utils.visualize)": [[19, "cellmap_segmentation_challenge.utils.visualize.save_result_figs", false]], "score_instance() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_instance", false]], "score_label() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_label", false]], "score_semantic() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_semantic", false]], "score_submission() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_submission", false]], "score_volume() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.score_volume", false]], "subset_to_slice() (in module cellmap_segmentation_challenge.utils.fetch_data)": [[17, "cellmap_segmentation_challenge.utils.fetch_data.subset_to_slice", false]], "swish() (in module cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.swish", false]], "threshold_volume() (in module cellmap_segmentation_challenge.postprocess)": [[10, "cellmap_segmentation_challenge.postprocess.threshold_volume", false]], "train() (in module cellmap_segmentation_challenge)": [[12, "cellmap_segmentation_challenge.train", false]], "transformer (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.Transformer", false]], "transpose_for_scores() (cellmap_segmentation_challenge.models.vitnet.attention method)": [[9, "cellmap_segmentation_challenge.models.vitnet.Attention.transpose_for_scores", false]], "unet_2d (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D", false]], "unet_3d (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D", false]], "unzip_file() (in module cellmap_segmentation_challenge.evaluate)": [[3, "cellmap_segmentation_challenge.evaluate.unzip_file", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_2d)": [[7, "cellmap_segmentation_challenge.models.unet_model_2D.Up", false]], "up (class in cellmap_segmentation_challenge.models.unet_model_3d)": [[8, "cellmap_segmentation_challenge.models.unet_model_3D.Up", false]], "vitvnet (class in cellmap_segmentation_challenge.models.vitnet)": [[9, "cellmap_segmentation_challenge.models.vitnet.ViTVNet", false]]}, "objects": {"": [[1, 0, 0, "-", "cellmap_segmentation_challenge"]], "cellmap_segmentation_challenge": [[3, 0, 0, "-", "evaluate"], [4, 0, 0, "-", "models"], [10, 0, 0, "-", "postprocess"], [11, 1, 1, "", "predict"], [12, 1, 1, "", "train"], [13, 0, 0, "-", "utils"]], "cellmap_segmentation_challenge.cli": [[2, 0, 0, "-", "evaluate"], [2, 0, 0, "-", "fetch_data"], [2, 0, 0, "-", "predict"], [2, 0, 0, "-", "train"]], "cellmap_segmentation_challenge.evaluate": [[3, 1, 1, "", "save_numpy_class_arrays_to_zarr"], [3, 1, 1, "", "save_numpy_class_labels_to_zarr"], [3, 1, 1, "", "score_instance"], [3, 1, 1, "", "score_label"], [3, 1, 1, "", "score_semantic"], [3, 1, 1, "", "score_submission"], [3, 1, 1, "", "score_volume"], [3, 1, 1, "", "unzip_file"]], "cellmap_segmentation_challenge.models": [[5, 0, 0, "-", "model_load"], [6, 0, 0, "-", "resnet"], [7, 0, 0, "-", "unet_model_2D"], [8, 0, 0, "-", "unet_model_3D"], [9, 0, 0, "-", "vitnet"]], "cellmap_segmentation_challenge.models.model_load": [[5, 1, 1, "", "load_best_val"], [5, 1, 1, "", "load_latest"]], "cellmap_segmentation_challenge.models.resnet": [[6, 2, 1, "", "ResNet"], [6, 2, 1, "", "Resnet2D"], [6, 2, 1, "", "Resnet3D"], [6, 2, 1, "", "ResnetBlock2D"], [6, 2, 1, "", "ResnetBlock3D"]], "cellmap_segmentation_challenge.models.resnet.Resnet2D": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.Resnet3D": [[6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock2D": [[6, 3, 1, "", "build_conv_block"], [6, 3, 1, "", "crop"], [6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.resnet.ResnetBlock3D": [[6, 3, 1, "", "build_conv_block"], [6, 3, 1, "", "crop"], [6, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D": [[7, 2, 1, "", "DoubleConv"], [7, 2, 1, "", "Down"], [7, 2, 1, "", "OutConv"], [7, 2, 1, "", "UNet_2D"], [7, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_2D.DoubleConv": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Down": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.OutConv": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.UNet_2D": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_2D.Up": [[7, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D": [[8, 2, 1, "", "DoubleConv"], [8, 2, 1, "", "Down"], [8, 2, 1, "", "OutConv"], [8, 2, 1, "", "UNet_3D"], [8, 2, 1, "", "Up"]], "cellmap_segmentation_challenge.models.unet_model_3D.DoubleConv": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Down": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.OutConv": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.UNet_3D": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.unet_model_3D.Up": [[8, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet": [[9, 2, 1, "", "Attention"], [9, 2, 1, "", "Block"], [9, 2, 1, "", "CNNEncoder"], [9, 2, 1, "", "Conv3dReLU"], [9, 2, 1, "", "DecoderBlock"], [9, 2, 1, "", "DecoderCup"], [9, 2, 1, "", "DoubleConv"], [9, 2, 1, "", "Down"], [9, 2, 1, "", "Embeddings"], [9, 2, 1, "", "Encoder"], [9, 2, 1, "", "Mlp"], [9, 2, 1, "", "RegistrationHead"], [9, 2, 1, "", "Transformer"], [9, 2, 1, "", "ViTVNet"], [9, 1, 1, "", "get_3DReg_config"], [9, 1, 1, "", "np2th"], [9, 1, 1, "", "swish"]], "cellmap_segmentation_challenge.models.vitnet.Attention": [[9, 3, 1, "", "forward"], [9, 3, 1, "", "transpose_for_scores"]], "cellmap_segmentation_challenge.models.vitnet.Block": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.CNNEncoder": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderBlock": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DecoderCup": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.DoubleConv": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Down": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Embeddings": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Encoder": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Mlp": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.Transformer": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.models.vitnet.ViTVNet": [[9, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.postprocess": [[10, 1, 1, "", "process_volume"], [10, 1, 1, "", "rescale_volume"], [10, 1, 1, "", "resize_volume"], [10, 1, 1, "", "threshold_volume"]], "cellmap_segmentation_challenge.utils": [[14, 0, 0, "-", "crops"], [15, 0, 0, "-", "dataloader"], [16, 0, 0, "-", "datasplit"], [17, 0, 0, "-", "fetch_data"], [18, 0, 0, "-", "loss"], [19, 0, 0, "-", "visualize"]], "cellmap_segmentation_challenge.utils.crops": [[14, 2, 1, "", "CropRow"], [14, 1, 1, "", "fetch_manifest"]], "cellmap_segmentation_challenge.utils.crops.CropRow": [[14, 4, 1, "", "alignment"], [14, 4, 1, "", "dataset"], [14, 4, 1, "", "em_url"], [14, 3, 1, "", "from_csv_row"], [14, 4, 1, "", "gt_url"], [14, 4, 1, "", "id"]], "cellmap_segmentation_challenge.utils.dataloader": [[15, 1, 1, "", "get_dataloader"]], "cellmap_segmentation_challenge.utils.datasplit": [[16, 1, 1, "", "get_csv_string"], [16, 1, 1, "", "get_dataset_counts"], [16, 1, 1, "", "make_datasplit_csv"]], "cellmap_segmentation_challenge.utils.fetch_data": [[17, 1, 1, "", "copy_store"], [17, 1, 1, "", "get_array_objects"], [17, 1, 1, "", "get_chunk_keys"], [17, 1, 1, "", "get_fibsem_path"], [17, 1, 1, "", "get_group_objects"], [17, 1, 1, "", "get_store_url"], [17, 1, 1, "", "get_url"], [17, 1, 1, "", "partition_copy_store"], [17, 1, 1, "", "read_group"], [17, 1, 1, "", "resolve_em_url"], [17, 1, 1, "", "subset_to_slice"]], "cellmap_segmentation_challenge.utils.loss": [[18, 2, 1, "", "CellMapLossWrapper"]], "cellmap_segmentation_challenge.utils.loss.CellMapLossWrapper": [[18, 3, 1, "", "forward"]], "cellmap_segmentation_challenge.utils.visualize": [[19, 1, 1, "", "save_result_figs"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [10, 20, 25], "0": [0, 3, 9, 10, 11, 12, 15, 16, 20, 25, 27], "0001": 12, "03385": 6, "1": [0, 6, 9, 12, 15, 16, 20, 27], "10": [0, 27], "1000": [12, 15], "11": [20, 25], "12": 16, "128": [3, 9, 12], "1512": 6, "16": [0, 25, 27], "180": [12, 15], "2": [0, 3, 6, 9, 11, 20, 25, 27], "2019": 25, "255": 11, "2d": [15, 20, 25], "2d_resnet": 12, "2d_unet": 12, "2x2": 25, "3": [9, 12, 16, 20], "3d": [3, 15, 20], "3d_resnet": 12, "3d_unet": 12, "4": [0, 3, 27], "42": 12, "5": [0, 10, 12, 15, 25, 27], "6": 6, "64": 6, "7": 16, "8": [0, 12, 25, 27], "8x8x8": 20, "8x8x8nm": 20, "A": [3, 6, 14, 16, 20, 25], "And": [0, 27], "As": 25, "At": 25, "But": [0, 25, 27], "By": [16, 25], "For": [0, 3, 11, 15, 20, 25, 27], "If": [10, 11, 12, 16, 25], "In": [0, 25, 27], "It": 20, "OR": 3, "The": [0, 3, 5, 10, 11, 12, 14, 16, 17, 19, 20, 25, 27], "These": 17, "To": [0, 20, 25, 27], "With": 25, "_": [3, 12, 25], "_loss": 18, "_weightedloss": 18, "abbrevi": 25, "abl": 25, "about": 25, "abov": [0, 25, 27], "access": 25, "accord": 25, "account": 20, "accuraci": 3, "acquir": 25, "acronym": 25, "across": 3, "activ": [6, 20], "add": 20, "addit": 25, "addition": 25, "address": [0, 25, 27], "adjac": 25, "adopt": 25, "advent": 25, "affin": 11, "after": [12, 20, 26], "afterward": [7, 8, 9, 18], "against": [0, 3, 27], "aic_desmosom": 25, "aim": 25, "align": 14, "all": [3, 7, 8, 9, 10, 16, 17, 18, 20, 25], "allow": 10, "along": [20, 25], "alreadi": [12, 20, 25], "also": [0, 20, 25, 27], "altern": 25, "although": [7, 8, 9, 18], "alwai": [15, 20], "amazon": 25, "amount": 25, "an": [5, 10, 12, 20, 25], "analysi": 25, "angl": 15, "ani": [0, 12, 15, 25, 27], "annot": [20, 22], "anoth": 25, "anyon": 25, "anyth": 12, "apart": 25, "appli": [6, 10, 12, 15, 25], "applic": [0, 25, 27], "ar": [0, 10, 12, 16, 20, 25, 27], "arang": [0, 27], "arbitrari": 10, "architectur": 12, "argument": [12, 20], "around": 25, "arrai": [0, 3, 10, 15, 17, 20, 27], "array_info": 15, "art": 25, "arxiv": 6, "assum": [20, 25], "attempt": [0, 27], "attent": [9, 21], "attr": [0, 27], "attract": 25, "attribut": [0, 25, 27], "avail": [20, 25], "averag": 25, "ax": [0, 12, 15, 27], "axi": [15, 25], "b": 20, "backend": 25, "background": [3, 20, 25], "base": [0, 25, 27], "basestor": 17, "batch": [12, 15], "batch_siz": [12, 15, 17], "becam": 25, "becaus": [0, 25, 27], "been": 25, "befor": [6, 25], "being": [16, 17], "belong": 11, "below": 20, "best": [5, 12], "better": [5, 25], "beyond": 25, "bilinear": 7, "binari": [3, 20], "bit": 25, "block": [6, 9, 11, 21, 25], "bool": [5, 6, 16], "boolean": 20, "both": [7, 8, 9, 18, 20], "boundlogg": 17, "branch": 26, "brows": 25, "bucket": 25, "build": 25, "build_conv_block": 6, "built": 20, "bulk": 25, "c": [0, 25, 27], "call": [7, 8, 9, 10, 12, 18, 25], "callabl": 10, "came": 25, "campu": [0, 25, 27], "can": [0, 11, 12, 20, 25, 27], "cannot": 25, "care": [7, 8, 9, 18], "cd": 20, "cell": [3, 25], "cellmap": [17, 25, 26], "cellmap_schema": [0, 22, 23, 24, 27], "cellmap_segmentation_challeng": [20, 21], "cellmapdataload": 15, "cellmaplosswrapp": [18, 21], "cellular": 25, "center": 6, "certain": 25, "chanel": 11, "chang": [25, 26], "channel": [6, 11], "checkpoint": [5, 12, 20], "choos": 20, "chosen": [15, 25], "chunk": [0, 17, 27], "clariti": 20, "class": [0, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 25, 27], "classmethod": 14, "cli": 20, "client": 25, "clone": 26, "cloud": [0, 25, 27], "cnnencod": [9, 21], "coarsen": 25, "coarser": 25, "code": [25, 26], "coicind": 25, "coin": 25, "collabor": 25, "collect": 25, "com": [20, 26], "combin": [3, 11], "combined_scor": 3, "come": [0, 25, 27], "command": [0, 20, 27], "common": 25, "commun": 25, "compactli": 25, "complet": 25, "complex": 10, "compli": [0, 25, 27], "complic": 25, "compress": 25, "compressor": [0, 27], "compris": 25, "comput": [7, 8, 9, 18], "config": [9, 12], "config_path": 12, "configur": 12, "confirm": [0, 27], "connect": 6, "consist": 25, "constraint": 25, "construct": [6, 12], "constructor": 12, "consum": [0, 25, 27], "contain": [10, 12, 15, 20, 25], "contigu": 25, "continu": 25, "contribut": 20, "conv": [6, 9], "conv3drelu": [9, 21], "conveni": [20, 25], "convent": [0, 25, 27], "convention": 25, "convert": [9, 20, 25], "convolut": 6, "copi": [17, 25], "copy_stor": [17, 21], "core": 17, "corner": 25, "corpuscl": 25, "correct": [20, 25], "correctli": [0, 25, 27], "correspond": [3, 10, 20], "cosem": [0, 23, 27], "cost": 25, "could": [15, 25], "count": 16, "cover": 25, "creat": [14, 17, 20, 25], "crop": [6, 16, 17, 20, 21], "crop_path": 17, "croprow": [14, 21], "csc": 20, "csv": [12, 14, 16], "csv_path": 16, "cuda": 15, "curl": 20, "current": 25, "data": [0, 3, 6, 10, 11, 12, 15, 16, 17, 25, 27], "data_d": [0, 27], "dataclass": 14, "dataload": [12, 21], "datapath": 16, "datapath_prefix": 16, "dataset": [0, 11, 12, 14, 16, 27], "datasplit": [12, 15, 21], "datasplit_path": [12, 15], "date": 25, "de": 12, "decid": 25, "decis": 25, "declar": 25, "decoderblock": [9, 21], "decodercup": [9, 21], "deem": 25, "default": [6, 10, 11, 12, 16, 17, 20], "defin": [0, 7, 8, 9, 12, 15, 18, 25, 27], "denot": 25, "depend": [20, 25, 26], "depict": 25, "deriv": 25, "describ": 25, "design": [20, 25], "dest": [17, 20], "dest_stor": 17, "detail": 25, "develop": [0, 25, 27], "devic": 15, "dice": 3, "dice_scor": 3, "dict": [3, 10, 11, 16], "dictionari": [3, 11, 12, 15, 16], "did": [0, 25, 27], "differ": 25, "dim": 6, "dimens": [0, 6, 25, 27], "dimension_ord": [0, 27], "dimension_separ": [0, 27], "directli": 25, "directori": [3, 5, 20, 25, 26], "disk": [0, 27], "displai": 25, "disrupt": 25, "distanc": [3, 25], "distinct": 25, "distinguish": 25, "distribut": 25, "divid": 25, "do": [0, 16, 20, 25, 27], "document": [12, 20, 25, 26], "doe": [12, 25], "doubleconv": [7, 8, 9, 21], "down": [7, 8, 9, 21], "downsampl": 6, "downscal": 25, "dry_run": 16, "dtype": [0, 27], "dure": 25, "e": [20, 25], "each": [3, 10, 11, 12, 15, 16, 20, 25], "earli": 25, "earlier": [0, 27], "easi": 20, "edit": 20, "effort": 25, "egment": 25, "either": [15, 20], "electron": 25, "ellular": 25, "em": [0, 16, 20, 25, 27], "em_source_path": 17, "em_source_root": 17, "em_url": 14, "embed": [9, 21], "emit": 25, "encod": [9, 21], "end": [3, 20, 25], "end1": 11, "end2": 11, "endo": 3, "enorm": 25, "ensur": 25, "entail": 25, "entir": 11, "epoch": [12, 15], "equal": 25, "er": 12, "er_palm": 25, "era": 25, "error": [0, 27], "especi": 25, "essenti": 25, "estim": 25, "etc": 25, "evalu": [20, 21], "everi": [7, 8, 9, 18, 25], "exampl": [3, 11, 15, 20, 25], "except": 20, "exclud": [0, 27], "exist": [5, 12, 17, 20, 25], "explain": 25, "express": 25, "extend": 25, "extens": 20, "f": [0, 27], "face": 25, "factor": 25, "fail": [0, 27], "fals": [3, 6, 7, 8, 9, 16], "far": 25, "fastest": 20, "featur": [9, 25], "feel": 25, "fetch": [14, 20], "fetch_data": 21, "fetch_manifest": [14, 21], "few": 25, "fib": [17, 25], "fibsem": [0, 16, 17, 25, 27], "figur": 19, "figures_save_path": 19, "file": [0, 3, 10, 12, 14, 15, 16, 20, 25, 27], "filenam": [3, 20], "filesystem": 20, "fill_valu": [0, 27], "filter": [0, 27], "find": [16, 25], "fine": 25, "first": [20, 25], "flag": 20, "flexibl": 20, "flip": [0, 27], "float": [3, 10, 11, 15, 16], "fluent": 25, "fluoresc": 25, "folder": 20, "follow": [0, 3, 20, 25, 27], "foo": [0, 27], "footprint": 25, "forc": [16, 25], "force_all_class": 16, "form": [11, 25], "formal": [0, 27], "format": [0, 11, 20, 27], "former": [7, 8, 9, 18], "forward": [6, 7, 8, 9, 18], "found": [16, 25], "freedom": [0, 27], "from": [0, 5, 10, 12, 14, 15, 17, 20, 25, 27], "from_arrai": [0, 27], "from_csv_row": 14, "front": 25, "function": [3, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 25], "further": 25, "futur": 25, "g": 25, "gener": [3, 12, 17, 20, 25], "generos": 25, "geometr": 3, "get": [15, 16, 17], "get_3dreg_config": [9, 21], "get_array_object": [17, 21], "get_chunk_kei": [17, 21], "get_csv_str": [16, 21], "get_dataload": [15, 21], "get_dataset_count": [16, 21], "get_fibsem_path": [17, 21], "get_group_object": [17, 21], "get_store_url": [17, 21], "get_url": [17, 21], "git": [20, 26], "github": [20, 25, 26], "give": [0, 25, 27], "given": [6, 10, 15, 16], "goal": 25, "googl": 25, "grid": 25, "ground": 3, "ground_truth": 3, "groundtruth": [16, 20], "group": [0, 17, 25, 27], "group_model": [0, 27], "groupmetadata": [0, 27], "grown": 25, "gt": [0, 25, 27], "gt_url": 14, "guid": [0, 27], "ha": 25, "hand": 25, "happen": 25, "hausdorff_distance_max": 3, "haussdorf": 3, "haussdorf_dist": 3, "have": [20, 25], "hela": 25, "help": 20, "here": [0, 20, 25, 27], "hidden_st": 9, "hierachi": 25, "hierarchi": [20, 25], "highest": 25, "histor": 25, "histori": 25, "home": 25, "hook": [7, 8, 9, 18], "host": 25, "hostedtoolcach": 16, "how": [0, 20, 27], "howev": 25, "http": [6, 20, 26], "human": 25, "hwio": 9, "hyperparamet": 12, "i": [0, 3, 5, 6, 10, 11, 12, 15, 16, 20, 27], "i8": [0, 27], "icroscopi": 25, "id": [14, 20], "identifi": 25, "ignor": [7, 8, 9, 12, 18], "imag": [0, 6, 19, 27], "imageri": 25, "img_siz": 9, "immut": 25, "impair": 25, "implement": [6, 25], "import": [0, 27], "improv": 20, "in_channel": [7, 8, 9], "in_dataset": 11, "includ": [11, 12, 16, 25], "independ": 12, "index": 20, "indic": [0, 11, 25, 27], "individu": 25, "induc": 25, "inf": 3, "info": 15, "inform": [12, 20, 25], "initi": [6, 7, 8, 9, 12, 18], "inner_arrai": 17, "input": [0, 6, 10, 11, 12, 15, 19, 27], "input_array_info": [12, 15], "input_block_shap": 11, "input_contain": 10, "input_id": 9, "input_nc": 6, "insid": 25, "instal": [20, 26], "instanc": [3, 7, 8, 9, 18, 20, 25], "instance_class": 3, "instancenorm": 6, "instancenorm2d": 6, "instancenorm3d": 6, "instead": [7, 8, 9, 18, 25], "institut": 25, "instruct": 20, "int": [6, 10, 11, 14, 15], "intend": 25, "inter": 25, "interact": [20, 25], "interest": [11, 25], "intern": [7, 8, 9, 18, 25], "intersect": 3, "introduc": 25, "invent": 25, "involv": 25, "invovl": 15, "iou": 3, "issu": [0, 27], "iter": [12, 15, 17], "iterations_per_epoch": [12, 15], "its": 25, "janelia": [0, 17, 20, 25, 26, 27], "jpeg": 25, "jpg": 25, "jrc": 25, "jrc_cos7": 25, "jrc_dauer": 25, "jrc_hela": [0, 25, 27], "jrc_macrophag": 25, "jrc_mu": 25, "json": [3, 25], "just": 16, "keep": 25, "kei": [10, 17, 25], "kept": 25, "kernel_s": 9, "keyword": 12, "known": 25, "kwarg": [6, 17, 18], "l": 20, "label": [3, 10, 11, 16, 20, 25], "label1": 3, "label2": 3, "label3": 3, "label_nam": [3, 20], "label_scor": 3, "larg": [0, 11, 25, 27], "larger": 25, "largest": 25, "larva": 25, "last": 10, "latest": [5, 12], "latter": [7, 8, 9, 18], "layer": 6, "ld": 3, "learn": [12, 25], "learning_r": 12, "least": [16, 25], "lection": 25, "led": 25, "len": 3, "less": 25, "level": 25, "lib": 16, "librari": [0, 27], "light": 25, "like": [0, 15, 25, 27], "limit": 25, "line": [0, 20, 27], "linear": 6, "link": 25, "list": [3, 10, 11, 12, 15, 16, 17, 20, 25], "lm": 25, "lm_488": 25, "load": [5, 10, 12, 15, 25], "load_best_v": [5, 21], "load_latest": [5, 21], "load_model": 12, "local": [0, 20, 25, 26, 27], "locat": [0, 25, 27], "log": [5, 12, 17, 20], "logdir": [12, 20], "logs_save_path": [5, 12], "long": 16, "longer": 25, "look": 25, "loss": [20, 21], "loss_fn": 18, "lossi": 25, "lot": 25, "low_is_best": 5, "lower": 5, "lt": [0, 25, 27], "lyso": 3, "m": 25, "machin": 25, "mai": [12, 17, 20, 25], "main": [25, 26], "maintain": 25, "make": [16, 20, 25, 26], "make_datasplit_csv": [16, 21], "mamba": 20, "manag": 26, "mani": 25, "manifest": 14, "map": [15, 25], "massiv": 25, "match": [6, 11, 20], "matter": 25, "max_raw": 11, "maximum": 11, "md": [12, 20], "mean": [3, 25], "member": [0, 27], "mere": 25, "mesh": 25, "messag": [0, 27], "metadata": [0, 27], "metamorphos": 25, "method": [0, 25, 27], "metric": 20, "micro": 20, "micromamba": 20, "microscopi": 25, "mid_channel": [7, 8, 9], "might": 25, "migrat": 25, "min_raw": 11, "minimum": 11, "mirror": [12, 15], "mito": [3, 16], "mito_pr": 25, "mito_seg": 25, "mitochondria": 25, "mkdoc": 26, "mlp": [9, 21], "modal": 25, "mode": 20, "model": [0, 11, 12, 21, 25, 27], "model_dump": [0, 27], "model_kwarg": 12, "model_load": [20, 21], "model_nam": 12, "model_save_path": [5, 12], "model_to_load": 12, "modif": 17, "modul": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 20], "monitor": [12, 20], "more": [10, 12, 20], "motiv": 25, "mous": 25, "move": 25, "mt": 3, "much": [0, 27], "mulitscal": [0, 27], "multi": [0, 25, 27], "multipl": 11, "multiscal": [0, 23, 24, 27], "multscal": 25, "must": [15, 25], "n": 20, "n5": [20, 25], "n_block": 6, "n_channel": [7, 8, 9], "n_class": [7, 8], "n_downsampl": 6, "name": [0, 3, 11, 12, 16, 20, 27], "navig": 26, "ndarrai": 3, "ndim": 6, "nearest": 25, "need": [0, 7, 8, 9, 12, 18, 20, 25, 27], "needlessli": 25, "nesteddirectorystor": [0, 27], "net": [7, 8, 9], "neuroglanc": [20, 25], "neuroglancer_n5": [0, 24, 27], "never": 25, "new": [20, 25], "newer": 25, "ngf": 6, "ngff": 25, "nm": [0, 20, 27], "nn": [5, 6, 7, 8, 9, 11, 18], "node": 17, "non": [6, 25], "none": [0, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 27], "norm_lay": 6, "normal": [3, 6], "normalized_haussdorf_dist": 3, "note": [0, 20, 25, 27], "novo": 12, "np": [0, 3, 27], "np2th": [9, 21], "nuc": [3, 11, 12, 16], "num_voxel": 3, "number": [3, 6, 12, 15, 20, 25], "numpi": [0, 3, 10, 20, 25, 27], "o": [0, 10, 11, 25, 27], "object": [5, 14, 17, 20, 25], "obviou": 25, "often": 25, "oihw": 9, "old": 25, "older": 25, "om": 25, "onc": [20, 25], "one": [7, 8, 9, 16, 18, 20, 25], "onli": [16, 25], "onlin": 20, "open": [0, 25, 27], "openorganel": 25, "oper": [0, 25, 27], "opt": 16, "optim": 12, "option": [10, 11, 12, 15, 16, 20], "order": [0, 10, 27], "org": 6, "organ": [0, 25, 27], "organel": 25, "origin": [6, 25], "other": [12, 25], "otherwis": [16, 20], "our": [0, 25, 27], "out": [0, 25, 27], "out_channel": [7, 8, 9], "out_dataset": 11, "outconv": [7, 8, 21], "outer_arrai": 17, "output": [6, 10, 11, 18, 19], "output_nc": 6, "output_path": 10, "output_shap": 10, "output_voxel_s": 10, "over": [3, 17], "overall_scor": 3, "overhaul": 25, "overlap": 25, "overridden": [7, 8, 9, 18], "overwrit": [3, 20], "own": 25, "pacinian": 25, "pacininan": 25, "packag": [0, 16, 20, 26, 27], "pad": 9, "padding_typ": 6, "page": 20, "paper": [6, 25], "parallel": 25, "param": 6, "paramet": [0, 3, 5, 10, 11, 12, 14, 15, 16, 17, 18, 19, 25, 27], "paramt": [0, 27], "parlanc": 25, "pars": 25, "part": [7, 8, 25], "parti": 25, "partit": 25, "partition_copy_stor": [17, 21], "pass": [0, 7, 8, 9, 12, 18, 27], "path": [0, 3, 5, 10, 11, 12, 15, 16, 17, 19, 20, 25, 26, 27], "pathlik": [10, 11], "pdf": 6, "per": [11, 12, 15, 20], "perform": [0, 7, 8, 9, 18, 27], "perox": 3, "physic": 25, "piec": 25, "pip": [0, 20, 27], "pixelresolut": [0, 25, 27], "place": 5, "plan": 25, "platform": 25, "pm": 20, "poetri": 26, "pool": 17, "portal": [20, 25], "possibli": 9, "postprocess": [20, 21], "potenti": 25, "pre": 12, "precomput": 25, "pred": 3, "pred_label": 3, "pred_label_path": 3, "pred_volume_path": 3, "predict": [3, 12, 21, 25], "predict_2d": 20, "predict_3d": 20, "prefix": [16, 25], "present": [0, 16, 19, 27], "pressur": 25, "preview": 26, "previou": 25, "primari": 25, "principl": 25, "print": [0, 27], "probabl": [15, 16], "problem": [0, 25, 27], "process": 10, "process_func": 10, "process_volum": [10, 21], "produc": [0, 25, 27], "product": 25, "program": 25, "progress": [12, 20], "projct": 25, "project": [0, 25, 27], "proport": 12, "provid": [0, 12, 15, 20, 25, 27], "pth": [12, 20], "public": 25, "publish": 25, "pull": 26, "purpos": 25, "put": [0, 27], "py": 20, "pydant": [0, 27], "pyramid": 25, "pytest": 26, "python": [0, 10, 12, 16, 20, 25, 27], "python3": 16, "pytorch": 12, "r": 20, "rais": [0, 27], "ran": 25, "randint": 3, "random": [3, 12, 25], "random_se": 12, "randomli": 15, "rang": [0, 3, 15, 27], "rarer": 25, "rate": 12, "raw": [11, 16, 25], "raw_nam": 16, "read": 25, "read_group": [17, 21], "readabl": 25, "readm": [12, 20], "reason": 25, "recip": [7, 8, 9, 18], "recommend": 20, "recon": 16, "reconstruct": 17, "redirect": 25, "reflect": [6, 12], "region": [11, 17, 25], "regist": [7, 8, 9, 18], "registrationhead": [9, 21], "rel": [0, 17, 25, 27], "relu": 6, "remov": 25, "renam": 25, "render": 26, "replic": 6, "repo": 20, "repositori": [25, 26], "repres": [14, 25], "reproduc": 12, "request": [16, 26], "requir": [3, 20, 25], "resblock": 6, "rescal": 10, "rescale_volum": [10, 21], "research": [0, 25, 27], "reshap": [0, 27], "resiz": 10, "resize_volum": [10, 21], "resnet": 21, "resnet2d": [6, 21], "resnet3d": [6, 21], "resnetblock2d": [6, 21], "resnetblock3d": [6, 21], "resolv": 17, "resolve_em_url": [17, 21], "resourc": 25, "respect": [16, 20, 25], "respresent": 25, "result": [0, 3, 17, 20, 25, 27], "result_fil": 3, "retriev": 20, "return": [3, 6, 10, 11, 12, 14, 15, 16, 17], "rganel": 25, "roi": 11, "root": 25, "rotat": [12, 15], "row": 14, "run": [7, 8, 9, 12, 18, 20, 26], "s0": [0, 25, 27], "s1": [0, 25, 27], "s2": 25, "s3": [0, 27], "saalfeldlab": 25, "safe": 25, "same": [10, 11, 12, 20, 25], "sampl": [20, 25], "satisfi": 25, "save": [3, 11, 12, 19, 20, 25], "save_numpy_binary_to_zarr": [3, 20], "save_numpy_class_arrays_to_zarr": [3, 21], "save_numpy_class_labels_to_zarr": [3, 21], "save_numpy_labels_to_zarr": [3, 20], "save_path": 3, "save_result_fig": [19, 21], "scalar": 25, "scale": [0, 12, 15, 20, 25, 27], "scene": 25, "schema": [20, 26], "scheme": 25, "score": [3, 5], "score_inst": [3, 21], "score_label": [3, 21], "score_semant": [3, 21], "score_submiss": [3, 21], "score_volum": [3, 21], "screenshot": 25, "script": [12, 20], "scriptmodul": [7, 8, 9, 18], "search": [5, 16, 20], "search_path": [5, 16], "second": 25, "section": 25, "see": [0, 12, 20, 25, 27], "seed": 12, "segment": [3, 15, 25], "select": 25, "self": 14, "sem": [17, 25], "semant": [3, 25], "separ": [11, 25], "sequenc": [11, 15, 19, 25], "serv": 26, "servic": 25, "set": [12, 16, 25], "sever": 25, "sh": 20, "shape": [0, 6, 10, 11, 12, 15, 20, 25, 27], "share": [7, 8, 9, 18, 25], "shell": 20, "ship": [0, 27], "short": 25, "should": [7, 8, 9, 10, 12, 15, 18, 20, 25], "sign": 20, "silent": [7, 8, 9, 12, 18], "similar": 25, "simpl": 25, "simpli": [20, 25], "sinc": [7, 8, 9, 18], "singl": [3, 11, 20, 25], "site": 16, "size": [10, 12, 15, 25], "skip": [6, 9], "skip_channel": 9, "slice": 17, "small": [0, 27], "smaller": 25, "smooth": 25, "so": [0, 25, 27], "softwar": 25, "solv": 25, "some": 25, "sourc": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 25], "source_stor": 17, "space": 25, "spatial": [6, 12, 15, 25], "spatial_transform": [12, 15], "special": 25, "specif": [0, 25, 27], "specifi": [3, 11, 12, 15, 19, 20, 25], "specimen": 25, "split": [11, 12, 15], "src": 20, "stai": 25, "standard": [6, 25], "start": 25, "start1": 11, "start2": 11, "state": [7, 8, 9, 18], "still": 25, "storag": [0, 17, 25, 27], "store": [0, 17, 25, 27], "str": [3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 19], "strategi": 25, "strict": 25, "stride": 9, "string": [11, 12, 16, 17], "structur": [0, 3, 25, 27], "style": 25, "subclass": [7, 8, 9, 18], "submiss": [3, 20], "submission_path": [3, 20], "submit": 26, "subsampl": 25, "subsequ": 25, "subset_to_slic": [17, 21], "succe": [0, 27], "success": 25, "suffix": 25, "summari": [0, 27], "support": [0, 17, 25, 27], "sure": 20, "swish": [9, 21], "system": 25, "t": 25, "take": [7, 8, 9, 10, 18, 25], "taken": 25, "target": [12, 15, 18, 19, 25], "target_array_info": [12, 15], "tb": [0, 25, 27], "team": [0, 25, 27], "techniqu": 25, "technologi": 25, "tem": 25, "tensor": [18, 19], "tensorboard": [5, 12, 20], "terabyt": [0, 27], "termin": [12, 20], "test": [0, 3, 26, 27], "test_volum": 3, "test_volume_nam": [3, 20], "text": [0, 27], "than": [0, 25, 27], "thei": [0, 11, 20, 25, 27], "them": [7, 8, 9, 17, 18, 20, 25], "thi": [0, 7, 8, 9, 10, 12, 15, 17, 18, 20, 25, 27], "third": 25, "thoroughli": 20, "those": [0, 27], "threadpoolexecutor": 17, "threshold": [10, 25], "threshold_volum": [10, 21], "through": 20, "thu": 25, "thumbnail": 25, "time": [6, 25], "tissu": 25, "tmp": [0, 27], "to_zarr": [0, 27], "todo": 20, "togeth": 25, "toi": [0, 27], "too": [0, 27], "tool": [0, 17, 25, 27], "top": [20, 25], "torch": [5, 6, 11, 15, 19], "track": 25, "tracker": [0, 27], "train": [15, 16, 21], "train_2d": 20, "train_3d": 20, "transform": [9, 12, 15, 21, 25], "transit": 25, "translat": 25, "transpos": [12, 15], "transpose_for_scor": 9, "trasposit": 15, "trilinear": [7, 8], "true": [5, 7, 8, 9, 16, 25], "truth": 3, "truth_label": 3, "truth_path": 3, "try": 25, "tupl": [11, 14, 15, 17], "twice": 25, "two": 25, "type": [3, 6, 11, 12, 14, 15, 16, 17, 25], "typic": 25, "u": [0, 7, 8, 25, 27], "uint16": [0, 25, 27], "uint8": [16, 25], "ultim": 25, "unchang": 25, "under": 25, "underscor": 25, "understand": 25, "unet_2d": [7, 21], "unet_3d": [8, 21], "unet_model_2d": [20, 21], "unet_model_3d": 21, "union": 3, "uniqu": [20, 25], "unit": [0, 25, 27], "until": 25, "unzip": 3, "unzip_fil": [3, 21], "up": [7, 8, 21], "upath": 10, "upsampl": 9, "uri": 17, "url": [0, 14, 17, 25, 27], "us": [0, 10, 11, 12, 15, 16, 17, 20, 25, 26, 27], "usag": [3, 16], "use_batchnorm": 9, "use_bia": 6, "use_dropout": 6, "user": 25, "util": [20, 21], "v": 9, "val": [12, 15], "valid": [5, 6, 12, 15, 16, 20, 25], "validation_prob": [12, 16], "valu": [11, 15, 25], "varieti": 25, "ve": 3, "veri": 25, "version": 25, "vi": 9, "via": 25, "view": [20, 25], "viewabl": 20, "vim": 3, "visual": [21, 25], "visul": 25, "vit": 9, "vitnet": [12, 21], "vitvnet": [9, 21], "volum": [3, 10, 20, 25], "voxel": [3, 10, 20], "wa": 25, "wai": [20, 25], "want": [20, 25], "wasn": 25, "we": [0, 6, 20, 25, 27], "web": 25, "weight": [5, 9, 20], "welcom": 20, "well": [12, 20, 25], "were": 25, "what": [0, 27], "when": [0, 15, 25, 27], "where": [0, 25, 27], "whereev": 25, "whether": [0, 5, 27], "which": [0, 12, 16, 17, 20, 25, 27], "while": [7, 8, 9, 18, 25], "wide": [0, 25, 27], "window": 25, "within": [7, 8, 9, 10, 15, 18, 25], "word": 25, "work": [0, 25, 27], "worker": 15, "workflow": 25, "would": [0, 25, 27], "write": [0, 10, 16, 25, 27], "written": 16, "x": [0, 6, 7, 8, 9, 11, 12, 15, 27], "x1": [7, 8], "x2": [7, 8], "x64": 16, "y": [0, 11, 12, 15, 20, 27], "yarl": 14, "year": 25, "yet": 25, "you": [0, 20, 25, 27], "your": 26, "z": [11, 15], "zarr": [0, 3, 10, 16, 17, 20, 25, 27], "zarr_vers": [0, 27], "zero": 6, "zip": [3, 20], "zip_path": 3, "zoom": 25}, "titles": ["CellMap Schemas", "cellmap_segmentation_challenge", "cellmap_segmentation_challenge.cli package", "cellmap_segmentation_challenge.evaluate", "cellmap_segmentation_challenge.models", "cellmap_segmentation_challenge.models.model_load", "cellmap_segmentation_challenge.models.resnet", "cellmap_segmentation_challenge.models.unet_model_2D", "cellmap_segmentation_challenge.models.unet_model_3D", "cellmap_segmentation_challenge.models.vitnet", "cellmap_segmentation_challenge.postprocess", "cellmap_segmentation_challenge.predict", "cellmap_segmentation_challenge.train", "cellmap_segmentation_challenge.utils", "cellmap_segmentation_challenge.utils.crops", "cellmap_segmentation_challenge.utils.dataloader", "cellmap_segmentation_challenge.utils.datasplit", "cellmap_segmentation_challenge.utils.fetch_data", "cellmap_segmentation_challenge.utils.loss", "cellmap_segmentation_challenge.utils.visualize", "CellMap Segmentation Challenge", "src", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Outline", "Adding to this project", "CellMap Schemas"], "titleterms": {"ad": 26, "align": 25, "an": [0, 27], "api": 20, "arrai": 25, "cellmap": [0, 20, 27], "cellmap_segmentation_challeng": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "challeng": 20, "check": [0, 27], "chunk": 25, "cli": [0, 2, 27], "clone": 20, "contain": [0, 27], "content": [2, 20], "contribut": [0, 27], "coordin": 25, "cosem": 25, "creat": [0, 27], "crop": 14, "data": 20, "dataload": 15, "dataset": 25, "datasplit": [2, 16], "download": 20, "downsampl": 25, "environ": 20, "evalu": [2, 3], "exampl": [0, 27], "fetch_data": [2, 17], "final": 20, "format": 25, "get": 20, "hierarchi": [0, 27], "i": 25, "imag": 25, "inspect": [0, 27], "instal": [0, 27], "layout": 25, "link": 20, "loss": 18, "metadata": 25, "model": [4, 5, 6, 7, 8, 9, 20], "model_load": 5, "modul": 2, "multipl": 25, "multiresolut": 25, "multiscal": 25, "n5": [0, 27], "name": 25, "neuroglanc": [0, 27], "outlin": 25, "packag": 2, "post": 20, "postprocess": 10, "predict": [2, 11, 20], "process": 20, "project": 26, "repositori": 20, "resnet": 6, "s3": 25, "schema": [0, 27], "segment": 20, "set": 20, "src": 21, "start": 20, "structur": 20, "submit": 20, "submodul": 2, "test": 20, "thi": 26, "train": [2, 12, 20], "unet_model_2d": 7, "unet_model_3d": 8, "up": 20, "util": [13, 14, 15, 16, 17, 18, 19], "valid": [0, 27], "visual": 19, "vitnet": 9, "what": 25, "your": 20}})