[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cellmap-segmentation-challenge"
dynamic = ["version"]
description = "Repository of scripts to facilitate participation in CellMap's segmentation challenge. This includes downloading data, simple setups for training 2D and 3D models, workflows for prediction and post-processing on out-of-memory arrays, and evaluation of results against validation data."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = ["machine learning", "deep learning", "segmentation", "cellmap"]
authors = [
  { name = "Jeff Rhoades", email = "rhoadesj@janelia.hhmi.org" },
  { name = "Emma Avetissian", email = "avetissiane@janelia.hhmi.org" },
  { name = "Davis Vann Bennett", email = "davis.v.bennett@gmail.com" },
  { name = "Marwan Zouinkhi", email = "zouinkhim@hhmi.org" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "tensorboard",
  "tensorboardX",
  "cellmap-schemas==0.8.0",
  "click>=8, <9",
  "cellmap-data@git+https://github.com/janelia-cellmap/cellmap-data",
  "tqdm",
  "zarr < 3.0.0",
  "xarray-ome-ngff >= 3.1.1, <=4.0.0",
  "structlog",
  "yarl",
  "toolz",
  "ml-collections",
  "scipy",
  "numpy",
  "python-dotenv",
  "universal-pathlib",
  "neuroglancer",
  "scikit-learn",
  "scikit-image",
  ]

[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov", "mypy", "black"]
docs = [
    "sphinx",
    "sphinx-book-theme",
    "sphinx_mdinclude",
]

dev = [
    "ipython",
    "jupyter",
    "rich",
    "ruff",
    "snakeviz",
    "twine",
    "hatch",
    "pdbpp",
    "python-semantic-release",
    "cellmap-segmentation-challenge[test,docs]",
    "gunpowder",
    "matplotlib",
    "isort",
]

[project.urls]
Documentation = "https://github.com/janelia-cellmap/cellmap-segmentation-challenge#readme"
Issues = "https://github.com/janelia-cellmap/cellmap-segmentation-challenge/issues"
Source = "https://github.com/janelia-cellmap/cellmap-segmentation-challenge"

[tool.hatch.metadata]
allow-direct-references=true

[tool.hatch.version]
path = "src/cellmap_segmentation_challenge/__about__.py"

[tool.hatch.envs.default]
installer = "pip"
python = "3.11"

[tool.hatch.envs.test]
dependencies = ["pytest"]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/cellmap_segmentation_challenge tests}"

[tool.coverage.run]
source_pkgs = ["cellmap_segmentation_challenge", "tests"]
branch = true
parallel = true
omit = [
  "src/cellmap_segmentation_challenge/__about__.py",
]

[tool.coverage.paths]
cellmap_segmentation_challenge = ["src/cellmap_segmentation_challenge", "*/cellmap-segmentation-challenge/src/cellmap_segmentation_challenge"]
tests = ["tests", "*/cellmap-segmentation-challenge/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[project.scripts]
csc = "cellmap_segmentation_challenge.cli:run"

[tool.pixi.project]
channels = ["conda-forge", "pytorch"]
platforms = ["win-64", "linux-64", "osx-arm64", "osx-64"]

[tool.pixi.pypi-dependencies]
cellmap-segmentation-challenge = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev", "test", "docs"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.pixi.tasks]

[tool.pixi.dependencies]
python = ">=3.11"
numba = ">=0.60.0,<0.61"
torchvision = ">=0.20.1,<0.21"
pytorch = ">=2.5.1,<3"
numpy = ">=2.0.2,<3"

[tool.pixi.feature.dev.dependencies]
gunpowder = "*"
